namespace = espionage_system

#Instigate Domestic Unrest - TARGET
espionage_system.2 = {
    type = country_event

    #title = espionage_instigate_domestic_unrest_target.t 			# Title of the event; ADD LOCALISATION
    #desc = espionage_instigate_domestic_unrest_target.d 			# Description of the event; ADD LOCALISATION
    #flavor = espionage_instigate_domestic_unrest_target.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    hidden = yes
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_diplomatic_pact = { who = ROOT type = conduct_hostile_espionage is_initiator = yes }
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#Anger in incorporated states
		every_scope_state = {
			limit = { is_incorporated = yes }
			add_modifier = { name = domestic_unrest months = 3 is_decaying = yes }
		}
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		#Post notification in feed
		post_notification = espionage_instigate_domestic_unrest
		
	}

}

#Conduct Economic Sabotage - TARGET
espionage_system.4 = {
    type = country_event

    #title = espionage_conduct_economic_sabotage_target.t 			# Title of the event; ADD LOCALISATION
    #desc = espionage_conduct_economic_sabotage_target.d 			# Description of the event; ADD LOCALISATION
    #flavor = espionage_conduct_economic_sabotage_target.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

	hidden = yes
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_diplomatic_pact = { who = ROOT type = conduct_hostile_espionage is_initiator = yes }
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		#Stifle industry for a while
		every_scope_state = {
			remove_modifier = economic_sabotage
			add_modifier = { name = economic_sabotage months = 3 is_decaying = yes }
		}
		
		#Post notification in feed
		post_notification = espionage_conduct_economic_sabotage
		
	}

}

#Instigate Secessionist Movement - TARGET
espionage_system.6 = {
    type = country_event

    #title = espionage_instigate_secessionist_movement_target.t 			# Title of the event; ADD LOCALISATION
    #desc = espionage_instigate_secessionist_movement_target.d 			# Description of the event; ADD LOCALISATION
    #flavor = espionage_instigate_secessionist_movement_target.f 		# Flavor for event; ADD LOCALISATION, IF REQUIRED

    hidden = yes
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_diplomatic_pact = { who = ROOT type = conduct_hostile_espionage is_initiator = yes }
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		#Anger in unincorporated states
		every_scope_state = {
			limit = { is_incorporated = no }
			add_modifier = { name = nationalist_agitation months = 3 is_decaying = yes }
		}
		
		#Post notification in feed
		post_notification = espionage_instigate_secessionist_movement
		
	}

}

#Election Interference - TARGET
espionage_system.8 = {
    type = country_event

    #title = espionage_election_interference_target.t 			# Title of the event; ADD LOCALISATION
    #desc = espionage_election_interference_target.d 			# Description of the event; ADD LOCALISATION
    #flavor = espionage_election_interference_target.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    hidden = yes
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_diplomatic_pact = { who = ROOT type = conduct_hostile_espionage is_initiator = yes }
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		#Reduce momentum of ruling party
		random_active_party = { 
			limit = { 
				any_member = { is_in_government = yes } 
			}
			add_momentum = momentum_small_decrease
		}
		
		#Post notification in feed
		post_notification = espionage_election_interference
		
	}

}

#Terror Attack - TARGET
espionage_system.10 = {
    type = country_event
	placement = scope:terror_attack_state

    #title = espionage_terror_attack_target.t 					# Title of the event; ADD LOCALISATION
    #desc = espionage_terror_attack_target.d 					# Description of the event; ADD LOCALISATION
    #flavor = espionage_terror_attack_target.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	hidden = yes
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_diplomatic_pact = { who = ROOT type = conduct_hostile_espionage is_initiator = yes }
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		#Select a random state to attack
		random_scope_state = {
			limit = { is_incorporated = yes }
			state_region = {
				add_devastation = 10
			}
			save_scope_as = terror_attack_state
		}
		
		#Post notification in feed
		post_notification = espionage_terror_attack
		
	}

}

#Cyber Attack - TARGET
espionage_system.12 = {
    type = country_event

    #title = espionage_cyber_attack_target.t 					# Title of the event; ADD LOCALISATION
    #desc = espionage_cyber_attack_target.d 						# Description of the event; ADD LOCALISATION
    #flavor = espionage_cyber_attack_target.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	hidden = yes
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by previous event
		
    }
	
	immediate = {
	
		save_scope_as = espionage_victim
	
		#Guess the identity of attacker
		random_country = {
			limit = {
			
				NOT = { THIS = ROOT }
			
				#THIS is conducting hostile espionage in TARGET
				has_diplomatic_pact = { who = ROOT type = conduct_hostile_espionage is_initiator = yes }
				
			}
			save_scope_as = suspected_espionage_attacker
			
			remove_variable = espionage_attacker_var
		}
		
		#THIS is angry with FROM!
		change_relations = {
			country = scope:suspected_espionage_attacker
			value = -50
		}
		
		#Add embarassment
		if = {
			limit = { NOT = { has_modifier = embarassed_by_espionage } }
			add_modifier = { name = embarassed_by_espionage months = 3 is_decaying = yes }
		}
		
		#Apply cyber attack
		every_scope_building = {
			limit = { 
				is_building_type = building_communications_network 
				OR = { 
					has_active_production_method = pm_gps_service
					NOT = { has_active_production_method = pm_no_internet_services }
				}
			}
			hidden_effect = { remove_modifier = cyber_attack }
			add_modifier = { name = cyber_attack years = 1 is_decaying = yes }
		}
		
		#Post notification in feed
		post_notification = espionage_cyber_attack
		
	}

}