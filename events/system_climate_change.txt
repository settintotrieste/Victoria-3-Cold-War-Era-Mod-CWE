namespace = climate_change_system

# Climate Change Montreal Protocol
climate_change_system.1 = {
    type = country_event
	placement = scope:climate_change_summit_location

    title = montreal_protocol_climate.t 								# Title of the event; ADD LOCALISATION
    desc = montreal_protocol_climate.d 									# Description of the event; ADD LOCALISATION
    #flavor = montreal_protocol_climate.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/state_status_icons/pollution.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		# Event has not been fired before
		NOT = { has_variable = montreal_protocol_climate_ccs }			# CHANGE ****
		
		game_date >= 1987.9.16									# START DATE: Date colony became self governing ****
		game_date < 1997.9.16									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#Climate Change is an issue
		#has_journal_entry = je_climate_change_system
		
		#No restriction by legal union
		THIS_is_not_restricted_by_confederal_law = yes
		
		#Location is suitable
		any_state = {
			state_region = s:STATE_QUEBEC
			owner = {
				is_country_type = recognized
				is_at_war = no
				infamy < infamy_threshold:pariah
			}
		}
		
    }
	
	immediate = {
	
		random_state = {
			limit = {
				state_region = s:STATE_QUEBEC
				owner = {
					is_country_type = recognized
					is_at_war = no
					infamy < infamy_threshold:pariah
				}
			}
			save_scope_as = climate_change_summit_location 
		}
	
		# Fire only once
		set_variable = montreal_protocol_climate_ccs					# Change variable ****
		
	}
    
    option = {
        name = climate_change_system.option.1					# Accept
        highlighted_option = yes
		
		#Increase greeness
		if = {
			limit = { has_law_or_variant = law_type:law_no_environment_law }
			activate_law = law_type:law_weak_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_weak_environment_law }
			activate_law = law_type:law_moderate_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_moderate_environment_law }
			activate_law = law_type:law_strong_environment_law
		}
		else = {
			every_country = {
				limit = { has_law_or_variant = law_type:law_strong_environment_law }
				change_relations = { who = ROOT value = 25 }
			}
			change_infamy = -10
		}
		
		#Please greens
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 10
		}
		
    }
	
	option = {
        name = climate_change_system.option.2					# Reject
		default_option = yes
		
		#Please industrialists
		add_radicals = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 90
		}
		
    }

}

# The Earth Summit
climate_change_system.2 = {
    type = country_event
	placement = scope:climate_change_summit_location

    title = earth_summit_climate.t 								# Title of the event; ADD LOCALISATION
    desc = earth_summit_climate.d 								# Description of the event; ADD LOCALISATION
    #flavor = earth_summit_climate.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/state_status_icons/pollution.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		# Event has not been fired before
		NOT = { has_variable = earth_summit_climate_ccs }		# CHANGE ****
		
		game_date >= 1992.6.14									# START DATE: Date colony became self governing ****
		game_date < 2002.6.14									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#Climate Change is an issue
		#has_journal_entry = je_climate_change_system
		
		#No restriction by legal union
		THIS_is_not_restricted_by_confederal_law = yes
		
		#Location is suitable
		any_state = {
			state_region = s:STATE_RIO_DE_JANEIRO
			owner = {
				is_country_type = recognized
				is_at_war = no
				infamy < infamy_threshold:pariah
			}
		}
		
    }
	
	immediate = {
	
		random_state = {
			limit = {
				state_region = s:STATE_RIO_DE_JANEIRO
				owner = {
					is_country_type = recognized
					is_at_war = no
					infamy < infamy_threshold:pariah
				}
			}
			save_scope_as = climate_change_summit_location 
		}
	
		# Fire only once
		set_variable = earth_summit_climate_ccs					# Change variable ****
		
	}
    
    option = {
        name = climate_change_system.option.1					# Accept
        highlighted_option = yes
		
		#Increase greeness
		if = {
			limit = { has_law_or_variant = law_type:law_no_environment_law }
			activate_law = law_type:law_weak_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_weak_environment_law }
			activate_law = law_type:law_moderate_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_moderate_environment_law }
			activate_law = law_type:law_strong_environment_law
		}
		else = {
			every_country = {
				limit = { has_law_or_variant = law_type:law_strong_environment_law }
				change_relations = { who = ROOT value = 25 }
			}
			change_infamy = -10
		}
		
		#Please greens
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 20
		}
		
    }
	
	option = {
        name = climate_change_system.option.2					# Reject
		default_option = yes
		
		#Please industrialists
		add_radicals = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 80
		}
		
    }

}

# Kyoto Protocol
climate_change_system.3 = {
    type = country_event
	placement = scope:climate_change_summit_location

    title = kyoto_protocol_climate.t 							# Title of the event; ADD LOCALISATION
    desc = kyoto_protocol_climate.d 							# Description of the event; ADD LOCALISATION
    #flavor = kyoto_protocol_climate.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/state_status_icons/pollution.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		# Event has not been fired before
		NOT = { has_variable = kyoto_protocol_climate_ccs }		# CHANGE ****
		
		game_date >= 1997.12.11									# START DATE: Date colony became self governing ****
		game_date < 2007.12.11									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#Climate Change is an issue
		#has_journal_entry = je_climate_change_system
		
		#No restriction by legal union
		THIS_is_not_restricted_by_confederal_law = yes
		
		#Location is suitable
		any_state = {
			state_region = s:STATE_KANSAI
			owner = {
				is_country_type = recognized
				is_at_war = no
				infamy < infamy_threshold:pariah
			}
		}
		
    }
	
	immediate = {
	
		random_state = {
			limit = {
				state_region = s:STATE_KANSAI
				owner = {
					is_country_type = recognized
					is_at_war = no
					infamy < infamy_threshold:pariah
				}
			}
			save_scope_as = climate_change_summit_location 
		}
	
		# Fire only once
		set_variable = kyoto_protocol_climate_ccs				# Change variable ****
		
	}
    
    option = {
        name = climate_change_system.option.1					# Accept
        highlighted_option = yes
		
		#Increase greeness
		if = {
			limit = { has_law_or_variant = law_type:law_no_environment_law }
			activate_law = law_type:law_weak_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_weak_environment_law }
			activate_law = law_type:law_moderate_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_moderate_environment_law }
			activate_law = law_type:law_strong_environment_law
		}
		else = {
			every_country = {
				limit = { has_law_or_variant = law_type:law_strong_environment_law }
				change_relations = { who = ROOT value = 25 }
			}
			change_infamy = -10
		}
		
		#Please greens
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 30
		}
		
    }
	
	option = {
        name = climate_change_system.option.2					# Reject
		default_option = yes
		
		#Please industrialists
		add_radicals = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 70
		}
		
    }

}

# Paris Climate Accords
climate_change_system.4 = {
    type = country_event
	placement = scope:climate_change_summit_location

    title = paris_climate_accords_climate.t 					# Title of the event; ADD LOCALISATION
    desc = paris_climate_accords_climate.d 						# Description of the event; ADD LOCALISATION
    #flavor = paris_climate_accords_climate.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/state_status_icons/pollution.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		# Event has not been fired before
		NOT = { has_variable = paris_climate_accords_climate_ccs }	# CHANGE ****
		
		game_date >= 2016.4.22									# START DATE: Date colony became self governing ****
		game_date < 2026.4.22									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#Climate Change is an issue
		#has_journal_entry = je_climate_change_system
		
		#No restriction by legal union
		THIS_is_not_restricted_by_confederal_law = yes
		
		#Location is suitable
		any_state = {
			state_region = s:STATE_ILE_DE_FRANCE
			owner = {
				is_country_type = recognized
				is_at_war = no
				infamy < infamy_threshold:pariah
			}
		}
		
    }
	
	immediate = {
	
		random_state = {
			limit = {
				state_region = s:STATE_ILE_DE_FRANCE
				owner = {
					is_country_type = recognized
					is_at_war = no
					infamy < infamy_threshold:pariah
				}
			}
			save_scope_as = climate_change_summit_location 
		}
	
		# Fire only once
		set_variable = paris_climate_accords_climate_ccs		# Change variable ****
		
	}
    
    option = {
        name = climate_change_system.option.1					# Accept
        highlighted_option = yes
		
		#Increase greeness
		if = {
			limit = { has_law_or_variant = law_type:law_no_environment_law }
			activate_law = law_type:law_weak_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_weak_environment_law }
			activate_law = law_type:law_moderate_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_moderate_environment_law }
			activate_law = law_type:law_strong_environment_law
		}
		else = {
			every_country = {
				limit = { has_law_or_variant = law_type:law_strong_environment_law }
				change_relations = { who = ROOT value = 25 }
			}
			change_infamy = -10
		}
		
		#Please greens
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 50
		}
		
    }
	
	option = {
        name = climate_change_system.option.2					# Reject
		default_option = yes
		
		#Please industrialists
		add_radicals = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 50
		}
		
    }

}

# Generic Climate Summit
climate_change_system.5 = {
    type = country_event
	placement = scope:climate_change_summit_location

    title = generic_climate_accords_climate.t 					# Title of the event; ADD LOCALISATION
    desc = generic_climate_accords_climate.d 					# Description of the event; ADD LOCALISATION
    #flavor = generic_climate_accords_climate.f 				# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/state_status_icons/pollution.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 		# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by scripted button
		
    }
	
	immediate = {
	
		# Mark summit location
		random_state = { 
			limit = { 
				has_variable = climate_change_summit_location 
				NOT = { has_variable = climate_change_summit_previous_location }
			}
			save_scope_as = climate_change_summit_location 
		}
		
	}
    
    option = {
        name = climate_change_system.option.1					# Accept
        highlighted_option = yes
		
		#Increase greeness
		if = {
			limit = { has_law_or_variant = law_type:law_no_environment_law }
			activate_law = law_type:law_weak_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_weak_environment_law }
			activate_law = law_type:law_moderate_environment_law
		}
		else_if = {
			limit = { has_law_or_variant = law_type:law_moderate_environment_law }
			activate_law = law_type:law_strong_environment_law
		}
		else = {
			every_country = {
				limit = { has_law_or_variant = law_type:law_strong_environment_law }
				change_relations = { who = ROOT value = 25 }
			}
			change_infamy = -10
		}
		
		#Please greens
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 50
			modifier = { 
				trigger = { 
					has_global_variable = climate_change_status_total
					global_var:climate_change_status_total > 1.25
				}
				add = -10
			}
			modifier = { 
				trigger = { 
					has_global_variable = climate_change_status_total
					global_var:climate_change_status_total > 1.50
				}
				add = -10
			}
			modifier = { 
				trigger = { 
					has_global_variable = climate_change_status_total
					global_var:climate_change_status_total > 1.75
				}
				add = -10
			}
			modifier = { 
				trigger = { 
					has_global_variable = climate_change_status_total
					global_var:climate_change_status_total > 2.00
				}
				add = -10
			}
		}
		
    }
	
	option = {
        name = climate_change_system.option.2					# Reject
		default_option = yes
		
		#Please industrialists
		add_radicals = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = small_radicals
			interest_group = ig:ig_petty_bourgeoisie
		}
		add_loyalists = {
			value = small_radicals
			interest_group = ig:ig_industrialists
		}
		
		ai_chance = { 
			base = 50
			modifier = { 
				trigger = { 
					any_interest_group = {
						leader = {
							is_ruler = yes 
						}
						law_stance = {
							law = law_type:law_strong_environment_law
							value > neutral
						}
					}
				}
				add = -100 
			}
		}
		
    }

}