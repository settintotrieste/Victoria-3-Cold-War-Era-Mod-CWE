namespace = united_nations

### UNGA membership ###

#THIS is UN recognized BUT has unrecognized country type
united_nations.1 = {
	type = country_event

	title = united_nations.1.t
	desc = united_nations.1.d
	
	#flavor = united_nations.1.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	trigger = {
		OR = { 
			has_modifier = unga_member
			has_modifier = unsc_permanent_member
			has_modifier = unsc_non_permanent_member
		}
		is_revolutionary = no is_secessionist = no
		NOT = { is_country_type = recognized }
	}

	immediate = {
		
	}

	option = {
		name = united_nations.1.a #Unfortunate
		set_country_type = recognized
	}
	
}

#THIS is not UN recognized BUT has recognized country type
united_nations.2 = {
	type = country_event

	title = united_nations.2.t
	desc = united_nations.2.d
	
	#flavor = united_nations.1.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	trigger = {
		NOT = { has_modifier = unga_member }
		NOT = { is_country_type = unrecognized }
	}

	immediate = {
		
	}

	option = {
		name = united_nations.1.a #Unfortunate
		set_country_type = unrecognized
	}
	
}

united_nations.3 = {
	type = country_event

	title = united_nations.2.t
	desc = united_nations.2.d
	
	#flavor = united_nations.1.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	trigger = {
		OR = { 
			has_modifier = unga_member
			has_modifier = unsc_permanent_member
			has_modifier = unsc_non_permanent_member
		}
		OR = {
			is_not_sufficiently_independent = yes
			is_revolutionary = yes
		}
	}

	immediate = {
		
	}

	option = {
		name = united_nations.1.a #Unfortunate
		remove_modifier = unga_member
		remove_modifier = unsc_permanent_member
		remove_modifier = unsc_non_permanent_member
	}
	
}

### UN Non-Perm UNSC ###

#Set Non Permanent Members of the UNSC - Check every month
united_nations.4 = {
	type = country_event
	hidden = yes

	trigger = {
		
		#Check if there are less than 15 UNSC members
		any_country = {
			#exists = yes
			OR = { has_modifier = unsc_non_permanent_member has_modifier = unsc_permanent_member }
			count < 15
		}
		
		#There are more than 30 UNGA members
		any_country = {
			#exists = yes
			has_modifier = unga_member
			
			count > 30
		}
		
		#There is someone to give the UNSC seat to
		any_country = {
			#exists = yes
			
			has_modifier = unga_member
			NOR = { has_modifier = unsc_non_permanent_member has_modifier = unsc_permanent_member }
			
			infamy = infamy_threshold:reputable
			is_at_war = no
		}
		
	}

	immediate = {
		
		#Find countries to give non-perm UNSC seat to
		random_country = {
			limit = {
				#exists = yes
				
				has_modifier = unga_member
				NOR = { has_modifier = unsc_non_permanent_member has_modifier = unsc_permanent_member }
				
				infamy = infamy_threshold:reputable
				is_at_war = no
			}
			trigger_event = { id = united_nations.5 }
			add_modifier = { 
				name = unsc_non_permanent_member
				months = 24 
			}
		}
		
	}
	
}

#Set Non Permanent Members of the UNSC - Give
united_nations.5 = {
	type = country_event

	title = UNSC_non_perm_membership.t
	desc = UNSC_non_perm_membership.d
	flavor = UNSC_non_perm_membership.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	immediate = {
	
		save_scope_as = new_non_perm_UNSC_member
		
	}

	option = {
		name = UNSC_non_perm_membership.option 		#Great
		
	}
	
}


### UN Peacekeeping ###


#Vote on UN Peacekeeping - Round 1 in the UNSC
united_nations.6 = {
	type = country_event

	title = UNSC_peacekeeping_resolution.t
	desc = UNSC_peacekeeping_resolution.d
	flavor = UNSC_peacekeeping_resolution.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	immediate = {
	
		random_country = {
			limit = { 
				#exists = yes
				has_variable = un_peacekeeping_applicant_var
			}
			save_scope_as = un_peacekeeping_applicant
		}
		
		random_country = {
			limit = { 
				#exists = yes
				is_diplomatic_play_enemy_of = scope:un_peacekeeping_applicant
				is_diplomatic_play_initiator = yes
				has_war_with = scope:un_peacekeeping_applicant
			}
			save_scope_as = un_peacekeeping_aggressor
		}
		
		save_scope_as = un_peacekeeping_resolution_voter
		
	}

	option = {
		name = un_peacekeeping_vote.option.1 			#Support for FROM
		
		#Record vote FOR
		change_global_variable = {
			name = unsc_peackeeping_vote_count_var
			add = 1
		}
		
		#Mark as a UNSC supporter so that a containment war can be triggered later
		set_variable = un_peacekeeping_unsc_supporter_var
		
		set_variable = un_peacekeeping_voted_for_war
		
		#Failsafe marker for no Veto
		remove_variable = un_peacekeeping_VETO_var
		
		#FROM is happy with THIS
		change_relations = {
			country = scope:un_peacekeeping_applicant
			value = 50
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					OR = { 
						has_attitude = {
							who = scope:un_peacekeeping_applicant
							attitude >= cooperative
						}
						any_country = {
							scope:un_peacekeeping_applicant ?= this
							OR = { 
								has_diplomatic_pact = { who = ROOT type = defensive_pact } 
								has_diplomatic_pact = { who = ROOT type = alliance } 
							}
						}
					}
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = un_peacekeeping_vote.option.2 			#Do not support for FROM/VETO
		
		#Record vote AGAINST
		change_global_variable = {
			name = unsc_peackeeping_vote_count_var
			add = -1
		}
		
		#Set VETO marker if Perm UNSC member voting against
		if = {
			limit = { has_modifier = unsc_permanent_member }
			set_variable = un_peacekeeping_VETO_var
		}
		
		#FROM is angry with THIS
		change_relations = {
			country = scope:un_peacekeeping_applicant
			value = -50
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					OR = { 
						has_attitude = {
							who = scope:un_peacekeeping_applicant
							attitude <= wary
						}
						any_country = {
							scope:un_peacekeeping_aggressor ?= this
							OR = { 
								has_diplomatic_pact = { who = ROOT type = defensive_pact } 
								has_diplomatic_pact = { who = ROOT type = alliance } 
							}
						}
						any_country = {
							#exists = yes
							has_variable = un_peacekeeping_applicant_var
							OR = { 
								has_attitude = {
									who = ROOT
									attitude <= antagonistic
								}
								relations:root < relations_threshold:poor
							}
						}
					}
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = un_peacekeeping_vote.option.3 			#Abstain from voting
		default_option = yes
		
		#Failsafe marker for no Veto
		remove_variable = un_peacekeeping_VETO_var
		
		#FROM is angry with THIS
		change_relations = {
			country = scope:un_peacekeeping_applicant
			value = -25
		}
		
		ai_chance = { 
			base = 1
		}
		
	}
	
}

#Vote on UN Peacekeeping - Round 2 in the UNGA
united_nations.7 = {
	type = country_event

	title = UNGA_peacekeeping_resolution_advance.t
	desc = UNGA_peacekeeping_resolution_advance.d
	flavor = UNGA_peacekeeping_resolution_advance.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
		#Resolution has not expired
		has_variable = un_peacekeeping_applicant_var
		
		#Round 1 has timed out
		NOT = { has_modifier = un_peacekeeping_unsc_stage_var }
		NOT = { has_modifier = un_peacekeeping_unga_stage_var }
		
		#Round 1 passed
		global_var:unsc_peackeeping_vote_count_var >= 1
		NOT = { 
			any_country = { 
				#exists = yes
				has_modifier = unsc_permanent_member
				has_variable = un_peacekeeping_VETO_var 
			} 
		}
		NOT = { has_variable = un_peacekeeping_UNSC_voted }
		
		#Baseline requirements
		has_modifier = unga_member
		is_diplomatic_play_committed_participant = yes
		is_diplomatic_play_initiator = no
		is_at_war = yes
		
	}

	immediate = {
	
		save_scope_as = un_peacekeeping_applicant
		
		#Round 2 voting (1 month of voting time)
		add_modifier = { name = un_peacekeeping_unga_stage_var days = 30 }
		
		#Send out vote choice event to all UNGA members
		every_country = {
			limit = {
				#exists = yes
				NOT = { THIS = ROOT }
				has_modifier = unga_member
			}
			trigger_event = { id = united_nations.8 }
		}
		
		#Mark as round 1 completed
		set_variable = un_peacekeeping_UNSC_voted
		
	}

	option = {
		name = un_peacekeeping_update			#Excellent
		
	}
	
}

#Vote on UN Peacekeeping - Round 2 in the UNGA
united_nations.8 = {
	type = country_event

	title = UNGA_peacekeeping_resolution.t
	desc = UNGA_peacekeeping_resolution.d
	flavor = UNGA_peacekeeping_resolution.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	immediate = {
	
		random_country = {
			limit = { 
				#exists = yes
				has_variable = un_peacekeeping_applicant_var
			}
			save_scope_as = un_peacekeeping_applicant
		}
		
		random_country = {
			limit = { 
				#exists = yes
				is_diplomatic_play_enemy_of = scope:un_peacekeeping_applicant
				is_diplomatic_play_initiator = yes
				has_war_with = scope:un_peacekeeping_applicant
			}
			save_scope_as = un_peacekeeping_aggressor
		}
		
		save_scope_as = un_peacekeeping_resolution_voter
		
	}

	option = {
		name = un_peacekeeping_vote.option.1 			#Support for FROM
		
		#Record vote FOR
		change_global_variable = {
			name = unga_peackeeping_vote_count_var
			add = 1
		}
		
		#Extra votes for the USSR due to Yalta Conference compromise
		if = { 
			limit = {
				c:SOV ?= this
				any_scope_state = { state_region = { is_homeland = byelorussian } }
				NOT = { exists = c:BYE }
			}
			change_global_variable = {
				name = unga_peackeeping_vote_count_var
				add = 1
			}
		}
		if = { 
			limit = {
				c:SOV ?= this
				any_scope_state = { state_region = { is_homeland = ukrainian } }
				NOT = { exists = c:UKR }
			}
			change_global_variable = {
				name = unga_peackeeping_vote_count_var
				add = 1
			}
		}
		
		set_variable = un_peacekeeping_voted_for_war
		
		#FROM is happy with THIS
		change_relations = {
			country = scope:un_peacekeeping_applicant
			value = 50
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					OR = { 
						has_attitude = {
							who = scope:un_peacekeeping_applicant
							attitude >= cooperative
						}
						any_country = {
							scope:un_peacekeeping_applicant ?= this
							OR = { 
								has_diplomatic_pact = { who = ROOT type = defensive_pact } 
								has_diplomatic_pact = { who = ROOT type = alliance } 
							}
						}
					}
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = un_peacekeeping_vote.option.2 			#Do not support for FROM
		
		#Record vote AGAINST
		change_global_variable = {
			name = unga_peackeeping_vote_count_var
			add = -1
		}
		
		#FROM is angry with THIS
		change_relations = {
			country = scope:un_peacekeeping_applicant
			value = -50
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					OR = { 
						trigger_if = {
							limit = { exists = scope:un_peacekeeping_applicant_var }
							has_attitude = {
								who = scope:un_peacekeeping_applicant_var
								attitude <= wary
							}
						}
						any_country = {
							scope:un_peacekeeping_aggressor ?= this
							OR = { 
								has_diplomatic_pact = { who = ROOT type = defensive_pact } 
								has_diplomatic_pact = { who = ROOT type = alliance } 
							}
						}
						any_country = {
							#exists = yes
							has_variable = un_peacekeeping_applicant_var
							OR = { 
								has_attitude = {
									who = ROOT
									attitude <= antagonistic
								}
								relations:root < relations_threshold:poor
							}
						}
					}
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = un_peacekeeping_vote.option.3 			#Abstain from voting
		default_option = yes
		
		#FROM is angry with THIS
		change_relations = {
			country = scope:un_peacekeeping_applicant
			value = -25
		}
		
		ai_chance = { 
			base = 1
		}
		
	}
	
}

#Vote on UN Peacekeeping - Resolution is successful
united_nations.9 = {
	type = country_event

	title = UN_peacekeeping_resolution_YES.t
	desc = UN_peacekeeping_resolution_YES.d
	flavor = UN_peacekeeping_resolution_YES.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
		#Resolution has not expired
		has_variable = un_peacekeeping_applicant_var
		
		#Round 1 has timed out
		NOT = { has_modifier = un_peacekeeping_unga_stage_var }
		global_var:unsc_peackeeping_vote_count_var >= 1
		has_variable = un_peacekeeping_UNSC_voted
		
		#Round 2 passed
		global_var:unga_peackeeping_vote_count_var >= 1
		
		#Baseline requirements
		has_modifier = unga_member
		is_diplomatic_play_committed_participant = yes
		is_diplomatic_play_initiator = no
		is_at_war = yes
		
		#Has not been fired yet
		NOT = { has_variable = un_peacekeeping_resolution_passed }
	}

	immediate = {
	
		save_scope_as = un_peacekeeping_applicant
		
		#UN sends out ultimatum to aggressors to end diplo play or face a containment war
		every_country = {
			limit = {
				is_diplomatic_play_enemy_of = ROOT
				is_diplomatic_play_initiator = yes
				has_war_with = ROOT
				any_scope_war = { is_warleader = root }
			}
			trigger_event = { id = united_nations.10 }
			
			#Mark country as having been targeted by UN
			set_variable = un_peacekeeping_resolution_passed
		}
		
		#Event fired
		set_variable = un_peacekeeping_resolution_passed
		
	}

	option = {
		name = un_peacekeeping_update				#Excellent
		
	}
	
}

#UN Peacekeeping ultimatum
united_nations.10 = {
	type = country_event

	title = UN_peacekeeping_ultimatum.t
	desc = UN_peacekeeping_ultimatum.d
	flavor = UN_peacekeeping_ultimatum.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	cancellation_trigger = {
		is_at_war = no
	}

	immediate = {
	
		random_country = {
			limit = { 
				#exists = yes
				has_variable = un_peacekeeping_applicant_var
			}
			save_scope_as = un_peacekeeping_applicant
		}
		
		save_scope_as = un_peacekeeping_aggressor
		
	}

	option = {
		name = un_peacekeeping_ultimatum.option.1 			#Accept peace
		highlighted_option = yes
		
		#End diplomatic play
		every_diplomatic_play = {
			limit = {
				is_war = yes
				initiator_is = scope:un_peacekeeping_aggressor
				is_diplomatic_play_participant = scope:un_peacekeeping_applicant
			}
			end_play = yes
		}
		create_bidirectional_truce = {
			country = scope:un_peacekeeping_applicant
			months = 24
		}
		
		#Create UN Mandates
		trigger_event = { id = united_nations.13 }
		
		#International community is very unhappy
		change_infamy = -50 
		
		#Clean up
		hidden_effect = { trigger_event = { id = united_nations.12 } }
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					NOT = { has_jingoistic_ruler = yes }
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = un_peacekeeping_ultimatum.option.2 			#Continue the war
		default_option = yes
		
		#International community is NOT happy
		change_infamy = 100
		
		#Get UN supporters to join war on the UN applicant's side
		custom_tooltip = {
			text = un_peacekeeping_coalition_custom_tooltip
			
			#All supporters of the UN Resolution are given the option to join the peacekeeping mission
			every_country = {
				limit = { 
					NOT = { THIS = ROOT }
					OR = { 
						has_modifier = unsc_permanent_member 
						has_modifier = unsc_non_permanent_member 
						has_modifier = unga_member 
					}
					NOT = { is_in_war_together = scope:un_peacekeeping_aggressor }
					NOT = { has_war_with = ROOT }
					#has_variable = un_peacekeeping_unsc_supporter_var
					is_not_neutral = yes
					
					is_subject = no
					
					NOR = { 
						is_subject_of = ROOT
						has_diplomatic_pact = { who = ROOT type = alliance }
						has_diplomatic_pact = { who = ROOT type = defensive_pact }
						has_diplomatic_pact = { who = ROOT type = guarantee_independence }
						has_diplomatic_pact = { who = ROOT type = non_aggression_pact }
						has_diplomatic_pact = { who = ROOT type = support_independence }
						has_diplomatic_pact = { who = ROOT type = special_relationship }
					}
					
				}
				trigger_event = { id = united_nations.101 }
			}
			
			#Mark this as a target of a UN operation
			set_variable = { name = UN_peacekeeping_mission_target years = 1 }
			
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					has_jingoistic_ruler = yes
				}
				add = 100
			}
		}
		
	}
	
}

#UN Peacekeeping ultimatum - Option to join war
united_nations.101 = {
	type = country_event
	placement = scope:un_peacekeeping_aggressor

	title = UN_peacekeeping_join_war.t
	desc = UN_peacekeeping_join_war.d
	flavor = UN_peacekeeping_join_war.f

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_before_the_battle.bk2"
	}

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	cancellation_trigger = {
		OR = { 
			NOT = { exists = scope:un_peacekeeping_aggressor }
			NOT = { exists = scope:un_peacekeeping_applicant }
		}
	}

	immediate = {
	
		random_country = {
			limit = { 
				has_variable = un_peacekeeping_applicant_var
			}
			save_scope_as = un_peacekeeping_applicant
		}
		
		random_country = {
			limit = { 
				has_variable = UN_peacekeeping_mission_target
				NOT = { has_war_with = ROOT }
			}
			save_scope_as = un_peacekeeping_aggressor
		}
		
		#Clean up
		trigger_event = { id = united_nations.12 }
		
	}

	option = {
		name = UN_peacekeeping_join_war.option.1 			#Join the Peacekeeping Mission
		highlighted_option = yes
		
		#THIS joins the TARGET's war
		every_diplomatic_play = {
			limit = {
				is_war = yes
				is_diplomatic_play_participant = scope:un_peacekeeping_aggressor
				is_diplomatic_play_participant = scope:un_peacekeeping_applicant
				NOT = { is_diplomatic_play_participant = ROOT }
			}
			if = {
				limit = {
					initiator_is = scope:un_peacekeeping_aggressor
				}
				add_target_backers = {
					ROOT
				}
			}
		}
		
		#International community is happy
		change_infamy = -10
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					NOR = {
						infamy >= infamy_threshold:pariah
						in_default = yes
						has_healthy_economy = no
					}
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = UN_peacekeeping_join_war.option.2 			#Do not join the Peacekeeping Mission
		default_option = yes
		
		#Fellow coalition partners are not happy
		every_country = {
			limit = { 
				NOT = { THIS = ROOT }
				OR = { has_modifier = unsc_permanent_member has_modifier = unsc_non_permanent_member has_modifier = unga_member }
				NOT = { is_in_war_together = scope:un_peacekeeping_aggressor }
				has_variable = un_peacekeeping_unsc_supporter_var
				is_not_neutral = yes
			}
			change_relations = {
				country = ROOT
				value = -25
			}
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					OR = {
						infamy >= infamy_threshold:pariah
						in_default = yes
						has_healthy_economy = no
					}
				}
				add = 100
			}
		}
		
	}
	
}

#UN Peacekeeping fails
united_nations.11 = {
	type = country_event

	title = UN_peacekeeping_resolution_NO.t
	desc = UN_peacekeeping_resolution_NO.d
	flavor = UN_peacekeeping_resolution_NO.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
		#Resolution has not expired
		has_variable = un_peacekeeping_applicant_var
		
		#Round 1 & 2 have timed out
		NOT = { has_modifier = un_peacekeeping_unsc_stage_var }
		NOT = { has_modifier = un_peacekeeping_unga_stage_var }
		
		#Neither round passed
		OR = { 
			global_var:unsc_peackeeping_vote_count_var <= 0
			global_var:unga_peackeeping_vote_count_var <= 0
			
			any_country = { 
				#exists = yes
				has_modifier = unsc_permanent_member
				has_variable = un_peacekeeping_VETO_var 
			}
		}
		
		#Baseline requirements
		has_modifier = unga_member
		is_diplomatic_play_committed_participant = yes
		is_diplomatic_play_initiator = no
		is_at_war = yes
		
	}

	immediate = {
	
		random_country = {
			limit = { 
				#exists = yes
				has_variable = un_peacekeeping_VETO_var
			}
			save_scope_as = un_peacekeeping_vetoer
		}
	
		save_scope_as = un_peacekeeping_applicant
		
		#Trigger clean up event
		remove_variable = un_peacekeeping_applicant_var
		trigger_event = { id = united_nations.12 }
		
	}

	option = {
		name = un_peacekeeping_fails				#F
		
	}
	
}

#Clean Up UN Peacekeeping
united_nations.12 = {
	type = country_event
	hidden = yes
	
	trigger = {
	
		OR = { 
			has_variable = un_peacekeeping_applicant_var
			AND = { 
				has_variable = un_peacekeeping_resolution_passed 
				is_at_war = no
			}
			any_scope_state = {
				has_modifier = un_potential_mandate_marker
				OR = { 
					is_homeland_of_country_cultures = ROOT
					is_incorporated = yes
				}
			}
		}
		
		OR = {
			NOT = { has_modifier = unga_member }
			is_diplomatic_play_committed_participant = no
		}
		
	}

	immediate = {
		
		#Remove all variables
		every_country = { remove_variable = un_peacekeeping_applicant_var }
		remove_global_variable = unsc_peackeeping_vote_count_var
		remove_global_variable = unga_peackeeping_vote_count_var
		every_country = { remove_modifier = un_peacekeeping_unsc_stage_var }
		every_country = { remove_modifier = un_peacekeeping_unga_stage_var }
		every_country = { remove_variable = un_peacekeeping_VETO_var }
		every_country = { limit = { is_at_war = no } remove_variable = un_peacekeeping_resolution_passed }
		every_country = { remove_variable = un_peacekeeping_unsc_supporter_var }
		every_country = { remove_variable = un_peacekeeping_UNSC_voted }
		every_country = { remove_variable = un_peacekeeping_voted_for_war }
		every_scope_state = {
			limit = {
				has_modifier = un_potential_mandate_marker
				OR = { 
					is_homeland_of_country_cultures = ROOT
					is_incorporated = yes
				}
			}
			remove_modifier = un_potential_mandate_marker
		}
		every_country = { remove_variable = UN_peacekeeping_mission_target }
		
	}
	
}

#Post UN Peacekeeping - Mandate system
united_nations.13 = {
	type = country_event
	
	title = UN_peacekeeping_resolution_mandate.t
	desc = UN_peacekeeping_resolution_mandate.d
	flavor = UN_peacekeeping_resolution_mandate.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
		#Triggered by event
		
	}

	immediate = {
		
		#Dismantle THIS
		every_scope_state = {
			limit = {
				NOT = { is_homeland_of_country_cultures = ROOT }
			}
			set_variable = { name = state_to_cede months = 1 }
		}
		if = {
			limit = { 
				any_scope_state = { 
					has_variable = state_to_cede
				}
			}
			#Create mandate
			create_dynamic_country = {
				origin = ROOT
				country_type = unrecognized
				tier = city_state
				cede_state_trigger = {
					has_variable = state_to_cede
				}
				on_created = { 
				
					every_scope_state = {
						remove_variable = state_to_cede
					}
				
					set_release_vassal_effects = yes
					
					set_variable = dynamic_decolonisation_country
					
					set_variable = { name = UNT_country months = 1 }
					
					save_scope_as = UNT_country
					
				}
			}
			#Find some country to give UNT to, if any
			if = {
				limit = { 
					exists = scope:UNT_country
					scope:UNT_country ?= {
						is_subject = no
					}
				}
				random_country = { 
					limit = { 
						OR = { 
							has_modifier = unsc_permanent_member 
							has_modifier = unsc_non_permanent_member 
						} 
						is_sufficiently_independent = yes
						is_at_war = no
						infamy < infamy_threshold:pariah
					}
					create_diplomatic_pact = {
						country = scope:UNT_country
						type = mandate
					}
					trigger_event = { id = united_nations.14 }
				}
				scope:UNT_country ?= {
					set_variable = { name = newly_created_UNT years = 10 }
				}
			}
		}
		
	}
	
	option = {
		name = UN_peacekeeping_resolution_mandate.option
		default_option = yes
		
		#Domestic reaction
		add_radicals = {
			value = large_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
	}
	
}

#THIS is informed of mandate
united_nations.14 = {
	type = country_event
	placement = scope:UNT_mandate_country
	
	title = UN_peacekeeping_resolution_mandate_notice.t
	desc = UN_peacekeeping_resolution_mandate_notice.d
	flavor = UN_peacekeeping_resolution_mandate_notice.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
		#Triggered by event
		
	}

	immediate = {
		
		random_country = { 
			limit = { 
				has_variable = newly_created_UNT
				is_subject_of = ROOT
			}
			save_scope_as = UNT_mandate_country
		}
		
	}
	
	option = {
		name = un_peacekeeping_mandate_yes
		highlighted_option = yes
		
		#Set UNT free
		if = {
			limit = { exists = scope:UNT_mandate_country }
			
			#5 year timer to independence
			scope:UNT_mandate_country ?= {
				add_modifier = { name = un_potential_mandate_timer months = 60 }
			}
			
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					NOR = {
						in_default = yes
						has_healthy_economy = no
					}
				}
				add = 100
			}
		}
	}
	
	option = {
		name = un_peacekeeping_mandate_no
		default_option = yes
		
		#Set UNT free
		if = {
			limit = { exists = scope:UNT_mandate_country }
			scope:UNT_mandate_country ?= {
				copy_laws = ROOT
				make_independent = yes
				change_relations = {
					country = ROOT
					value = 100
				}
			}
			change_infamy = -10
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					OR = {
						in_default = yes
						has_healthy_economy = no
					}
				}
				add = 100
			}
		}
	}
	
}

#Post UN Peacekeeping Mandate system - Independence
united_nations.16 = {
	type = country_event
	placement = scope:UNT_mandate_country
	
	title = UN_peacekeeping_resolution_mandate_indy.t
	desc = UN_peacekeeping_resolution_mandate_indy.d
	flavor = UN_peacekeeping_resolution_mandate_indy.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
	
		#Has a UN mandate
		any_subject_or_below = {
		
			#UNT
			is_subject_type = subject_type_mandate
			
			#Time is up
			has_variable = newly_created_UNT
			NOT = { has_modifier = un_potential_mandate_timer }
			
		}
		
		is_at_war = no
		
	}

	immediate = {
	
		save_scope_as = un_mandate_trustee
	
		random_country = {
			limit = { 
				is_subject_of = ROOT
				
				#UNT
				is_subject_type = subject_type_mandate
				
				#Time is up
				has_variable = newly_created_UNT
				NOT = { has_modifier = un_potential_mandate_timer }
			
			}
			
			remove_variable = newly_created_UNT
			
			save_scope_as = UNT_mandate_country
		}
		
	}
	
	option = {
		name = un_peacekeeping_mandate_liberate			#We graciously accept
		highlighted_option = yes
		
		#Set mandate free
		if = {
			limit = { exists = scope:UNT_mandate_country }
			scope:UNT_mandate_country ?= {
				make_independent = yes
				effect_starting_politics_democratic = yes
			}
		}
		
		#International community loves this!
		change_infamy = -20
		
		ai_chance = { 
			base = 1
		}
	}
	
	option = {
		name = un_peacekeeping_mandate_keep				#Keep the territories to ourselves!
		default_option = yes
		
		change_infamy = 100
		
		#Change subject status
		random_country = {
			limit = { 
				scope:UNT_mandate_country ?= this 
			}
			add_radicals = {
				value = large_radicals
			}
			add_liberty_desire = 50
			
			#End mandate status
			hidden_effect = { make_independent = yes }
			ROOT = {
				create_diplomatic_pact = {
					country = scope:UNT_mandate_country
					type = puppet
				}
			}
		}
		
		ai_chance = { 
			base = 0
		}
	}
	
}

### United Nations Secretary-General ###

united_nations.17 = {
	type = country_event
	hidden = yes

	trigger = {
		
		#No UNSG country
		NOT = {
			any_country = {
				has_modifier = unsg_country
			}
		}
		NOT = { has_modifier = unsg_country }
		
		#Has reputable UN member to select to give a UNSG
		any_country = {
			has_modifier = unga_member
			NOT = { has_modifier = unsg_country }
			infamy = infamy_threshold:reputable
			country_rank < rank_value:great_power
		}
		
	}

	immediate = {
		
		#Select a random country to have the UNSG
		effect_select_UNSG_country = yes
		
	}
	
}

united_nations.18 = {
	type = country_event
	
	title = UN_secretary_general_selection.t
	desc = UN_secretary_general_selection.d
	flavor = UN_secretary_general_selection.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
	}

	immediate = {
	
		save_scope_as = unsg_country
		
	}

	option = {
		name = un_peacekeeping_update			#Excellent
		
		#Roll UNSG's proactiveness
		remove_global_variable = passive_unsg
		remove_global_variable = balanced_unsg
		remove_global_variable = proactive_unsg
		
		hidden_effect = {
			random_list = {
				1 = {	
					set_global_variable = passive_unsg
				
					#Neutral countries are more likely to produce a passive UNSG
					modifier = {
						if = {
							limit = {
								has_law = law_type:law_no_war
							}
						}
						add = 1
					}
				}
				1 = {	
					set_global_variable = balanced_unsg
				
					#Neutral countries are more likely to produce a passive UNSG
					modifier = {
						if = {
							limit = {
								has_law = law_type:law_defensive_war
							}
						}
						add = 1
					}
				}
				1 = {	
					set_global_variable = proactive_unsg
					
				}
			}
		}
		
		#Create UNSG character
		effect_create_UNSG = yes
		
		#Notify other players of UNSG's appointment
		every_country = {
			limit = { 
				is_player = yes
				NOT = { has_modifier = unsg_country }
			}
			trigger_event = { id = united_nations.181 }
		}
		
	}
	
}

united_nations.181 = {
	type = country_event
	placement = scope:unsg_country
	
	title = UN_secretary_general_notification.t
	desc = UN_secretary_general_notification.d
	flavor = {
		first_valid = {
			triggered_desc = {
				desc = UN_secretary_general_notification.1.f
				trigger = { has_global_variable = passive_unsg }
			}
			triggered_desc = {
				desc = UN_secretary_general_notification.2.f
				trigger = { has_global_variable = balanced_unsg }
			}
			triggered_desc = {
				desc = UN_secretary_general_notification.3.f
				trigger = { has_global_variable = proactive_unsg }
			}
		}
	}

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	trigger = {
		
	}

	immediate = {
		random_country = { 
			limit = { has_modifier = unsg_country }
			save_scope_as = unsg_country
		}
	}

	option = {
		name = UN_secretary_general_notification_option		#Interesting
		
	}
	
}

### IMF Loan System ###

united_nations.19 = {
	type = country_event
	placement = scope:imf_loan_debtor
	
	title = IMF_loan_request.t
	desc = IMF_loan_request.d
	flavor = IMF_loan_request.f

	event_image = {
		video = "gfx/event_pictures/europenorthamerica_capitalists_meeting.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	immediate = {
		save_scope_as = imf_loan_creditor
		
		random_country = {
			limit = { has_variable = imf_loan_applicant }
			save_scope_as = imf_loan_debtor
		}
	}

	cancellation_trigger = {
		NOT = {
			exists = scope:imf_loan_debtor
		}
	}

	option = {
		name = imf_loan_option.1			#Accept
		highlighted_option = yes
		
		#Take on debt
		if = {
			limit = {
				exists = scope:imf_loan_debtor
				scope:imf_loan_debtor ?= {
					scaled_debt > 0.05
				}
				can_take_on_scaled_debt = {
					who = scope:imf_loan_debtor
					value = 0.05
				}
			}
			take_on_scaled_debt = {
				who = scope:imf_loan_debtor
				value = 0.05
			}
			scope:imf_loan_debtor ?= { 
				post_notification = imf_loan_take_debt_notification
			}
			if = {
				limit = {
					root = {
						owes_obligation_to = scope:imf_loan_debtor
					}			
				}
				root = { set_owes_obligation_to = { country = scope:imf_loan_debtor setting = no } }
				change_relations = { country = scope:imf_loan_debtor value = 10 }
			}		
			else_if = {
				limit = {
					scope:imf_loan_debtor = {
						NOT = { owes_obligation_to = root }					
					}			
				}
				scope:imf_loan_debtor = { set_owes_obligation_to = { country = root setting = yes } }
				change_relations = { country = scope:imf_loan_debtor value = 10 }
			}
			else = {
				change_relations = { country = scope:imf_loan_debtor value = 30 }
			}
		}
		else = {
			hidden_effect = { remove_modifier = imf_loan_creditor }
			add_modifier = {
				name = imf_loan_creditor
				years = 5
			}
			create_diplomatic_pact = {
				country = scope:imf_loan_debtor
				type = bankroll
			}
			scope:imf_loan_debtor ?= { 
				post_notification = imf_loan_bankroll_notification
			}
			change_relations = { country = scope:imf_loan_debtor value = 30 }
		}
		
		#Lobby
		if = {
			limit = {
				exists = scope:imf_loan_debtor
			}
			add_lobby_appeasement_from_diplomacy_bidirectional = { 
				FIRST = root
				SECOND = scope:imf_loan_debtor
				PRO_AMOUNT = 1
				ANTI_AMOUNT = -1
				FACTOR = appeasement_defensive_pact_formed
			}
		}
		
		#Mark FROM as receiving an IMF loan
		random_country = {
			limit = { 
				scope:imf_loan_debtor ?= this 
			}
		
			if = { 
				limit = { NOT = { has_modifier = imf_loan_debtor } }
				add_modifier = { name = imf_loan_debtor months = 60 }
			}
			
			remove_variable = imf_loan_applicant
			
		}
		
		ai_chance = { 
			base = 10
		}
		
	}
	
	option = {
		name = imf_loan_option.2			#Reject
		default_option = yes
		
		change_relations = { country = scope:imf_loan_debtor value = -5 }
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					any_country = {
						scope:imf_loan_debtor ?= this
						has_attitude = {
							who = ROOT
							attitude <= antagonistic
						}
					}
				}
				add = 100
			}
		}
		
	}
	
	option = {
		name = imf_loan_option.3			#Don't bug me anymore
		trigger = { 
			NOT = { has_variable = opted_out_of_imf_loan_creditor }
		}
		
		set_variable = opted_out_of_imf_loan_creditor
		
		change_relations = { country = scope:imf_loan_debtor value = -5 }
		
		ai_chance = { 
			base = 0
		}
		
	}
	
}

united_nations.20 = {
	type = country_event
	
	title = IMF_loan_terms.t
	desc = IMF_loan_terms.d
	flavor = IMF_loan_terms.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	cooldown = { months = 12 }

	trigger = {
	
		#THIS is an IMF debtor
		has_modifier = imf_loan_debtor
		
		#Debtor does not have free market reforms
		NAND = {
			has_law = law_type:law_free_trade
			has_law = law_type:law_laissez_faire
		}
		
		#Country is not at war
		is_at_war = no
		
	}

	immediate = {
		save_scope_as = imf_loan_debtor
	}

	option = {
		name = imf_loan_terms			#Accept
		
		#THIS enacts free market laws
		activate_law = law_type:law_free_trade
		activate_law = law_type:law_laissez_faire
		
	}
	
}

### UN Sanctions System ####

united_nations.21 = {
	type = country_event
	
	title = UN_sanctions_system.t
	desc = UN_sanctions_system.d
	flavor = UN_sanctions_system.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	cooldown = { months = 6 }

	trigger = {
	
		#THIS is a bad boy and not already a target of sanctions
		OR = { 
			AND = { 
				infamy >= infamy_threshold:infamous
				has_global_variable = proactive_unsg
				NOT = { has_modifier = un_sanctions_1 }
			}
			AND = { 
				infamy >= infamy_threshold:notorious
				OR = { has_global_variable = proactive_unsg has_global_variable = balanced_unsg }
				NOT = { has_modifier = un_sanctions_2 }
			}
			AND = { 
				infamy >= infamy_threshold:pariah
				OR = { has_global_variable = proactive_unsg has_global_variable = balanced_unsg has_global_variable = passive_unsg }
				NOT = { has_modifier = un_sanctions_3 }
			}
		}
		
		#UNSG perm members are immune to sanctions OR THIS is friendly with a UNSG perm member (BUT only if THIS is not conducting cultural_suppression)
		NOR = {
			has_modifier = unsc_permanent_member
			AND = {
				NOT = { has_journal_entry = je_cultural_suppression_system }
				any_country = { 
					has_modifier = unsc_permanent_member 
					OR = { 
						relations:root >= relations_threshold:amicable
						in_alliance_with_THIS = yes
					}
				}
			}
		}
		
	}

	immediate = {
	
		save_scope_as = UN_sanctions_target
		
	}

	option = {
		name = UN_sanctions_option				#F
		
		if = {
			limit = {
				infamy >= infamy_threshold:infamous
				has_global_variable = proactive_unsg
				NOT = { has_modifier = un_sanctions_1 }
			}
			add_modifier = { name = un_sanctions_1 }
		}
		if = {
			limit = {
				infamy >= infamy_threshold:notorious
				OR = { has_global_variable = proactive_unsg has_global_variable = balanced_unsg }
				NOT = { has_modifier = un_sanctions_2 }
			}
			add_modifier = { name = un_sanctions_2 }
		}
		if = {
			limit = {
				infamy >= infamy_threshold:pariah
				OR = { has_global_variable = proactive_unsg has_global_variable = balanced_unsg has_global_variable = passive_unsg }
				NOT = { has_modifier = un_sanctions_3 }
			}
			add_modifier = { name = un_sanctions_3 }
			
			set_variable = un_embargo_target
			
			#Call for an embargo of THIS
			every_country = {
				limit = {
					NOT = { THIS = ROOT }
					has_modifier = unga_member
					NOT = {
						has_modifier = un_sanctions_3
					}
					leads_customs_union = yes
					is_junior_in_customs_union = no
					NOT = { has_treaty_port_in_country = root }
					NOT = { has_law = law_type:law_isolationism }
					OR = {
						has_port = yes
						is_adjacent_to_country = ROOT
					}
				}
				trigger_event = { id = united_nations.22 }
			}
		}
		
	}
	
}

united_nations.22 = {
	type = country_event
	
	title = UN_sanctions_system_embargo.t
	desc = UN_sanctions_system_embargo.d
	flavor = UN_sanctions_system_embargo.d

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	immediate = {
		save_scope_as = un_sanctions_embargoing_country
		
		random_country = {
			limit = { has_variable = un_embargo_target }
			save_scope_as = un_sanctions_embargoed_country
		}
	}

	option = {
		name = UN_sanctions_system_embargo_option.1			#Yes
		
		#Create UN embargo
		create_diplomatic_pact = {
			country = scope:un_sanctions_embargoed_country 
			type = embargo
		}
		if = {
			limit = { NOT = { has_modifier = un_embargo_participant } }
			add_modifier = { name = un_embargo_participant }
		}
		
		#FROM is angry!
		change_relations = {
			country = scope:un_sanctions_embargoed_country 
			value = -25
		}
		
		random_country = {
			limit = { has_variable = un_embargo_target }
			remove_variable = un_embargo_target
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					has_attitude = { 
						who = scope:un_sanctions_embargoed_country 
						attitude < cooperative 
					}
				}
				add = 100
			}
		}
	}
	
	option = {
		name = UN_sanctions_system_embargo_option.2			#No
		default_option = yes
		
		#FROM is happy!
		change_relations = {
			country = scope:un_sanctions_embargoed_country 
			value = 25
		}
		
		random_country = {
			limit = { has_variable = un_embargo_target }
			remove_variable = un_embargo_target
		}
		
		ai_chance = { 
			base = 0
			modifier = {
				trigger = {
					has_attitude = { 
						who = scope:un_sanctions_embargoed_country
						attitude >= cooperative 
					}
				}
				add = 100
			}
		}
	}
	
}

united_nations.23 = {
	type = country_event
	
	title = UN_sanctions_system_end.t
	desc = UN_sanctions_system_end.d
	flavor = UN_sanctions_system_end.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1
	
	cooldown = { months = 6 }

	trigger = {
	
		#THIS is not a bad boy and but is a target of sanctions
		OR = { 
			AND = { 
				infamy < infamy_threshold:infamous
				has_modifier = un_sanctions_1
			}
			AND = { 
				infamy < infamy_threshold:notorious
				has_modifier = un_sanctions_2
			}
			AND = { 
				infamy < infamy_threshold:pariah
				has_modifier = un_sanctions_3
			}
		}
		
	}

	immediate = {
	
		save_scope_as = UN_sanctions_target
		
	}

	option = {
		name = UN_sanctions_end_option				#Great
		
		if = {
			limit = {
				infamy < infamy_threshold:infamous
				has_modifier = un_sanctions_1
			}
			remove_modifier = un_sanctions_1
		}
		if = {
			limit = {
				infamy < infamy_threshold:notorious
				has_modifier = un_sanctions_2
			}
			remove_modifier = un_sanctions_2
		}
		if = {
			limit = {
				infamy < infamy_threshold:pariah
				has_modifier = un_sanctions_3
			}
			remove_modifier = un_sanctions_3
			
			#Clear all embargoes of THIS
			every_country = {
				limit = {
					has_modifier = un_embargo_participant
					has_diplomatic_pact = { who = ROOT type = embargo }
				}
				remove_diplomatic_pact = { country = ROOT type = embargo }
			}
		}
		
	}
	
}

united_nations.24 = {
	type = country_event
	hidden = yes

	trigger = {
		
		has_modifier = un_embargo_participant
		
		NOT = { any_country = { has_modifier = un_sanctions_3 } }
		
	}

	immediate = {
		
		remove_modifier = un_embargo_participant
		
	}
	
}

### IMF Interest Rate ###

united_nations.25 = {
	type = country_event
	hidden = yes

	trigger = {
		
		#Only applies to countries who borrowed from the IMF
		has_modifier = imf_loan_debtor
		
	}

	immediate = {
		
		#Check state of the Global Economy (Max: 5)
		set_global_variable = { 
			name = economic_strength_global_var
			value = 0
		}
		set_global_variable = { 
			name = economic_strength_country_count_var
			value = 0
		}
		every_country = {
			if = {
				limit = { has_modifier = economic_cycle_1 }
				change_global_variable = { name = economic_strength_global_var add = 1 }
			}
			if = {
				limit = { has_modifier = economic_cycle_2 }
				change_global_variable = { name = economic_strength_global_var add = 2 }
			}
			if = {
				limit = { has_modifier = economic_cycle_3 }
				change_global_variable = { name = economic_strength_global_var add = 3 }
			}
			if = {
				limit = { has_modifier = economic_cycle_4 }
				change_global_variable = { name = economic_strength_global_var add = 4 }
			}
			if = {
				limit = { has_modifier = economic_cycle_5 }
				change_global_variable = { name = economic_strength_global_var add = 5 }
			}
			change_global_variable = { name = economic_strength_country_count_var add = 1 }
		}
		if = {
			limit = { global_var:economic_strength_country_count_var > 0 }
			change_global_variable = { 
				name = economic_strength_global_var
				divide = global_var:economic_strength_country_count_var
			}
		}
		
		#Apply modifiers
		if = {
			limit = { 
				global_var:economic_strength_global_var <= 1 
				
				NOT = { has_modifier = very_low_imf_interest_rate }
			}
			add_modifier = { name = very_low_imf_interest_rate }
			remove_modifier = low_imf_interest_rate
			remove_modifier = medium_imf_interest_rate
			remove_modifier = high_imf_interest_rate
			remove_modifier = very_high_imf_interest_rate
			
			#Inform country of change
			trigger_event = { id = united_nations.26 }
		}
		if = {
			limit = { 
				global_var:economic_strength_global_var > 1
				global_var:economic_strength_global_var <= 2
				
				NOT = { has_modifier = low_imf_interest_rate }
			}
			remove_modifier = very_low_imf_interest_rate
			add_modifier = { name = low_imf_interest_rate }
			remove_modifier = medium_imf_interest_rate
			remove_modifier = high_imf_interest_rate
			remove_modifier = very_high_imf_interest_rate
			
			#Inform country of change
			trigger_event = { id = united_nations.26 }
		}
		if = {
			limit = { 
				global_var:economic_strength_global_var > 2
				global_var:economic_strength_global_var <= 3
				
				NOT = { has_modifier = medium_imf_interest_rate }
			}
			remove_modifier = very_low_imf_interest_rate
			remove_modifier = low_imf_interest_rate
			add_modifier = { name = medium_imf_interest_rate }
			remove_modifier = high_imf_interest_rate
			remove_modifier = very_high_imf_interest_rate
			
			#Inform country of change
			trigger_event = { id = united_nations.26 }
		}
		if = {
			limit = { 
				global_var:economic_strength_global_var > 3
				global_var:economic_strength_global_var <= 4
				
				NOT = { has_modifier = high_imf_interest_rate }
			}
			remove_modifier = very_low_imf_interest_rate
			remove_modifier = low_imf_interest_rate
			remove_modifier = medium_imf_interest_rate
			add_modifier = { name = high_imf_interest_rate }
			remove_modifier = very_high_imf_interest_rate
			
			#Inform country of change
			trigger_event = { id = united_nations.26 }
		}
		if = {
			limit = { 
				global_var:economic_strength_global_var > 4
				
				NOT = { has_modifier = very_high_imf_interest_rate }
			}
			remove_modifier = very_low_imf_interest_rate
			remove_modifier = low_imf_interest_rate
			remove_modifier = medium_imf_interest_rate
			remove_modifier = high_imf_interest_rate
			add_modifier = { name = very_high_imf_interest_rate }
			
			#Inform country of change
			trigger_event = { id = united_nations.26 }
		}
		
	}
	
}

united_nations.26 = {
	type = country_event
	
	title = UN_imf_interest_rate.t
	desc = {
		first_valid = {
			triggered_desc = {
				desc = UN_imf_interest_rate.1.d
				trigger = { has_modifier = very_low_imf_interest_rate }
			}
			triggered_desc = {
				desc = UN_imf_interest_rate.2.d
				trigger = { has_modifier = low_imf_interest_rate }
			}
			triggered_desc = {
				desc = UN_imf_interest_rate.3.d
				trigger = { has_modifier = medium_imf_interest_rate }
			}
			triggered_desc = {
				desc = UN_imf_interest_rate.4.d
				trigger = { has_modifier = high_imf_interest_rate }
			}
			triggered_desc = {
				desc = UN_imf_interest_rate.5.d
				trigger = { has_modifier = very_high_imf_interest_rate }
			}
		}
	}
	flavor = UN_imf_interest_rate.f

	event_image = {
		video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2"
	}

	icon = "gfx/interface/icons/event_icons/united_nations.dds"

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/leader_speaking_to_a_group_of_people"

	duration = 1

	trigger = {
		#Triggered by the event above
	}

	immediate = {
		save_scope_as = imf_interest_rate_target
	}

	option = {
		name = IMF_interest_rate_acknowledgement			#Interesting
	}
	
}

### World Trade Organisation ###

#Kick ineligible countries out of WTO
united_nations.27 = {
	type = country_event
	title = wto_expulsion.t 					# Title of the event; ADD LOCALISATION
    desc = wto_expulsion.d 						# Description of the event; ADD LOCALISATION
    flavor = wto_expulsion.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/diplo_icons/WTO_member.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met

	trigger = {
		
		has_modifier = WTO_member
		
		OR = { 
			NOT = { is_sufficiently_independent = yes }
			NOT = { infamy < infamy_threshold:pariah }
			has_law = law_type:law_isolationism
		}
		
	}

	immediate = {
	
		#THIS leaves arab_league
		remove_modifier = WTO_member
		
	}
	
	option = {
        name = arab_league_application_rejection.1				# Unfortunate
		
    }

}

### New UNSC member ###

#New UNSC member
united_nations.28 = {
	type = country_event
	placement = scope:new_unsc_member_scope
	title = new_unsc_perm_member.t 						# Title of the event; ADD LOCALISATION
    desc = new_unsc_perm_member.d 						# Description of the event; ADD LOCALISATION
    flavor = new_unsc_perm_member.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/united_nations.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met

	trigger = {
		
		#Triggered by decision
		
	}

	immediate = {
		
		random_country = {
			limit = { 
				has_variable = new_unsc_member_flag 
				has_modifier = unsc_permanent_member
			}
			save_scope_as = new_unsc_member_scope
		}
		
	}
	
	option = {
        name = new_unsc_perm_member.1					# Okay
		
    }

}

### Diplomatic Neutrality Violated ###

#Diplomatic Neutrality Violated
united_nations.29 = {
	type = country_event
	placement = scope:neutrality_violated_country
	title = diplomatic_neutrality_violated.t 					# Title of the event; ADD LOCALISATION
    desc = diplomatic_neutrality_violated.d 					# Description of the event; ADD LOCALISATION
    flavor = diplomatic_neutrality_violated.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/united_nations.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met

	trigger = {
		
		#Triggered by decision
		
	}

	immediate = {
		
		random_country = {
			limit = { 
				has_variable = neutrality_violated
				is_at_war = yes
			}
			save_scope_as = neutrality_violated_country
		}
		
	}
	
	option = {
        name = diplomatic_neutrality_violated_option.1					# Assist country
		highlighted_option = yes
		
		if = {
			limit = { exists = scope:neutrality_violated_country }
			custom_tooltip = {
				text = join_neutral_country_war.tt
				
				#THIS joins the TARGET's war
				every_diplomatic_play = {
					limit = {
						is_war = yes
						is_diplomatic_play_participant = scope:neutrality_violated_country
						NOT = { is_diplomatic_play_participant = ROOT }
					}
					if = {
						limit = {
							target_is = scope:neutrality_violated_country
						}
						add_target_backers = {
							ROOT
						}
					}
				}
				
			}
		}
		
		ai_chance = { 
			base = 50
			modifier = {
				trigger = {
					exists = scope:neutrality_violated_country
					scope:neutrality_violated_country = { relations:root >= relations_threshold:amicable }
				}
				add = 100
			}
		}
		
    }
	
	option = {
        name = diplomatic_neutrality_violated_option.2					# Stay out of it
		default_option = yes
		
		if = {
			limit = { exists = scope:neutrality_violated_country }
			change_relations = { 
				country = scope:neutrality_violated_country
				value = -50 
			}
		}
		
		ai_chance = { 
			base = 50
			modifier = {
				trigger = {
					exists = scope:neutrality_violated_country
					scope:neutrality_violated_country = { relations:root < relations_threshold:neutral }
				}
				add = 100
			}
		}
		
    }

}

#Diplomatic Neutrality Violated
united_nations.30 = {
	type = country_event
	placement = scope:neutrality_violated_country
	title = diplomatic_neutrality_violated.t 					# Title of the event; ADD LOCALISATION
    desc = diplomatic_neutrality_violated.d 					# Description of the event; ADD LOCALISATION
    flavor = diplomatic_neutrality_violated.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/united_nations.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met

	trigger = {
		
		#Triggered by decision
		
	}

	immediate = {
		
		random_country = {
			limit = { 
				has_variable = neutrality_violated
				is_at_war = yes
			}
			save_scope_as = neutrality_violated_country
		}
		
	}
	
	option = {
        name = diplomatic_neutrality_violated_option				# Uh oh
		
		#International community is very angry
		change_infamy = 50
		
    }

}

### Change UN Headquarters ###

#UN HQ flees
united_nations.31 = {
	type = country_event
	placement = scope:un_headquarters_state
	title = change_UN_HQ.t 						# Title of the event; ADD LOCALISATION
    desc = change_UN_HQ.d 						# Description of the event; ADD LOCALISATION
    flavor = change_UN_HQ.f 					# Flavor for event; ADD LOCALISATION, IF REQUIRED

	event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/united_nations.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met

	trigger = {
		
		any_scope_state = { 
			has_modifier = un_headquarters 
			OR = {
				is_in_revolt = yes
				devastation > 0.5
				NOT = { controller = ROOT }
			}
		}
		
	}

	immediate = {
		
		random_scope_state = {
			limit = { has_modifier = un_headquarters }
			remove_modifier = un_headquarters
			save_scope_as = un_headquarters_state
		}
		
	}
	
	option = {
        name = change_UN_HQ.1					# Okay
		
		add_modifier = { 
			name = national_humiliation 
			years = 5 
			is_decaying = yes 
		}
		
    }

}

#UN HQ comes to THIS
united_nations.32 = {
	type = country_event
	placement = scope:un_headquarters_state
	title = new_UN_HQ.t 						# Title of the event; ADD LOCALISATION
    desc = new_UN_HQ.d 							# Description of the event; ADD LOCALISATION
    flavor = new_UN_HQ.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

	event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/united_nations.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met

	trigger = {
		
		NOT = { has_global_variable = UN_HQ_candidate }
		NOT = { has_global_variable = UN_HQ_candidate_timer }
		
		NOT = {
			any_state = {
				has_modifier = un_headquarters
			}
		}
		
		#UN is interested in coming to THIS
		is_country_type = recognized
		infamy < infamy_threshold:infamous
		OR = { 
			country_rank >= rank_value:great_power
			AND = { 
				country_rank >= rank_value:major_power
				is_neutral = yes
			}
		}
		is_at_war = no
		has_revolution = no
		in_default = no
	}

	immediate = {
		
		set_global_variable = UN_HQ_candidate
		
		if = {
			limit = { OR = { c:USA ?= this c:XNA ?= this } }
			ROOT.market_capital = {
				save_scope_as = un_headquarters_state
			}
		}
		else = {
			capital = { 
				save_scope_as = un_headquarters_state
			}
		}
		
	}
	
	option = {
        name = new_UN_HQ.1						# Accept
		highlighted_option = yes
		
		remove_global_variable = UN_HQ_candidate
		set_variable = { name = UN_HQ_candidate_timer years = 5 }
		
		if = {
			limit = { OR = { c:USA ?= this c:XNA ?= this } }
			ROOT.market_capital = {
				if = { limit = { has_modifier = un_headquarters } hidden_effect = { remove_modifier = un_headquarters } }
				add_modifier = { name = un_headquarters }
			}
		}
		else = {
			capital = { 
				if = { limit = { has_modifier = un_headquarters } hidden_effect = { remove_modifier = un_headquarters } }
				add_modifier = { name = un_headquarters }
			}
		}
		
		add_modifier = { 
			name = national_pride_modifier
			years = 5 
			is_decaying = yes 
		}
		
		add_treasury = -150000
		
		ai_chance = { 
			base = 90
		}
		
    }
	
	option = {
        name = new_UN_HQ.2						# Decline
		default_option = yes
		
		remove_global_variable = UN_HQ_candidate
		
		ai_chance = { 
			base = 10
		}
    }

}