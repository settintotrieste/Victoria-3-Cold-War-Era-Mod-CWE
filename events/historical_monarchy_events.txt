namespace = historical_monarchy_events

#Death of George VI
historical_monarchy_events.1 = {
    type = country_event

    title = GBR_change_monarch_1952.t 							# Title of the event; ADD LOCALISATION
    desc = GBR_change_monarch_1952.d 							# Description of the event; ADD LOCALISATION
    #flavor = GBR_change_monarch_1952.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 1952.2.6									# START DATE: Date colony became self governing ****
		game_date < 1962.2.6									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = GBR_change_monarch_1952_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = george_vi
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = george_vi
				has_modifier = monarch_character
			}
			kill_character = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = GBR_change_monarch_1952_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_monarchy_events.option				# Accept
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		create_character = {
				first_name = "elizabeth_ii_first_name"
				last_name = "elizabeth_ii_last_name"
				birth_date = 1926.4.21
				is_agitator = yes historical = yes female = yes #ruler = yes ig_leader = yes female = yes
				interest_group = ig_landowners
				ideology = ideology_elitist
				culture = cu:british
				religion = rel:protestant
				traits = {
					tactful
					pious
					romantic
				}
				on_created = { 
					set_variable = elizabeth_ii
					set_character_as_monarch = yes
				}
			}
		
    }

}

#Death of Elizabeth II
historical_monarchy_events.2 = {
    type = country_event

    title = GBR_change_monarch_2022.t 							# Title of the event; ADD LOCALISATION
    desc = GBR_change_monarch_2022.d 							# Description of the event; ADD LOCALISATION
    #flavor = GBR_change_monarch_2022.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 2022.9.8									# START DATE: Date colony became self governing ****
		game_date < 2032.9.8									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = GBR_change_monarch_2022_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = elizabeth_ii
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = elizabeth_ii
				has_modifier = monarch_character
			}
			kill_character = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = GBR_change_monarch_2022_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_monarchy_events.option				# Accept
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
    }

}

#Death of Hirohito
historical_monarchy_events.3 = {
    type = country_event

    title = JAP_change_monarch_1989.t 							# Title of the event; ADD LOCALISATION
    desc = JAP_change_monarch_1989.d 							# Description of the event; ADD LOCALISATION
    #flavor = JAP_change_monarch_1989.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:JAP ?= this											# Change TAG of the overlord ****
		game_date >= 1989.1.7									# START DATE: Date colony became self governing ****
		game_date < 1999.1.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = JAP_change_monarch_1989_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = hirohito
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = hirohito
				has_modifier = monarch_character
			}
			kill_character = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = JAP_change_monarch_1989_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_monarchy_events.option				# Accept
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
    }

}

#Abdication of Akihito
historical_monarchy_events.4 = {
    type = country_event

    title = JAP_change_monarch_2019.t 							# Title of the event; ADD LOCALISATION
    desc = JAP_change_monarch_2019.d 							# Description of the event; ADD LOCALISATION
    #flavor = JAP_change_monarch_2019.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:JAP ?= this											# Change TAG of the overlord ****
		game_date >= 2019.4.30									# START DATE: Date colony became self governing ****
		game_date < 2029.4.30									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = JAP_change_monarch_2019_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = akihito
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = akihito
				has_modifier = monarch_character
			}
			retire_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = JAP_change_monarch_2019_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}