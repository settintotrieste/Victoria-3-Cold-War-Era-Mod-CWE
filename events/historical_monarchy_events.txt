namespace = historical_monarchy_events

#Death of George VI
historical_monarchy_events.1 = {
    type = country_event

    title = GBR_change_monarch_1952.t 							# Title of the event; ADD LOCALISATION
    desc = GBR_change_monarch_1952.d 							# Description of the event; ADD LOCALISATION
    #flavor = GBR_change_monarch_1952.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 1952.2.6									# START DATE: Date colony became self governing ****
		game_date < 1962.2.6									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = GBR_change_monarch_1952_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = george_vi
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = george_vi
				has_modifier = monarch_character
			}
			kill_character = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = GBR_change_monarch_1952_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_monarchy_events.option				# Accept
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
    }

}

#Death of Elizabeth II
historical_monarchy_events.2 = {
    type = country_event

    title = GBR_change_monarch_2022.t 							# Title of the event; ADD LOCALISATION
    desc = GBR_change_monarch_2022.d 							# Description of the event; ADD LOCALISATION
    #flavor = GBR_change_monarch_2022.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:GBR ?= this											# Change TAG of the overlord ****
		game_date >= 2022.9.8									# START DATE: Date colony became self governing ****
		game_date < 2032.9.8									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = GBR_change_monarch_2022_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = elizabeth_ii
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = elizabeth_ii
				has_modifier = monarch_character
			}
			kill_character = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = GBR_change_monarch_2022_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_monarchy_events.option				# Accept
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
    }

}

#Death of Hirohito
historical_monarchy_events.3 = {
    type = country_event

    title = JAP_change_monarch_1989.t 							# Title of the event; ADD LOCALISATION
    desc = JAP_change_monarch_1989.d 							# Description of the event; ADD LOCALISATION
    #flavor = JAP_change_monarch_1989.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:JAP ?= this											# Change TAG of the overlord ****
		game_date >= 1989.1.7									# START DATE: Date colony became self governing ****
		game_date < 1999.1.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = JAP_change_monarch_1989_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = hirohito
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = hirohito
				has_modifier = monarch_character
			}
			kill_character = yes
		}
		generate_monarch_for_country = yes
	
		# Fire only once
		set_variable = JAP_change_monarch_1989_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_monarchy_events.option				# Accept
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
    }

}

#Abdication of Akihito
historical_monarchy_events.4 = {
    type = country_event

    title = JAP_change_monarch_2019.t 							# Title of the event; ADD LOCALISATION
    desc = JAP_change_monarch_2019.d 							# Description of the event; ADD LOCALISATION
    #flavor = JAP_change_monarch_2019.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:JAP ?= this											# Change TAG of the overlord ****
		game_date >= 2019.4.30									# START DATE: Date colony became self governing ****
		game_date < 2029.4.30									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = JAP_change_monarch_2019_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = akihito
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = JAP_change_monarch_2019_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = akihito
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Albert II
historical_monarchy_events.5 = {
    type = country_event

    title = BEL_change_monarch_2013.t 							# Title of the event; ADD LOCALISATION
    desc = BEL_change_monarch_2013.d 							# Description of the event; ADD LOCALISATION
    #flavor = BEL_change_monarch_2013.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:BEL ?= this											# Change TAG of the overlord ****
		game_date >= 2013.7.21									# START DATE: Date colony became self governing ****
		game_date < 2023.7.21									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = BEL_change_monarch_2013_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = albert_ii
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = BEL_change_monarch_2013_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = albert_ii
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Juan Carlos I
historical_monarchy_events.6 = {
    type = country_event

    title = SPA_change_monarch_2014.t 							# Title of the event; ADD LOCALISATION
    desc = SPA_change_monarch_2014.d 							# Description of the event; ADD LOCALISATION
    #flavor = SPA_change_monarch_2014.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:SPA ?= this											# Change TAG of the overlord ****
		game_date >= 2014.6.19									# START DATE: Date colony became self governing ****
		game_date < 2024.6.19									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = SPA_change_monarch_2014_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = juan_carlos_i
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = SPA_change_monarch_2014_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = juan_carlos_i
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Juliana
historical_monarchy_events.7 = {
    type = country_event

    title = NET_change_monarch_1980.t 							# Title of the event; ADD LOCALISATION
    desc = NET_change_monarch_1980.d 							# Description of the event; ADD LOCALISATION
    #flavor = NET_change_monarch_1980.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:NET ?= this											# Change TAG of the overlord ****
		game_date >= 1980.4.30									# START DATE: Date colony became self governing ****
		game_date < 1990.4.30									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = NET_change_monarch_1980_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = juliana
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = NET_change_monarch_1980_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = juliana
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Beatrix
historical_monarchy_events.8 = {
    type = country_event

    title = NET_change_monarch_2013.t 							# Title of the event; ADD LOCALISATION
    desc = NET_change_monarch_2013.d 							# Description of the event; ADD LOCALISATION
    #flavor = NET_change_monarch_2013.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:NET ?= this											# Change TAG of the overlord ****
		game_date >= 2013.4.30									# START DATE: Date colony became self governing ****
		game_date < 2023.4.30									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = NET_change_monarch_2013_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = beatrix
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = NET_change_monarch_2013_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = beatrix
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Charlotte
historical_monarchy_events.9 = {
    type = country_event

    title = LUX_change_monarch_1964.t 							# Title of the event; ADD LOCALISATION
    desc = LUX_change_monarch_1964.d 							# Description of the event; ADD LOCALISATION
    #flavor = LUX_change_monarch_1964.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:LUX ?= this											# Change TAG of the overlord ****
		game_date >= 1964.11.12									# START DATE: Date colony became self governing ****
		game_date < 1974.11.12									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = LUX_change_monarch_1964_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = Charlotte_Nassau
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = LUX_change_monarch_1964_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = Charlotte_Nassau
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Jean
historical_monarchy_events.10 = {
    type = country_event

    title = LUX_change_monarch_2000.t 							# Title of the event; ADD LOCALISATION
    desc = LUX_change_monarch_2000.d 							# Description of the event; ADD LOCALISATION
    #flavor = LUX_change_monarch_2000.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:LUX ?= this											# Change TAG of the overlord ****
		game_date >= 2000.10.7									# START DATE: Date colony became self governing ****
		game_date < 2010.10.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = LUX_change_monarch_2000_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = Jean_Nassau
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = LUX_change_monarch_2000_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = Jean_Nassau
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Henri
historical_monarchy_events.11 = {
    type = country_event

    title = LUX_change_monarch_2025.t 							# Title of the event; ADD LOCALISATION
    desc = LUX_change_monarch_2025.d 							# Description of the event; ADD LOCALISATION
    #flavor = LUX_change_monarch_2025.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:LUX ?= this											# Change TAG of the overlord ****
		game_date >= 2025.10.3									# START DATE: Date colony became self governing ****
		game_date < 2035.10.3									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = LUX_change_monarch_2025_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = Guillaume_V_Nassau
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = LUX_change_monarch_2025_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = Guillaume_V_Nassau
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

#Abdication of Margrethe II
historical_monarchy_events.12 = {
    type = country_event

    title = DEN_change_monarch_2024.t 							# Title of the event; ADD LOCALISATION
    desc = DEN_change_monarch_2024.d 							# Description of the event; ADD LOCALISATION
    #flavor = DEN_change_monarch_2024.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_ruler_speaking_to_people.bk2" }

    icon = "gfx/interface/icons/law_icons/monarchy.dds" 			# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:DEN ?= this											# Change TAG of the overlord ****
		game_date >= 2024.1.14									# START DATE: Date colony became self governing ****
		game_date < 2034.1.14									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_monarchy = yes										# Correct gov types
		
		# Event has not been fired before
		NOT = { has_variable = DEN_change_monarch_2024_hme }	# CHANGE ****
		
		#Relevant character
		any_scope_character = {
			has_variable = Margrethe_II_Oldenburg
			has_modifier = monarch_character
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = DEN_change_monarch_2024_hme				# Change variable ****
		
	}
    
    option = {
        name = historical_gov_changes.option.1					# Accept
        highlighted_option = yes
		
		#Abdicate monarch
		random_scope_character = {
			limit = { 
				has_variable = Margrethe_II_Oldenburg
				has_modifier = monarch_character
			}
			retire_monarch_character_scripted_effect = yes
		}
		generate_monarch_for_country = yes
		
		#National mourning
		add_loyalists = {
			value = large_radicals
			strata = upper_strata
		}
		add_loyalists = {
			value = medium_radicals
			strata = middle_strata
		}
		add_loyalists = {
			value = small_radicals
			strata = lower_strata
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_gov_changes.option.2				# Reject
		default_option = yes
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}
