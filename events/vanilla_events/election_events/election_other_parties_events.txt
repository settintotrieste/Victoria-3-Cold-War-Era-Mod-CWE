namespace = election_other_parties_events

# Man Over Machine
# The Agrarian Party complains about factories and blames the capitalists/industrialists for making them lose momentum
election_other_parties_events.1 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.1.t
	desc = election_other_parties_events.1.d
	flavor = election_other_parties_events.1.f

	duration = 3
	
	cooldown = { days = very_long_modifier_time }

	event_image = {
		video = "asia_farmers_market"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		country_has_free_political_parties = yes
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = traditionalist_party
		}
		any_scope_state = {
			OR = {
				any_scope_building = {
					is_industry_building = yes
					level >= 5
				}
				any_scope_building = {
					is_heavy_industry_building = yes
					level >= 5
				}
			}
		}
		ig:ig_industrialists = {
			is_marginal = no
		}
		has_technology_researched = tech_agriculture_1
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = traditionalist_party }
			save_scope_as = traditionalist_party
		}
		random_scope_state = {
			limit = {
				any_scope_building = {
					OR = {
						is_industry_building = yes
						is_heavy_industry_building = yes
					}
					level >= 5
				}
	
			}
			save_scope_as = industrial_state
		}
		ig:ig_industrialists = {
			save_scope_as = ig_industrialists
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #factories could never replace men
		name = election_other_parties_events.1.a
		py:traditionalist_party = {
			add_momentum = momentum_medium
		}
		ig:ig_rural_folk = { #rural folk agrees
			add_modifier = {
				name = anti_industrial_party_modifier # interest_group_approval_add
				days = normal_modifier_time
			}
		}
	}

	option = { #progress always finds a way
		name = election_other_parties_events.1.b
		default_option = yes
		py:traditionalist_party = {
			add_momentum = momentum_medium_decrease
		}
	}
}

# God's Will
# Religious Party leader preaches that God wants them to win
election_other_parties_events.2 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.2.t
	desc = election_other_parties_events.2.d
	flavor = election_other_parties_events.2.f

	duration = 3
	
	cooldown = { days = very_long_modifier_time }

	event_image = {
		trigger = {
			religion = rel:jewish
		}
		video = "europenorthamerica_judaism"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
			}
		}
		video = "southamerica_christianity"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:hindu
				religion = rel:sikh
			}
		}
		video = "asia_hinduism_sikhism"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}
	event_image = {
		trigger = {
			religion = rel:shinto
		}
		video = "asia_confucianism_shinto"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
			}
		}
		video = "asia_buddhism"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
				religion = rel:alevi
			}
		}
		video = "middleeast_islam"

		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}
	event_image = {
		trigger = {
			NOR = {
				religion = rel:jewish
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
				religion = rel:shinto
				religion = rel:hindu
				religion = rel:sikh
				religion = rel:sunni
				religion = rel:shiite
				religion = rel:alevi
			}
		}
		video = "africa_animism"
	
		on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	}

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		country_has_free_political_parties = yes
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		ig:ig_devout = {
			has_party = yes
		}
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		ig:ig_devout = {
			party = {
				save_scope_as = religious_party
			}
		}
		ig:ig_devout = {
			save_scope_as = ig_devout
			leader = {
				save_scope_as = religious_leader
			}
		}
		if = {
			limit = {
				any_active_party = {
					NOT = { THIS = scope:religious_party }
				}
			}
			random_active_party = {
				limit = { NOT = { THIS = scope:religious_party } }
				save_scope_as = other_party
			}
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #and who are we to go against God's will
		name = election_other_parties_events.2.a
		ig:ig_devout = { #wahooo
			add_modifier = {
				name = gods_will_modifier # interest_group_pol
				days = normal_modifier_time
			}
		}
	}

	option = { #we didn't get the memo
		name = election_other_parties_events.2.b
		default_option = yes
		scope:religious_leader = { #we ruin this guy's life
			add_modifier = {
				name = gods_wont_modifier #hehe
				days = normal_modifier_time
			}
		}
	}
	
	option = { #no, God wants THEM to win
		name = election_other_parties_events.2.c
		trigger = {
			exists = scope:other_party
		}
		scope:other_party = {
			add_momentum = momentum_small
		}
	}
}

# Ordo Naturalis
# The Military Party gains momentum when you're at war
election_other_parties_events.3 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.3.t
	desc = election_other_parties_events.3.d
	flavor = election_other_parties_events.3.f

	duration = 3
	
	cooldown = { days = very_long_modifier_time }

	event_image = {
		video = "unspecific_military_parade"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		country_has_free_political_parties = yes
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = fascist_party
		}
		is_at_war = yes
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = fascist_party }
			save_scope_as = fascist_party
		}
		random_scope_war = {
			save_scope_as = ongoing_war
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #these people are our only option
		name = election_other_parties_events.3.a
		py:fascist_party = {
			add_momentum = momentum_medium
		}
		ig:ig_armed_forces = { #armed forces like this
			add_modifier = {
				name = supported_war_politics_modifier # interest_group_approval_add
				days = normal_modifier_time
			}
		}
		if = {
			limit = {
				any_interest_group = {
					leader = {
						has_ideology = ideology:ideology_liberal
					}
				}
			}
			every_interest_group = {
				limit = {
					leader = {
						has_ideology = ideology:ideology_liberal
					}
				}
				add_modifier = {
					name = supported_war_leaders_modifier
					days = short_modifier_time
				}
			}
		}
	}

	option = { #they need to stop being populists
		name = election_other_parties_events.3.b
		default_option = yes
		py:fascist_party = {
			add_momentum = momentum_large_decrease
		}
		add_loyalists = {
			value = large_radicals
			pop_type = academics
		}
		add_radicals = {
			value = medium_radicals
			pop_type = officers
		}
		add_radicals = {
			value = medium_radicals
			pop_type = soldiers
		}
	}
}

# Lagom
# Social Democrats say "hey, at least we're not THAT guy" (communists/radicals/anarchists)
election_other_parties_events.4 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.4.t
	desc = election_other_parties_events.4.d
	flavor = election_other_parties_events.4.f

	duration = 3
	
	cooldown = { days = very_long_modifier_time }

	event_image = {
		video = "unspecific_signed_contract"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		country_has_free_political_parties = yes
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = progressive_party
		}
		OR = {
			any_active_party = {
				is_party_type = communist_party
			}
			any_active_party = {
				is_party_type = libertarian_party
			}
			any_active_party = {
				is_party_type = fascist_party
			}
		}
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = progressive_party }
			save_scope_as = progressive_party
		}
		if = {
			limit = {
				any_active_party = {
					is_party_type = communist_party
				}
			}
			random_active_party = {
				limit = { is_party_type = communist_party }
				save_scope_as = leftist_party
			}
		}
		else_if = {
			limit = {
				any_active_party = {
					is_party_type = libertarian_party
				}
			}
			random_active_party = {
				limit = { is_party_type = libertarian_party }
				save_scope_as = leftist_party
			}
		}
		else_if = {
			limit = {
				any_active_party = {
					is_party_type = fascist_party
				}
			}
			random_active_party = {
				limit = { is_party_type = fascist_party }
				save_scope_as = leftist_party
			}
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #well, maybe we WANT you to be
		name = election_other_parties_events.4.a
		scope:leftist_party = {
			add_momentum = momentum_medium
		}
	}
	
	option = { #and thank God for that
		name = election_other_parties_events.4.b
		default_option = yes
		py:progressive_party = {
			add_momentum = momentum_small
		}
	}
}

# Radical!
# Radicals are radicalising around
election_other_parties_events.5 = {
	type = country_event
	placement = ROOT
	title = election_other_parties_events.5.t
	desc = election_other_parties_events.5.d
	flavor = election_other_parties_events.5.f

	duration = 3
	
	cooldown = { days = very_long_modifier_time }

	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_election.dds"

	trigger = {
		country_has_free_political_parties = yes
		in_election_campaign = yes
		NOT = { has_variable = election_event_cooldown }
		any_active_party = {
			is_party_type = fascist_party
		}
	}

	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = { is_party_type = fascist_party }
			save_scope_as = fascist_party
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
			}
			save_scope_as = radicals_state
		}
	}
	
	cancellation_trigger = {
		in_election_campaign = no
	}

	option = { #keep up with the good work
		name = election_other_parties_events.5.a
		py:fascist_party = { #you give them momentum
			add_momentum = momentum_medium
		}
		scope:radicals_state = {
			add_radicals_in_state = {
				value = small_radicals
			}
		}
	}

	option = { #pls stop
		name = election_other_parties_events.5.b
		default_option = yes
		py:fascist_party = {
			add_momentum = momentum_medium_decrease
		}
		if = {
			limit = {
				any_interest_group = {
					leader = {
						has_ideology = ideology:ideology_autocratic
					}
				}
			}
			every_interest_group = {
				limit = {
					leader = {
						has_ideology = ideology:ideology_autocratic
					}
				}
				add_modifier = {
					name = stopped_radicals_modifier
					days = short_modifier_time
				}
			}
		}				
	}
	
	option = { #pls stop harder
		name = election_other_parties_events.5.c
		trigger = {
			OR = {
				institution_investment_level = {
					institution = institution_police
					value >= 5
				}
				has_law_or_variant = law_type:law_outlawed_dissent
			}
		}
		py:fascist_party = {
			add_momentum = momentum_large_decrease
		}
		scope:radicals_state = {
			add_radicals_in_state = {
				value = medium_radicals
			}
		}
	}
}