namespace = natural_disaster_events

natural_disaster_events.1 = { #Small Earthquake
	type = country_event
	placement = scope:earthquake_state

	title = natural_disaster_events.1.t
	desc = natural_disaster_events.1.d
	flavor = natural_disaster_events.1.f

	duration = 3

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	trigger = {
		any_scope_state = {
			in_earthquake_zone = yes
			state_region = {
				NOT = { has_variable = natural_disaster_cooldown }
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				in_earthquake_zone = yes
			}
			save_scope_as = earthquake_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.1.a
		default_option = yes
		scope:earthquake_state.state_region = {
			add_devastation = 20
		}
	}

	option = { #Extra help
		name = natural_disaster_events.1.b
		add_modifier = {
			name = modifier_earthquake_relief
			multiplier = money_amount_multiplier_medium
			days = short_modifier_time
		}
		scope:earthquake_state.state_region = {
			add_devastation = 10
		}
	}
}

natural_disaster_events.2 = { #Small Flood
	type = country_event
	placement = scope:flood_state

	title = natural_disaster_events.2.t
	desc = natural_disaster_events.2.d
	flavor = natural_disaster_events.2.f

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	trigger = {
		any_scope_state = {
			state_region = {
				has_harvest_condition = flood
				NOT = { has_variable = natural_disaster_cooldown }
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				state_region = {
					has_harvest_condition = flood
				}
			}
			save_scope_as = flood_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.2.a
		default_option = yes
		scope:flood_state.state_region = {
			add_devastation = 20
		}
	}

	option = { #Extra help
		name = natural_disaster_events.2.b
		add_modifier = {
			name = modifier_flood_relief
			multiplier = money_amount_multiplier_medium
			days = short_modifier_time
		}
		scope:flood_state.state_region = {
			add_devastation = 10
		}
	}
}

natural_disaster_events.3 = { #Mega Flood
	type = country_event
	placement = scope:mega_flood_state

	title = natural_disaster_events.3.t
	desc = natural_disaster_events.3.d
	flavor = natural_disaster_events.3.f

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	trigger = {
		any_scope_state = {
			state_region = {
				has_harvest_condition = flood
				NOT = { has_variable = natural_disaster_cooldown }
			}
		}

		NOT = {
			has_variable = mega_flood
		}

		NOT = {
			global_var:number_of_mega_floods > 5
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				state_region = {
					has_harvest_condition = flood
				}
			}
			save_scope_as = mega_flood_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
		set_variable = mega_flood
		if = {
			limit = { exists = var:number_of_mega_floods }
			change_global_variable = {
				name = number_of_mega_floods
				add = 1
			}
		}
		else = {
			set_global_variable = {
				name = number_of_mega_floods
				value = 1
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.3.a
		default_option = yes
		scope:mega_flood_state.state_region = {
			add_devastation = 40
		}
	}

	option = { #Extra help
		name = natural_disaster_events.3.b
		add_modifier = {
			name = modifier_mega_flood_relief
			multiplier = money_amount_multiplier_large
			days = normal_modifier_time
		}
		scope:mega_flood_state.state_region = {
			add_devastation = 20
		}
	}
}



natural_disaster_events.4 = { #Mega Earthquake
	type = country_event
	placement = scope:mega_earthquake_state

	title = natural_disaster_events.4.t
	desc = natural_disaster_events.4.d
	flavor = natural_disaster_events.4.f

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	trigger = {
		any_scope_state = {
			in_earthquake_zone = yes
			state_region = {
				NOT = { has_variable = natural_disaster_cooldown }
			}
		}
		NOT = {
			has_variable = mega_earthquake
		}
		NOT = {
			global_var:number_of_mega_earthquakes > 5
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				in_earthquake_zone = yes
			}
			save_scope_as = mega_earthquake_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
		if = {
			limit = {
				exists = var:mega_earthquake
			}
			change_global_variable = {
				name = number_of_mega_earthquakes
				add = 1
			}
		}
		else = {
			set_variable = {
				name = mega_earthquake
				value = 1
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.4.a
		default_option = yes
		scope:mega_earthquake_state.state_region = {
			add_devastation = 40
		}
	}

	option = { #Extra help
		name = natural_disaster_events.4.b
		add_modifier = {
			name = modifier_mega_earthquake_relief
			multiplier = money_amount_multiplier_large
			days = normal_modifier_time
		}
		scope:mega_earthquake_state.state_region = {
			add_devastation = 20
		}
	}
}


natural_disaster_events.5 = { #Crop Failure
	type = country_event
	placement = scope:crop_fail_state

	title = natural_disaster_events.5.t
	desc = natural_disaster_events.5.d
	flavor = natural_disaster_events.5.f

	duration = 3

	event_image = {
		video = "asia_dead_cattle_poor_harvest"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_fire.dds"

	trigger = {
		any_scope_state = {
			any_scope_building = {
				is_farm_building = yes
				occupancy >= 0.1
			}
			state_region = {
				has_harvest_condition = disease_outbreak
				NOT = { has_variable = natural_disaster_cooldown }
				NOT = { has_variable = krakatoa_crop_failure }
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				any_scope_building = {
					is_farm_building = yes
					occupancy >= 0.1
				}
				state_region = {
					has_harvest_condition = disease_outbreak
					NOT = { has_variable = natural_disaster_cooldown }
					NOT = { has_variable = krakatoa_crop_failure }
				}
			}
			save_scope_as = crop_fail_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
			random_scope_building = {
				limit = {
					is_farm_building = yes
				}
				save_scope_as = crop_failure_building
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.5.a
		default_option = yes
		scope:crop_fail_state = {
			add_modifier = {
				name = modifier_crop_failure
				days = normal_modifier_time
			}
		}
	}

	option = { # extra help
		name = natural_disaster_events.5.b
		add_modifier = {
			name = modifier_crop_failure_relief
			multiplier = money_amount_multiplier_small
			days = short_modifier_time
		}
		scope:crop_fail_state = {
			add_modifier = {
				name = modifier_crop_failure_relief_effect
				days = normal_modifier_time
			}
		}
	}
}

natural_disaster_events.6 = { #Tropical Cyclone
	type = country_event
	placement = scope:cyclone_state

	title = natural_disaster_events.6.t
	desc = natural_disaster_events.6.d
	flavor = natural_disaster_events.6.f

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	trigger = {
		any_scope_state = {
			in_earthquake_zone = yes
			is_coastal = yes
			state_region = {
				NOT = { has_variable = natural_disaster_cooldown }
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				in_earthquake_zone = yes
				is_coastal = yes
			}
			save_scope_as = cyclone_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.6.a
		default_option = yes
		scope:cyclone_state.state_region = {
			add_devastation = 20
		}
	}

	option = { #Extra help
		name = natural_disaster_events.6.b
		add_modifier = {
			name = modifier_cyclone_relief
			multiplier = money_amount_multiplier_small
			days = short_modifier_time
		}
		scope:cyclone_state.state_region = {
			add_devastation = 10
		}
	}
}

natural_disaster_events.7 = { #Small Eruption
	type = country_event
	placement = scope:volcanic_state

	title = natural_disaster_events.7.t
	desc = natural_disaster_events.7.d
	flavor = natural_disaster_events.7.f

	duration = 3

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	trigger = {
		any_scope_state = {
			in_volcanic_zone = yes
			state_region = {
				NOT = { has_variable = natural_disaster_cooldown }
			}
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				in_volcanic_zone = yes
			}
			save_scope_as = volcanic_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.7.a
		default_option = yes
		if = {
			limit = {
				has_variable = krakatoa_uni_var
			}
			scope:volcanic_state.state_region = {
				add_devastation = 10
			}
		}
		else = {
			scope:volcanic_state.state_region = {
				add_devastation = 20
			}
		}
	}

	option = { #Extra help
		name = natural_disaster_events.7.b
		add_modifier = {
			name = modifier_volcano_relief
			multiplier = money_amount_multiplier_small
			days = short_modifier_time
		}
		if = {
			limit = {
				has_variable = krakatoa_uni_var
			}
			#nothing happens
		}
		else = {
			scope:volcanic_state.state_region = {
				add_devastation = 10
			}
		}
	}
}

natural_disaster_events.8 = { #Mega Eruption
	type = country_event
	placement = scope:mega_volcanic_state

	title = natural_disaster_events.8.t
	desc = natural_disaster_events.8.d
	flavor = natural_disaster_events.8.f

	event_image = {
		video = "unspecific_devastation"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_skull.dds"

	duration = 3

	trigger = {
		any_scope_state = {
			in_volcanic_zone = yes
			state_region = {
				NOT = { has_variable = natural_disaster_cooldown }
			}
			NOT = { state_region = s:STATE_WEST_JAVA }
		}
		NOT = {
			has_variable = mega_eruption
		}
		NOT = {
			global_var:number_of_mega_eruptions > 3
		}
	}

	immediate = {
		random_scope_state = {
			limit = {
				in_volcanic_zone = yes
				NOT = { state_region = s:STATE_WEST_JAVA }
			}
			save_scope_as = mega_volcanic_state
			state_region = {
				set_variable = {
					name = natural_disaster_cooldown
					days = normal_modifier_time
				}
			}
		}
		set_variable = {
			name = mega_eruption
			value = yes
		}
		if = {
			limit = { exists = var:number_of_mega_eruptions }
			change_global_variable = {
				name = number_of_mega_eruptions
				add = 1
			}
		}
		else = {
			set_global_variable = {
				name = number_of_mega_eruptions
				value = 1
			}
		}
	}

	option = { #No extra help
		name = natural_disaster_events.8.a
		default_option = yes
		scope:mega_volcanic_state.state_region = {
			add_devastation = 40
		}
	}

	option = { #Extra help
		name = natural_disaster_events.8.b
		add_modifier = {
			name = modifier_mega_volcanic_relief
			multiplier = money_amount_multiplier_large
			days = normal_modifier_time
		}
		scope:mega_volcanic_state.state_region = {
			add_devastation = 20
		}
	}
}