namespace = free_speech_laws

# Pamphlet Distributed
free_speech_laws.1 = {
	type = country_event
	placement = root
	title = free_speech_laws.1.t
	desc = free_speech_laws.1.d
	flavor = free_speech_laws.1.f

	category = enactment

	duration = 3

	event_image = {
		video = "asia_union_leader"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { days = normal_modifier_time }

	trigger = {
		NOR = {
			has_modifier = free_speech_pamphlet_advance
			has_modifier = free_speech_pamphlet_risk_fail
			has_modifier = free_speech_pamphlet_risk_success
		}
		AND = {
			OR = {
				is_enacting_law = law_type:law_limited_free_speech
				is_enacting_law = law_type:law_full_free_speech
			}
			OR = {
				has_law_or_variant = law_type:law_censorship
				has_law_or_variant = law_type:law_outlawed_dissent
			}
		}
	}

	immediate = {
		currently_enacting_law = {
    		save_scope_as = current_law_scope
    	}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { #Pro free speech Pamphlet
		name = free_speech_laws.1.a
		default_option = yes
		add_enactment_modifier = {
			name = free_speech_pamphlet_advance
		}
	}
	
	option = { #Use these Pamphlets to push a stronger message
		name = free_speech_laws.1.b
		random_list = {
			1 = {
				add_enactment_modifier = {
					name = free_speech_pamphlet_risk_fail
				}
			}
			3 = {
				add_enactment_modifier = {
					name = free_speech_pamphlet_risk_success
				}
			}
		}
	}
}

# Book burnings
free_speech_laws.2 = {
	type = country_event
	placement = root
	title = free_speech_laws.2.t
	desc = free_speech_laws.2.d
	flavor = free_speech_laws.2.f

	category = enactment

	duration = 3

	event_image = {
		video = "africa_public_protest"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { days = normal_modifier_time }

	trigger = {
		NOR = {
			has_modifier = free_speech_book_burning_advance
			has_modifier = free_speech_book_burning_risk_fail
			has_modifier = free_speech_book_burning_risk_success
		}
		AND = {
			OR = {
				is_enacting_law = law_type:law_censorship
				is_enacting_law = law_type:law_outlawed_dissent
			}
			OR = {
				has_law_or_variant = law_type:law_limited_free_speech
				has_law_or_variant = law_type:law_full_free_speech
			}
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}
		}
	}

	immediate = {
		currently_enacting_law = {
    		save_scope_as = current_law_scope
    	}
    	random_interest_group = {
			limit = {
				is_marginal = no
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
			}
			save_scope_as = book_burning_ig
    	}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { 
		name = free_speech_laws.2.a
		default_option = yes
		add_enactment_modifier = {
			name = free_speech_book_burning_advance
		}
	}
	
	option = { 
		name = free_speech_laws.2.b
		random_list = {
			1 = {
				add_enactment_modifier = {
					name = free_speech_book_burning_risk_fail
				}
			}
			3 = {
				add_enactment_modifier = {
					name = free_speech_book_burning_risk_success
				}
			}
		}
	}
}

# Censoring Censorship
free_speech_laws.3 = {
	type = country_event
	placement = root
	title = free_speech_laws.3.t
	desc = free_speech_laws.3.d
	flavor = free_speech_laws.3.f

	category = enactment

	duration = 3

	event_image = {
		video = "middleeast_police_breaking_door"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { days = normal_modifier_time }

	trigger = {
		NOR = {
			has_modifier = free_speech_censorship_stall
			has_modifier = free_speech_censorship_stall_fail
			has_modifier = free_speech_censorship_stall_success
		}
		AND = {
			OR = {
				is_enacting_law = law_type:law_limited_free_speech
				is_enacting_law = law_type:law_full_free_speech
			}
			OR = {
				has_law_or_variant = law_type:law_censorship 
				has_law_or_variant = law_type:law_outlawed_dissent
			}
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}
		}
	}

	immediate = {
		currently_enacting_law = {
    		save_scope_as = current_law_scope
    	}
    	random_interest_group = {
			limit = {
				is_marginal = no
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
			}
			save_scope_as = book_burning_ig
    	}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = {
		name = free_speech_laws.3.a
		default_option = yes
		add_enactment_modifier = {
			name = free_speech_censorship_stall
		}
	}
	
	option = { 
		name = free_speech_laws.3.b
		random_list = {
			1 = {
				add_enactment_modifier = {
					name = free_speech_censorship_stall_fail
				}
			}
			3 = {
				add_enactment_modifier = {
					name = free_speech_censorship_stall_success
				}
			}
		}
	}
}

# Overwhelming Propaganda
free_speech_laws.4 = {
	type = country_event
	placement = root
	title = free_speech_laws.4.t
	desc = free_speech_laws.4.d
	flavor = free_speech_laws.4.f

	category = enactment

	duration = 3

	event_image = {
		video = "middleeast_police_breaking_door"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { days = normal_modifier_time }

	trigger = {
		NOR = {
			has_modifier = free_speech_no_censorship_stall
			has_modifier = free_speech_no_censorship_stall_fail
			has_modifier = free_speech_no_censorship_stall_success
		}
		AND = {
			OR = {
				is_enacting_law = law_type:law_censorship
				is_enacting_law = law_type:law_outlawed_dissent
			}
			OR = {
				has_law_or_variant = law_type:law_limited_free_speech
				has_law_or_variant = law_type:law_full_free_speech
			}
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}
		}
	}

	immediate = {
		currently_enacting_law = {
    		save_scope_as = current_law_scope
    	}
    	random_interest_group = {
			limit = {
				is_marginal = no
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
			}
			save_scope_as = free_speech_ig
    	}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { #Pro free speech literature
		name = free_speech_laws.4.a
		default_option = yes
		add_enactment_modifier = {
			name = free_speech_no_censorship_stall
		}
	}
	
	option = { 
		name = free_speech_laws.4.b
		random_list = {
			1 = {
				add_enactment_modifier = {
					name = free_speech_no_censorship_stall_fail
				}
			}
			3 = {
				add_enactment_modifier = {
					name = free_speech_no_censorship_stall_success
				}
			}
		}
	}
}

# Ruler caught reading banned book
free_speech_laws.5 = {
	type = country_event
	placement = root
	title = free_speech_laws.5.t
	desc = free_speech_laws.5.d
	flavor = free_speech_laws.5.f

	category = enactment

	duration = 3

	gui_window = event_window_1char_tabloid

	left_icon = scope:ruler_scope

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/misc/1Character_Banner"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { days = normal_modifier_time }

	trigger = {
		NOR = {
			has_modifier = free_speech_lewd_book_success
			has_modifier = free_speech_lewd_book_fail
		}
		AND = {
			OR = {
				is_enacting_law = law_type:law_limited_free_speech
				is_enacting_law = law_type:law_full_free_speech
			}
			OR = {
				has_law_or_variant = law_type:law_censorship 
				has_law_or_variant = law_type:law_outlawed_dissent
			}
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}
		}
		ruler = {
			age >= 18
		}
		any_neighbouring_state = {
			NOT = { owner = ROOT }
		}
	}

	immediate = {
		currently_enacting_law = {
    		save_scope_as = current_law_scope
    	}
    	ruler = {
			save_scope_as = ruler_scope
		}
		random_neighbouring_state = {
			limit = { NOT = { owner = ROOT } } 
			owner = {
				save_scope_as = neighbour_country
			}
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { 
		name = free_speech_laws.5.a
		default_option = yes
		add_enactment_modifier = {
			name = free_speech_lewd_book_success
		}
	}
		
	option = { 
		name = free_speech_laws.5.b
		add_enactment_modifier = {
			name = free_speech_lewd_book_fail
		}	
	}
}

free_speech_laws.6 = { #Insulting drawing
	type = country_event
	placement = root
	title = free_speech_laws.6.t
	desc = free_speech_laws.6.d
	flavor = free_speech_laws.6.f

	category = enactment

	duration = 3

	event_image = {
		video = "middleeast_police_breaking_door"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { days = normal_modifier_time }

	trigger = {
		NOR = {
			has_modifier = free_speech_lewd_drawing_condemned
			has_modifier = free_speech_lewd_drawing_supported
		}
		AND = {
			OR = {
				is_enacting_law = law_type:law_censorship
				is_enacting_law = law_type:law_outlawed_dissent
			}
			OR = {
				has_law_or_variant = law_type:law_limited_free_speech
				has_law_or_variant = law_type:law_full_free_speech
			}
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}
		}
		any_interest_group = {
			is_marginal = no
			law_stance = {
				law = owner.currently_enacting_law.type
				value < neutral
			}
		}
	}

	immediate = {
		currently_enacting_law = {
    		save_scope_as = current_law_scope
    	}
    	random_interest_group = {
			limit = {
				is_marginal = no
				law_stance = {
					law = owner.currently_enacting_law.type
					value < neutral
				}
			}
			save_scope_as = free_speech_ig
    	}
    	scope:free_speech_ig = {
    		leader = {
    			save_scope_as = ig_leader_scope
    		}
    	}
    	ruler = {
			save_scope_as = ruler_scope
		}
	}

	cancellation_trigger = {
		NOT = { currently_enacting_law = scope:current_law_scope }
	}

	option = { 
		name = free_speech_laws.6.a
		default_option = yes
		add_enactment_modifier = {
			name = free_speech_lewd_drawing_condemned
		}
	}
		
	option = { 
		name = free_speech_laws.6.b
		add_enactment_modifier = {
			name = free_speech_lewd_drawing_supported
		}
		scope:free_speech_ig = {
			add_modifier = {
				name = free_speech_lewd_drawing_supported_ig
				days = normal_modifier_time
			}
		}	
	}
}