namespace = historical_interstate_wars

### Korean War ###

historical_interstate_wars.1 = {
    type = country_event

    title = korean_war.t 								# Title of the event; ADD LOCALISATION
    desc = korean_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = korean_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:NKO this = c:NKO											# Change TAG of the overlord ****
		game_date >= 1950.3.25									# START DATE: Date colony became self governing ****
		game_date < 1960.6.25									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:SKO
		c:SKO = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_at_war = no
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = korean_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = korean_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#38th Parallel
		c:SKO = { 
			if = {
				limit = { has_state_in_state_region = STATE_PYONGYANG }
				random_scope_state = {
					limit = { state_region = s:STATE_PYONGYANG }
					set_state_owner = c:NKO
				}
			}
		}
		c:NKO = {
			if = {
				limit = { has_state_in_state_region = STATE_SEOUL }
				random_scope_state = {
					limit = { state_region = s:STATE_SEOUL }
					set_state_owner = c:SKO
				}
			}
		}
		
		#Korean War
		if = {
			limit = { is_player = yes }
			create_diplomatic_play = {
				name = korean_war
				type = dp_annex_war_historical
				target_country = c:SKO
				
				#war = yes
				
				#Removed for AI until PRC can intervene to save NKO
				add_war_goal = {
					holder = c:SKO
					type = annex_country
					target_country = c:NKO
				}
			}
		}
		else = {
			
			create_diplomatic_play = {
				name = korean_war
				type = dp_annex_war_historical
				target_country = c:SKO
				
				#war = yes
				
				#TEMP
				add_war_goal = {
					holder = c:SKO
					type = humiliation
					target_country = c:NKO
				}
				
				#Removed until PRC can intervene to save NKO
				#add_war_goal = {
				#	holder = c:SKO
				#	type = annex_country
				#	target_country = c:NKO
				#}
				
			}
			
		}
		
		# Fire only once
		set_variable = korean_war_hiw							# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		# Fire only once
		set_variable = korean_war_hiw							# Change variable ****
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Tibet War ###

historical_interstate_wars.2 = {
    type = country_event

    title = sino_tibetan_war.t 								# Title of the event; ADD LOCALISATION
    desc = sino_tibetan_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = sino_tibetan_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:PRC ?= this c:CHI ?= this }
		game_date >= 1950.10.6									# START DATE: Date colony became self governing ****
		game_date < 1960.10.6									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		#is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:TIB
		c:TIB = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_at_war = no
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = sino_tibetan_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = sino_tibetan_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Korean War
		
		create_diplomatic_play = {
			name = sino_tibetan_war
			type = dp_annex_war_historical
			target_country = c:TIB
			
			war = yes
			
			add_war_goal = {
				holder = c:TIB
				type = humiliation
				target_country = ROOT
			}
		}
		
		# Fire only once
		set_variable = sino_tibetan_war_hiw						# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		# Fire only once
		set_variable = sino_tibetan_war_hiw						# Change variable ****
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Annexation of Goa ###

historical_interstate_wars.3 = {
    type = country_event

    title = portugal_india_war.t 							# Title of the event; ADD LOCALISATION
    desc = portugal_india_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = portugal_india_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:HND
		this = c:HND											# Change TAG of the overlord ****
		game_date >= 1961.12.17									# START DATE: Date colony became self governing ****
		game_date < 1971.12.17									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:POR
		c:POR = { 												# Change TAG of the transferee ****
			exists = yes
			is_at_war = no
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_BOMBAY
		}
		
		# Event has not been fired before
		NOT = { has_variable = portugal_india_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = portugal_india_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Option for war
		c:POR = { trigger_event = { id = historical_interstate_wars.4 } }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#FROM is happy!
		change_relations = {
			country = c:POR
			value = 25
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

historical_interstate_wars.4 = {
    type = country_event

    title = portugal_india_war.t 							# Title of the event; ADD LOCALISATION
    desc = portugal_india_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = portugal_india_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		s:STATE_BOMBAY.region_state:POR = { set_state_owner = c:HND }
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#Trigger war
		c:HND = {
			create_diplomatic_play = {
				name = portugal_india_war
				type = dp_take_treaty_port
				target_state = s:STATE_BOMBAY.region_state:POR
			
				#war = yes

				add_war_goal = {
					holder = c:POR
					type = humiliation
					target_country = c:HND
				}
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Suez Crisis ###

historical_interstate_wars.5 = {
    type = country_event

    title = suez_crisis_war.t 								# Title of the event; ADD LOCALISATION
    desc = suez_crisis_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = suez_crisis_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:EGY
		this = c:EGY											# Change TAG of the overlord ****
		game_date >= 1956.7.26									# START DATE: Date colony became self governing ****
		game_date < 1966.7.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes										# No legal or political restrictions on going to war
		
		#left_wing_ruling_coalition = yes						# Correct ruling coalition ****
		
		#Recipent conditions
		exists = c:GBR
		c:GBR = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_SINAI
		}
		#Recipent conditions
		exists = c:FRA
		c:FRA = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_SINAI
		}
		
		# Event has not been fired before
		NOT = { has_variable = suez_crisis_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = suez_crisis_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Option for war
		c:GBR = { trigger_event = { id = historical_interstate_wars.6 } }
		c:FRA = { trigger_event = { id = historical_interstate_wars.6 } }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#FROM is happy!
		change_relations = {
			country = c:GBR
			value = 25
		}
		change_relations = {
			country = c:FRA
			value = 25
		}
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

historical_interstate_wars.6 = {
    type = country_event

    title = suez_crisis_war.t 							# Title of the event; ADD LOCALISATION
    desc = suez_crisis_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = suez_crisis_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
	
	immediate = {
		save_scope_as = suez_canal_owner
		
		random_scope_state = {
			limit = { state_region = s:STATE_SINAI }
			save_scope_as = suez_canal_state
		}
	}
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		random_scope_state = {
			limit = { state_region = s:STATE_SINAI }
			set_state_owner = c:EGY
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		#Egyptian domestic effect
		c:EGY = {
			add_loyalists = {
				value = large_radicals
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#International superpower support for Egypt
		random_country = {
			limit = { 
				this ?= c:SOV 
				is_a_communist_government = yes 
				is_a_superpower = yes 
			}
			change_relations = {
				country = c:EGY
				value = 100
			}
			change_relations = {
				country = ROOT
				value = -100
			}
		}
		random_country = {
			limit = { 
				this ?= c:USA
				is_a_democracy = yes 
				is_a_superpower = yes 
			}
			change_relations = {
				country = c:EGY
				value = 100
			}
			change_relations = {
				country = ROOT
				value = -50
			}
		}
		random_country = {
			limit = { 
				this ?= c:ISR
				is_a_democracy = yes
			}
			change_relations = {
				country = ROOT
				value = 100
			}
		}
		
		#Trigger war
		c:EGY = {
			create_diplomatic_play = {
				name = suez_crisis_war
				type = dp_take_treaty_port
				target_state = scope:suez_canal_state
			
				#war = yes

				add_war_goal = {
					holder = scope:suez_canal_owner
					type = humiliation
					target_country = c:EGY
				}
				add_war_goal = {
					holder = scope:suez_canal_owner
					type = regime_change
					target_country = c:EGY
				}
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Vietnam War ###

historical_interstate_wars.7 = {
    type = country_event

    title = vietnam_war.t 								# Title of the event; ADD LOCALISATION
    desc = vietnam_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = vietnam_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:NVM ?= this
		game_date >= 1968.1.30									# START DATE: Date colony became self governing ****
		game_date < 1978.1.30									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:SVM
		c:SVM = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = vietnam_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = vietnam_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Vietnam War
		create_diplomatic_play = {
			name = vietnam_war
			type = dp_annex_war_historical
			target_country = c:SVM
			
			war = yes
			
			add_war_goal = {
				holder = c:SVM
				type = annex_country
				target_country = c:NVM
			}
			
		}
		
		#Give the AI some help
		if = {
			limit = { is_player = no }
			add_modifier = { 
				name = pm_offense_defense_ai_boost
				years = 5
				is_decaying = yes 
			}
			add_treasury = 5000000
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Second Indo-Pakistan War ###

historical_interstate_wars.8 = {
    type = country_event

    title = second_indo_pakistan_war.t 								# Title of the event; ADD LOCALISATION
    desc = second_indo_pakistan_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = second_indo_pakistan_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:PAK
		this = c:PAK											# Change TAG of the overlord ****
		game_date >= 1965.1.8									# START DATE: Date colony became self governing ****
		game_date < 1975.1.8									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:HND
		c:HND = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_KASHMIR
		}
		
		# Event has not been fired before
		NOT = { has_variable = second_indo_pakistan_war_hiw }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = second_indo_pakistan_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = second_indo_pakistan_war
			type = dp_conquer_state_historical
			target_state = s:STATE_KASHMIR.region_state:HND
			
			#war = yes

			add_war_goal = {
				holder = c:HND
				type = humiliation
				target_country = c:PAK
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Falklands War ###

historical_interstate_wars.9 = {
    type = country_event

    title = falklands_war.t 							# Title of the event; ADD LOCALISATION
    desc = falklands_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = falklands_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:ARG
		this = c:ARG											# Change TAG of the overlord ****
		game_date >= 1982.1.2									# START DATE: Date colony became self governing ****
		game_date < 1992.1.2									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		OR = { 
			is_a_nationalist_government = yes
			is_a_republican_regime = yes
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:GBR
		c:GBR = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_SOUTH_ATLANTIC_ISLANDS
		}
		
		# Event has not been fired before
		NOT = { has_variable = falklands_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = falklands_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = falklands_war
			type = dp_return_state_historical
			target_state = s:STATE_SOUTH_ATLANTIC_ISLANDS.region_state:GBR
			
			#war = yes

			add_war_goal = {
				holder = c:GBR
				type = humiliation
				target_country = c:ARG
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Third Indo-Pakistan War ###

historical_interstate_wars.10 = {
    type = country_event

    title = third_indo_pakistan_war.t 							# Title of the event; ADD LOCALISATION
    desc = third_indo_pakistan_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = third_indo_pakistan_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:PAK
		this = c:PAK											# Change TAG of the overlord ****
		game_date >= 1971.9.3									# START DATE: Date colony became self governing ****
		game_date < 1981.12.3									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		has_state_in_state_region = STATE_SOUTH_BENGAL
		
		#Recipent conditions
		exists = c:HND
		c:HND = { 												# Change TAG of the transferee ****
			is_a_democracy = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_KASHMIR
		}
		
		# Event has not been fired before
		NOT = { has_variable = third_indo_pakistan_war_hiw }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = third_indo_pakistan_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# Release East Pakistan
		create_country = {
			tag = BNG										# Change TAG of country being released ****
			origin = ROOT									# TAG where the created country takes tech from
			state = s:STATE_SOUTH_BENGAL.region_state:PAK
			
			on_created = {									# Set government laws & rulers here
				
				# SET laws for colony ****
				effect_starting_politics_parliamentary_republic = yes
				effect_starting_politics_democratic = yes
				effect_starting_politics_constitutional_unitary_state = yes
				effect_starting_politics_war_policy_anti_military = yes
				effect_starting_politics_economic_policy_interventionism = yes
				effect_starting_politics_trade_policy_protectionism = yes
				effect_starting_politics_anti_nuclear_policy = yes
				
				# CREATE leader for colony ****
				create_character = {
					first_name = "guy_incognito_first_name"		# CHANGE
					last_name = "guy_incognito_last_name"		# CHANGE
					ruler = yes
					#birth_date = 1910.1.1						# CHANGE
					interest_group = ig_rural_folk				# CHANGE
					ideology = ideology_democratic				# CHANGE
					traits = {
						charismatic								# CHANGE
						persistent								# CHANGE
						meticulous								# CHANGE
					}
				}
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		every_scope_state = {
			limit = {
		 		state_region = { is_homeland = cu:bengali }		# Change homeland identity to match colony to be released ****
		 	}
			set_state_owner = c:BNG								# Change TAG to colony ****
		}
		if = {
			limit = { exists = c:BNG }
			c:HND = {
				create_diplomatic_pact = {
					country = c:BNG										# Change TAG ****
					type = satellite
				}
			}
		}
		
		# War
		create_diplomatic_play = {
			name = third_indo_pakistan_war
			type = dp_return_state_historical
			target_state = s:STATE_KASHMIR.region_state:HND
			
			#war = yes

			add_war_goal = {
				holder = c:BNG
				type = independence
				target_country = c:PAK
			}
			add_war_goal = {
				holder = c:PAK
				type = annex_country
				target_country = c:BNG
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### 6 Day War ###

historical_interstate_wars.11 = {
    type = country_event

    title = 6_day_war.t 							# Title of the event; ADD LOCALISATION
    desc = 6_day_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = 6_day_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:EGY
		this = c:EGY											# Change TAG of the overlord ****
		game_date >= 1967.6.5									# START DATE: Date colony became self governing ****
		game_date < 1977.6.5									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		can_go_to_war = yes										# No legal or political restrictions on going to war
		
		#left_wing_ruling_coalition = yes						# Correct ruling coalition ****
		
		owns_entire_state_region = STATE_SINAI
		has_state_in_state_region = STATE_PALESTINE
		
		#Recipent conditions
		exists = c:ISR
		c:ISR = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
		}
		
		#Other participants
		exists = c:JOR
		c:JOR = { 												
			OR = { 
				is_a_regime_monarchy = yes
				is_a_republican_regime = yes
				is_a_nationalist_government = yes
			}
			is_sufficiently_independent = yes
			is_at_war = no
			has_state_in_state_region = STATE_PALESTINE
			is_not_neutral = yes
		}
		exists = c:SYR
		c:SYR = { 												
			#is_a_dictatorship = yes
			is_sufficiently_independent = yes
			is_at_war = no
			is_not_neutral = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = 6_day_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = 6_day_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
		highlighted_option = yes default_option = yes
		
		#Trigger war
		create_diplomatic_play = {
			name = 6_day_war
			type = dp_annex_war_historical
			target_country = c:ISR
			
			war = yes
			
			add_war_goal = {
				holder = c:ISR
				type = conquer_state
				target_state = s:STATE_SINAI.region_state:EGY
			}
			add_war_goal = {
				holder = c:ISR
				type = return_state
				target_state = s:STATE_PALESTINE.region_state:EGY
			}
			
		}
		
		#Option for war
		c:JOR = { trigger_event = { id = historical_interstate_wars.12 } }
		c:SYR = { trigger_event = { id = historical_interstate_wars.12 } }
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		
		#Transfer territories
		random_scope_state = {
			limit = { state_region = s:STATE_SINAI }
			set_state_owner = c:ISR
		}
		random_scope_state = {
			limit = { state_region = s:STATE_PALESTINE }
			set_state_owner = c:ISR
		}
		
		#Option for war
		c:JOR = { trigger_event = { id = historical_interstate_wars.12 } }
		c:SYR = { trigger_event = { id = historical_interstate_wars.12 } }
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90
			
			#AI will challenge the player
			modifier = {
				trigger = {
					c:ISR = { is_player = yes }
				}
				add = -100
			}
		}
		
    }

}

historical_interstate_wars.12 = {
    type = country_event

	title = 6_day_war.t 							# Title of the event; ADD LOCALISATION
    desc = 6_day_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = 6_day_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
	
	immediate = {
		
	}
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		every_scope_state = {
			limit = { state_region = { OR = { is_homeland = cu:palestinian is_homeland = cu:israeli } } }
			set_state_owner = c:ISR
		}
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
			
			#AI will challenge the player
			modifier = {
				trigger = {
					c:ISR = { is_player = yes }
				}
				add = -100
			}
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#Egypt is happy
		change_relations = {
			country = c:EGY
			value = 100
		}
		
		#Trigger war
		if = {
			limit = { c:JOR ?= this }
			
			create_diplomatic_play = {
				name = 6_day_war
				type = dp_annex_war_historical
				target_country = c:ISR
			
				war = yes
			
				add_war_goal = {
					holder = c:ISR
					type = conquer_state
					target_state = s:STATE_PALESTINE.region_state:JOR
				}
			}
		}
		if = {
			limit = { c:SYR ?= this }
			
			create_diplomatic_play = {
				name = 6_day_war
				type = dp_annex_war_historical
				target_country = c:ISR
			
				war = yes
			
				add_war_goal = {
					holder = c:ISR
					type = humiliation
					target_country = c:SYR
				}
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Ifni War ###

historical_interstate_wars.13 = {
    type = country_event

    title = ifni_war.t 								# Title of the event; ADD LOCALISATION
    desc = ifni_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = ifni_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:MOR
		this = c:MOR											# Change TAG of the overlord ****
		game_date >= 1957.10.23									# START DATE: Date colony became self governing ****
		game_date < 1967.10.23									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_monarchy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:SPA
		c:SPA = { 												# Change TAG of the transferee ****
			exists = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_INNER_MOROCCO
		}
		
		# Event has not been fired before
		NOT = { has_variable = ifni_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = ifni_war_hiw								# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Option for war
		c:SPA = { trigger_event = { id = historical_interstate_wars.14 } }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

historical_interstate_wars.14 = {
    type = country_event

    title = ifni_war.t 							# Title of the event; ADD LOCALISATION
    desc = ifni_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = ifni_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
	
	immediate = {
		random_scope_state = {
			limit = { state_region = s:STATE_INNER_MOROCCO }
			save_scope_as = spanish_morocco_state
		}
	}
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		random_scope_state = {
			limit = { state_region = s:STATE_INNER_MOROCCO }
			set_state_owner = c:MOR
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#Trigger war
		c:MOR = {
			create_diplomatic_play = {
				name = ifni_war
				type = dp_return_state_historical
				target_state = scope:spanish_morocco_state
			
				#war = yes

				add_war_goal = {
					holder = c:SPA
					type = humiliation
					target_country = c:MOR
				}
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Invasion of East Timor ###

historical_interstate_wars.15 = {
    type = country_event

    title = IDO_ETM_war.t 								# Title of the event; ADD LOCALISATION
    desc = IDO_ETM_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = IDO_ETM_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:IDO this = c:IDO								# Change TAG of the overlord ****
		game_date >= 1975.9.7									# START DATE: Date colony became self governing ****
		game_date < 1985.12.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_presidential_regime = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ETM
		c:ETM = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
		}
		
		# Event has not been fired before
		NOT = { has_variable = IDO_ETM_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = IDO_ETM_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Invasion of East Timor War
		create_diplomatic_play = {
			name = IDO_ETM_war
			type = dp_annex_war_historical
			target_country = c:ETM
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Iran-Iraq War ###

historical_interstate_wars.16 = {
    type = country_event
	placement = scope:iraq_target_state

    title = iran_iraq_war.t 							# Title of the event; ADD LOCALISATION
    desc = iran_iraq_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = iran_iraq_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:IRQ this = c:IRQ								# Change TAG of the overlord ****
		game_date >= 1980.9.22									# START DATE: Date colony became self governing ****
		game_date < 1990.9.22									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:PER
		c:PER = { 												# Change TAG of the transferee ****
			is_a_theocratic_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_KHUZESTAN
		}
		
		# Event has not been fired before
		NOT = { has_variable = iran_iraq_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		c:PER = {
			random_scope_state = {
				limit = { state_region = s:STATE_KHUZESTAN }
				save_scope_as = iraq_target_state
			}
		}
	
		# Fire only once
		set_variable = iran_iraq_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = iran_iraq_war
			type = dp_conquer_state_historical
			target_state = scope:iraq_target_state
			
			#war = yes

			add_war_goal = {
				holder = c:PER
				type = humiliation
				target_country = c:IRQ
			}
		}
		
		set_variable = iran_iraq_war_happened
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Bizerte Crisis ###

historical_interstate_wars.17 = {
    type = country_event

    title = france_tunisia_war.t 							# Title of the event; ADD LOCALISATION
    desc = france_tunisia_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = france_tunisia_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:TUN this = c:TUN								# Change TAG of the overlord ****
		game_date >= 1961.7.19									# START DATE: Date colony became self governing ****
		game_date < 1971.7.19									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:FRA
		c:FRA = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_TUNISIA
		}
		
		# Event has not been fired before
		NOT = { has_variable = france_tunisia_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = france_tunisia_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Option for war
		c:FRA = { trigger_event = { id = historical_interstate_wars.18 } }
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#FROM is happy!
		change_relations = {
			country = c:FRA
			value = 25
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

historical_interstate_wars.18 = {
    type = country_event

    title = france_tunisia_war.t 							# Title of the event; ADD LOCALISATION
    desc = france_tunisia_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = france_tunisia_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Transfer territories
		s:STATE_TUNISIA.region_state:FRA = { set_state_owner = c:TUN }
		every_scope_state = {
			limit = {
		 		state_region = { is_homeland = cu:tunisian }	# Change homeland identity to match colony to be released ****
				is_incorporated = no							# State is a colony
		 	}
			set_state_owner = c:TUN								# Change TAG to colony ****
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#Trigger war
		c:TUN = {
		
			#Become independent
			make_independent = yes
		
			create_diplomatic_play = {
				name = france_tunisia_war
				type = dp_return_state_historical
				target_state = s:STATE_TUNISIA.region_state:FRA
			
				#war = yes

				add_war_goal = {
					holder = c:FRA
					type = humiliation
					target_country = c:TUN
				}
			}
			
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Yom Kippur War ###

historical_interstate_wars.19 = {
    type = country_event

    title = yom_kippur_war.t 						# Title of the event; ADD LOCALISATION
    desc = yom_kippur_war.d 						# Description of the event; ADD LOCALISATION
    #flavor = yom_kippur_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:EGY
		this = c:EGY											# Change TAG of the overlord ****
		game_date >= 1973.10.6									# START DATE: Date colony became self governing ****
		game_date < 1983.10.6									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		can_go_to_war = yes										# No legal or political restrictions on going to war
		
		#left_wing_ruling_coalition = yes						# Correct ruling coalition ****
		
		#Recipent conditions
		exists = c:ISR
		c:ISR = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_SINAI
			
			has_strategic_land_adjacency = c:EGY
		}
		
		#Other participants
		exists = c:SYR
		c:SYR = {							
			is_a_nationalist_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_strategic_land_adjacency = c:ISR
		}
		
		# Event has not been fired before
		NOT = { has_variable = yom_kippur_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = yom_kippur_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
		highlighted_option = yes default_option = yes
		
		# Trigger War
		create_diplomatic_play = {
			name = yom_kippur_war
			type = dp_return_state_historical
			target_state = s:STATE_SINAI.region_state:ISR
			
			war = yes

			add_war_goal = {
				holder = c:ISR
				type = humiliation
				target_country = c:EGY
			}
		}
		
		#Option for war
		c:SYR = { trigger_event = { id = historical_interstate_wars.20 } }
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		
		#Option for war
		c:SYR = { trigger_event = { id = historical_interstate_wars.20 } }
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90
			
			#AI will challenge the player
			modifier = {
				trigger = {
					c:ISR = { is_player = yes }
				}
				add = -100
			}
		}
		
    }

}

historical_interstate_wars.20 = {
    type = country_event

	title = yom_kippur_war.t 							# Title of the event; ADD LOCALISATION
    desc = yom_kippur_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = yom_kippur_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {														# What triggers the event, if using other events or journal entries leave empty
		
		#Is triggered by another event
		
    }
	
	immediate = {
		
	}
    
    option = {
        name = historical_interstate_wars_accept.option.1			# Accept land transfer request by FROM
        highlighted_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars_reject.option.2			# Refuse land transfer request by FROM
		default_option = yes
		
		#Egypt is happy
		change_relations = {
			country = c:EGY
			value = 100
		}
		
		# Trigger War
		create_diplomatic_play = {
			name = yom_kippur_war
			type = dp_annex_war_historical
			target_country = c:ISR
			
			war = yes

			add_war_goal = {
				holder = c:ISR
				type = humiliation
				target_country = c:SYR
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Annexation of Western Sahara ###

historical_interstate_wars.21 = {
    type = country_event

    title = morocco_sahara_war.t 								# Title of the event; ADD LOCALISATION
    desc = morocco_sahara_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = morocco_sahara_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:MOR
		this = c:MOR											# Change TAG of the overlord ****
		game_date >= 1975.10.31									# START DATE: Date colony became self governing ****
		game_date < 1985.10.31									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_communist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:WSA
		c:WSA = { 												# Change TAG of the transferee ****
			is_at_war = no
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = morocco_sahara_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = morocco_sahara_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = morocco_sahara_war
			type = dp_annex_war_historical
			target_country = c:WSA
			
			#war = yes
			
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Gulf War ###

historical_interstate_wars.22 = {
    type = country_event

    title = iraq_kuwait_war.t 								# Title of the event; ADD LOCALISATION
    desc = iraq_kuwait_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = iraq_kuwait_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:IRQ
		this = c:IRQ											# Change TAG of the overlord ****
		game_date >= 1990.5.2									# START DATE: Date colony became self governing ****
		game_date < 2000.5.2									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_dictatorship = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:KUW
		c:KUW = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
		}
		
		#Iran-Iraq War
		has_variable = iran_iraq_war_happened
		
		# Event has not been fired before
		NOT = { has_variable = iraq_kuwait_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = iraq_kuwait_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Help Kuwait AI get UN assistance via neutrality
		hidden_effect = {
			c:KUW = {
				if = {
					limit = { is_player = no }
					activate_law = law_type:law_no_war
				}
			}
		}
		
		#Gulf War
		create_diplomatic_play = {
			name = iraq_kuwait_war
			type = dp_annex_war_historical
			target_country = c:KUW
			
			#war = yes
			
			add_war_goal = {
				holder = c:KUW
				type = humiliation
				target_country = c:IRQ
			}
		}
		
		change_infamy = 50
		
		set_global_variable = iraq_kuwait_war_happened
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 60 
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Soviet Afghan War ###

historical_interstate_wars.23 = {
    type = country_event

    title = soviet_afghan_war.t 								# Title of the event; ADD LOCALISATION
    desc = soviet_afghan_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = soviet_afghan_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:SOV
		this = c:SOV											# Change TAG of the overlord ****
		game_date >= 1979.9.24									# START DATE: Date colony became self governing ****
		game_date < 1989.9.24									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:AFG
		c:AFG = {
			NOT = { is_subject_of = ROOT }
			OR = { 
				NOT = { is_a_communist_government = yes }
				has_variable = SOV_AFG_Overthrow
			}
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = soviet_afghan_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = soviet_afghan_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Soviet Afghan War
		create_diplomatic_play = {
			name = soviet_afghan_war
			type = dp_make_dominion
			target_country = c:AFG
			
			#war = yes
			
			add_war_goal = {
				holder = c:AFG
				type = humiliation
				target_country = c:SOV
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 12
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Cambodian–Vietnamese War ###

historical_interstate_wars.24 = {
    type = country_event

    title = vietnam_cambodian_war.t 							# Title of the event; ADD LOCALISATION
    desc = vietnam_cambodian_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = vietnam_cambodian_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:DAI ?= this c:NVM ?= this }					# Change TAG of the overlord ****
		game_date >= 1978.12.21									# START DATE: Date colony became self governing ****
		game_date < 1988.12.21									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:CAM
		c:CAM = { 												# Change TAG of the transferee ****
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			NOT = { is_subject_of = ROOT }
			
			is_adjacent_to_country = ROOT
			
			exists = ruler
			ruler = { is_historical = yes }
		}
		
		# Event has not been fired before
		NOT = { has_variable = vietnam_cambodian_war_hiw }		# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = vietnam_cambodian_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		create_diplomatic_play = {
			name = vietnam_cambodian_war
			type = dp_make_dominion
			target_country = c:CAM
			
			war = yes
			
			add_war_goal = {
				holder = c:CAM
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 12
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Russia-Ukraine War ###

historical_interstate_wars.25 = {
    type = country_event

    title = russia_ukraine_war.t 								# Title of the event; ADD LOCALISATION
    desc = russia_ukraine_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = russia_ukraine_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:RUS
		this = c:RUS											# Change TAG of the overlord ****
		game_date >= 2022.2.24									# START DATE: Date colony became self governing ****
		game_date < 2032.2.24									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		OR = { 
			is_a_dictatorship = yes								# Correct gov types
			ruler ?= { has_variable = Vladimir_Vladimirovich_Putin }
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Left over from 2014
		owns_entire_state_region = STATE_CRIMEA
		
		#Recipent conditions
		exists = c:UKR
		c:UKR = { 												# Change TAG of the transferee ****
			NOT = { is_subject_of = ROOT }
			NOT = { is_a_dictatorship = yes }
			is_sufficiently_independent = yes
			is_at_war = no
			owns_entire_state_region = STATE_LUHANSK
		}
		
		# Event has not fired before
		NOT = { has_variable = russia_ukraine_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = russia_ukraine_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = russia_ukraine_war
			type = dp_make_puppet
			target_country = c:UKR
			
			war = yes
			
			#Russia's Goals
			add_war_goal = {
				holder = c:RUS
				type = return_state
				target_state = s:STATE_LUHANSK.region_state:UKR
			}
			add_war_goal = {
				holder = c:RUS
				type = regime_change
				target_country = c:UKR
			}
			
			#Ukraine's Goals
			add_war_goal = {
				holder = c:UKR
				type = humiliation
				target_country = c:RUS
			}
			add_war_goal = {
				holder = c:UKR
				type = conquer_state
				target_state = s:STATE_CRIMEA.region_state:RUS
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 12
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Second Iraq War ###

historical_interstate_wars.26 = {
    type = country_event

    title = second_iraq_war.t 									# Title of the event; ADD LOCALISATION
    desc = second_iraq_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = second_iraq_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:USA
		this = c:USA											# Change TAG of the overlord ****
		game_date >= 2003.3.20									# START DATE: Date colony became self governing ****
		game_date < 2013.3.20									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		country_rank = rank_value:super_power
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#9/11 caused this
		has_global_variable = global_war_on_terror
		
		#Recipent conditions
		exists = c:IRQ
		c:IRQ = { 												# Change TAG of the transferee ****
			is_a_nationalist_government = yes
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
			is_at_war = no
		}
		
		# Event has not fired before
		NOT = { has_variable = second_iraq_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = second_iraq_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = second_iraq_war
			type = dp_make_dominion
			target_country = c:IRQ
			
			#war = yes
			
			add_war_goal = {
				holder = c:USA
				type = regime_change
				target_country = c:IRQ
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Chadian-Libyan War ###

historical_interstate_wars.27 = {
    type = country_event
	placement = s:STATE_CHAD.region_state:LBY

    title = chad_libya_war.t 									# Title of the event; ADD LOCALISATION
    desc = chad_libya_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = chad_libya_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:CHA ?= this
		game_date >= 1986.12.16									# START DATE: Date colony became self governing ****
		game_date < 1996.12.16									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		NOT = { is_a_communist_government = yes }				# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:LBY
		c:LBY = { 												# Change TAG of the transferee ****
			NOT = { is_subject_of = ROOT }
			is_a_nationalist_government = yes
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_CHAD
		}
		
		# Event has not fired before
		NOT = { has_variable = chad_libya_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = chad_libya_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = chad_libya_war
			type = dp_conquer_state_historical
			target_state = s:STATE_CHAD.region_state:LBY
			
			#war = yes
			
			#Libya's Goals
			add_war_goal = {
				holder = c:LBY
				type = make_protectorate
				target_country = c:CHA
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			months = 12
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Afghanistan War ###

historical_interstate_wars.28 = {
    type = country_event

    title = us_afghan_war.t 									# Title of the event; ADD LOCALISATION
    desc = us_afghan_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = us_afghan_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this
		game_date >= 2001.10.7									# START DATE: Date colony became self governing ****
		game_date < 2011.10.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = us_afghan_war_hiw }				# CHANGE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		country_rank = rank_value:super_power
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#9/11 caused this
		has_global_variable = global_war_on_terror
		
		#Recipent conditions
		exists = c:AFG
		c:AFG = { 												# Change TAG of the transferee ****
			is_a_theocratic_government = yes
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
		#USA can reach AFG
		has_diplomatic_relevance = c:AFG
		OR = {
			has_strategic_adjacency = c:AFG
			AND = {
				navy_size >= 10
				has_port = yes
				c:AFG = { has_port = yes }
			}
			AND = {
				exists = c:PAK
				c:PAK = {
					NOR = { 
						is_a_theocratic_government = yes
						is_a_communist_government = yes 
					}
					OR = {
						has_diplomatic_pact = { type = alliance who = ROOT }
						has_diplomatic_pact = { type = protectorate who = ROOT }
						is_subject_of = ROOT
						is_a_democracy = yes
						is_some_kind_of_democracy = yes
					}
					is_not_neutral = yes
					has_strategic_adjacency = c:AFG
				}
			}
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = us_afghan_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		if = {
			limit = {
				exists = c:PAK
				c:PAK = {
					is_player = no
					NOT = { is_a_theocratic_government = yes }
					NOT = { is_a_communist_government = yes }
					OR = { 
						has_diplomatic_pact = { type = alliance who = ROOT }
						has_diplomatic_pact = { type = protectorate who = ROOT }
						is_subject_of = ROOT
						is_a_democracy = yes
						is_some_kind_of_democracy = yes
					}
					is_not_neutral = yes
					has_strategic_adjacency = c:AFG
				}
			}
			#War
			create_diplomatic_play = {
				name = us_afghan_war
				type = dp_make_dominion
				target_country = c:AFG
				
				war = yes
				
				add_war_goal = {
					holder = c:USA
					type = regime_change
					target_country = c:AFG
				}
				
				add_initiator_backers = {
					c:PAK
				}
			}
		}
		else = {
			#War
			create_diplomatic_play = {
				name = us_afghan_war
				type = dp_make_dominion
				target_country = c:AFG
				
				#war = yes
				
				add_war_goal = {
					holder = c:USA
					type = regime_change
					target_country = c:AFG
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Invasion of Panama ###

historical_interstate_wars.29 = {
    type = country_event

    title = us_panama_war.t 									# Title of the event; ADD LOCALISATION
    desc = us_panama_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = us_panama_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this
		game_date >= 1989.12.20									# START DATE: Date colony became self governing ****
		game_date < 1999.12.20									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = us_panama_war_hiw }				# CHANGE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		country_rank = rank_value:super_power
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:PNM
		c:PNM = { 												# Change TAG of the transferee ****
			OR = { 
				is_a_republican_regime = yes
				is_a_nationalist_government = yes
			}
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = us_panama_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = us_panama_war
			type = dp_make_dominion
			target_country = c:PNM
			
			#war = yes
			
			add_war_goal = {
				holder = c:USA
				type = regime_change
				target_country = c:PNM
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### First Congo War ###

historical_interstate_wars.30 = {
    type = country_event

    title = first_congo_war.t 									# Title of the event; ADD LOCALISATION
    desc = first_congo_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = first_congo_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { 
			c:CNG ?= this
			c:RWA ?= this 
			c:UGA ?= this
			c:BRD ?= this
			c:ANG ?= this
			c:SSD ?= this
		}
		game_date >= 1996.10.24									# START DATE: Date colony became self governing ****
		game_date < 2006.10.24									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = first_congo_war_hiw }			# CHANGE ****
		
		OR = { 
			is_a_democracy = yes
			is_a_republican_regime = yes
			AND = {
				c:CNG ?= this
				is_a_nationalist_government = yes
			}
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:CNG
		c:CNG = { 												# Change TAG of the transferee ****
			is_a_nationalist_government = yes
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = first_congo_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		if = {
			limit = { NOT = { c:CNG ?= this } }
			create_diplomatic_play = {
				name = first_congo_war
				type = dp_regime_change
				target_country = c:CNG
				
				#war = yes
				
				add_war_goal = {
					holder = c:CNG
					type = regime_change
					target_country = ROOT
				}
			}
		}
		
		#Overthrow any successionists as well
		if = {
			limit = {
				exists = c:KAT
				c:KAT = {
					is_sufficiently_independent = yes
					NOT = { is_subject_of = ROOT }
				}
			}
			if = {
				limit = { c:CNG ?= this }
				create_diplomatic_play = {
					name = congolese_war
					type = dp_annex_war_historical
					target_country = c:KAT
					
					war = yes
					
					add_war_goal = {
						holder = c:KAT
						type = humiliation
						target_country = c:CNG
					}
					
				}
			}
			if = {
				limit = { NOT = { c:CNG ?= this } }
				create_diplomatic_play = {
					name = congolese_war
					type = dp_regime_change
					target_country = c:KAT
					
					war = yes
				}
			}
		}
		if = {
			limit = {
				exists = c:SKA
				c:SKA = {
					is_sufficiently_independent = yes
					NOT = { is_subject_of = ROOT }
				}
			}
			if = {
				limit = { c:CNG ?= this }
				create_diplomatic_play = {
					name = congolese_war
					type = dp_annex_war_historical
					target_country = c:SKA
					
					war = yes
					
					add_war_goal = {
						holder = c:SKA
						type = humiliation
						target_country = c:CNG
					}
					
				}
			}
			if = {
				limit = { NOT = { c:CNG ?= this } }
				create_diplomatic_play = {
					name = congolese_war
					type = dp_regime_change
					target_country = c:SKA
					
					war = yes
				}
			}
		}
		if = {
			limit = {
				exists = c:FCG
				c:FCG = {
					is_sufficiently_independent = yes
					NOT = { is_subject_of = ROOT }
				}
			}
			if = {
				limit = { c:CNG ?= this }
				create_diplomatic_play = {
					name = congolese_war
					type = dp_annex_war_historical
					target_country = c:FCG
					
					war = yes
					
					add_war_goal = {
						holder = c:FCG
						type = humiliation
						target_country = c:CNG
					}
					
				}
			}
			if = {
				limit = { NOT = { c:CNG ?= this } }
				create_diplomatic_play = {
					name = congolese_war
					type = dp_regime_change
					target_country = c:FCG
					
					war = yes
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = large_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Second Congo War ###

historical_interstate_wars.31 = {
    type = country_event

    title = second_congo_war.t 									# Title of the event; ADD LOCALISATION
    desc = second_congo_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = second_congo_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { 
			c:RWA ?= this 
			c:UGA ?= this
		}
		game_date >= 1998.8.2									# START DATE: Date colony became self governing ****
		game_date < 2008.8.2									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = second_congo_war_hiw }			# CHANGE ****
		
		OR = { 
			is_a_democracy = yes
			is_a_republican_regime = yes
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:CNG
		c:CNG = { 												# Change TAG of the transferee ****
			OR = { 
				is_a_democracy = yes
				is_a_republican_regime = yes
			}
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
		#Rwanda starts war, Uganda joins war
		OR = {
			c:RWA ?= this
			AND = { 
				c:UGA ?= this 
				exists = c:RWA
				exists = c:CNG
				c:RWA ?= {
					has_war_with = c:CNG
				}
			}
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = second_congo_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		if = {
			limit = { c:RWA ?= this }
			create_diplomatic_play = {
				name = second_congo_war
				type = dp_make_dominion
				target_country = c:CNG
				
				war = yes
			}
		}
		if = {
			limit = { c:UGA ?= this }
			random_diplomatic_play = {
				limit = {
					is_war = yes
					
					is_diplomatic_play_participant = c:RWA
					is_diplomatic_play_participant = c:CNG
					NOT = { is_diplomatic_play_participant = ROOT }
					
					initiator_is = c:RWA
					target_is = c:CNG
					
				}
				add_initiator_backers = {
					ROOT
				}
				add_war_goal = {
					holder = ROOT
					type = humiliation
					target_country = c:CNG
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = large_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Russo-Georgian War ###

historical_interstate_wars.32 = {
    type = country_event

    title = russia_georgia_war.t 								# Title of the event; ADD LOCALISATION
    desc = russia_georgia_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = russia_georgia_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:RUS ?= this
		game_date >= 2008.8.7									# START DATE: Date colony became self governing ****
		game_date < 2018.8.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = russia_georgia_war_hiw }			# CHANGE ****
		
		OR = { 
			is_a_republican_regime = yes
			ruler ?= { has_variable = Vladimir_Vladimirovich_Putin }
			ruler ?= { has_variable = Dmitry_Medvedev }
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:GEO
		c:GEO = {
			is_a_democracy = yes
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		exists = c:SOS
		c:SOS = {
			OR = { 
				has_diplomatic_pact = { 
					who = ROOT 
					type = protectorate 
					is_initiator = no 
				}
				has_diplomatic_pact = { 
					who = ROOT 
					type = satellite
					is_initiator = no 
				}
				is_subject_of = ROOT
			}
		}
		exists = c:ABK
		c:ABK = {
			OR = { 
				has_diplomatic_pact = { 
					who = ROOT 
					type = protectorate 
					is_initiator = no 
				}
				has_diplomatic_pact = { 
					who = ROOT 
					type = satellite
					is_initiator = no 
				}
				is_subject_of = ROOT
			}
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = russia_georgia_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Convert states
		if = {
			limit = { exists = c:SOS }
			if = {
				limit = { 
					has_diplomatic_pact = { 
						who = c:SOS
						type = protectorate 
						is_initiator = yes
					}
				}
				hidden_effect = { make_independent = yes }
				create_diplomatic_pact = {
					country = c:SOS
					type = satellite
				}
			}
			if = {
				limit = { 
					has_diplomatic_pact = { 
						who = c:SOS
						type = satellite
						is_initiator = yes
					}
				}
				hidden_effect = { make_independent = yes }
				create_diplomatic_pact = {
					country = c:SOS
					type = puppet
				}
			}
		}
		if = {
			limit = { exists = c:ABK }
			if = {
				limit = { 
					has_diplomatic_pact = { 
						who = c:ABK
						type = protectorate 
						is_initiator = yes
					}
				}
				hidden_effect = { make_independent = yes }
				create_diplomatic_pact = {
					country = c:ABK
					type = satellite
				}
			}
			if = {
				limit = { 
					has_diplomatic_pact = { 
						who = c:ABK
						type = satellite
						is_initiator = yes
					}
				}
				hidden_effect = { make_independent = yes }
				create_diplomatic_pact = {
					country = c:ABK
					type = puppet
				}
			}
		}
		
		#War
		create_diplomatic_play = {
			name = russia_georgia_war
			type = dp_humiliation
			target_country = c:GEO
			
			war = yes
			
			add_war_goal = {
				holder = c:GEO
				type = annex_country
				target_country = c:SOS
			}
			add_war_goal = {
				holder = c:GEO
				type = annex_country
				target_country = c:ABK
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Annexation of Gaza Strip ###

historical_interstate_wars.33 = {
    type = country_event

    title = israel_gaza_war.t 								# Title of the event; ADD LOCALISATION
    desc = israel_gaza_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = israel_gaza_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:ISR ?= this
		game_date >= 2023.10.7									# START DATE: Date colony became self governing ****
		game_date < 2033.10.7									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:GZA
		c:GZA = { 												# Change TAG of the transferee ****
			NOT = { is_a_democracy = yes }
			is_sufficiently_independent = yes
			is_at_war = no
		}
		
		# Event has not been fired before
		NOT = { has_variable = israel_gaza_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = israel_gaza_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = israel_gaza_war
			type = dp_annex_war_historical
			target_country = c:GZA
			
			war = yes
			
			add_war_goal = {
				holder = c:GZA
				type = humiliation
				target_country = c:ISR
			}
		}
		
		#Muslim world is outraged!
		every_country = {
			limit = {  
				OR = {
					country_has_state_religion = rel:sunni
					country_has_state_religion = rel:shiite
				}
			}
			set_relations = { 
				country = ROOT
				value = -100
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = very_large_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### The Gagauzia Conflict ###

historical_interstate_wars.34 = {
    type = country_event

    title = moldova_gagauzia_war.t 								# Title of the event; ADD LOCALISATION
    desc = moldova_gagauzia_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = moldova_gagauzia_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:MOL ?= this
		exists = c:GAU
		
		# Event has not been fired before
		NOT = { has_variable = moldova_gagauzia_war_hiw }		# CHANGE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:GAU
		c:GAU = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = moldova_gagauzia_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = moldova_gagauzia_war
			type = dp_annex_war_historical
			target_country = c:GAU
			
			#war = yes
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = large_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Uganda–Tanzania War ###

historical_interstate_wars.35 = {
    type = country_event

    title = uganda_tanzania_war.t 								# Title of the event; ADD LOCALISATION
    desc = uganda_tanzania_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = uganda_tanzania_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:UGA ?= this
		game_date >= 1978.10.9									# START DATE: Date colony became self governing ****
		game_date < 1988.10.9									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_republican_regime = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:TAN
		c:TAN = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_TANGANYIKA
		}
		
		# Event has not been fired before
		NOT = { has_variable = uganda_tanzania_war_hiw }		# CHANGE ****
		
    }
	
	immediate = {
	
		c:TAN = {
			random_scope_state = {
				limit = { state_region = s:STATE_TANGANYIKA }
				save_scope_as = tanzania_target_state
			}
		}
	
		# Fire only once
		set_variable = uganda_tanzania_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = uganda_tanzania_war
			type = dp_conquer_state_historical
			target_state = scope:tanzania_target_state
			
			#war = yes

			add_war_goal = {
				holder = c:TAN
				type = make_tributary
				target_country = c:UGA
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Annexation of Nagorno-Karabakh ###

historical_interstate_wars.36 = {
    type = country_event

    title = azerbaijan_artsakh_war.t 							# Title of the event; ADD LOCALISATION
    desc = azerbaijan_artsakh_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = azerbaijan_artsakh_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:AZB ?= this
		game_date >= 2023.9.19									# START DATE: Date colony became self governing ****
		game_date < 2033.9.19									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		OR = { 
			is_a_democracy = yes
			is_a_republican_regime = yes 
		}
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ATH
		c:ATH = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
		}
		
		# Event has not been fired before
		NOT = { has_variable = azerbaijan_artsakh_war_hiw }		# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = azerbaijan_artsakh_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = azerbaijan_artsakh_war
			type = dp_annex_war_historical
			target_country = c:ATH
			
			war = yes
			
			add_war_goal = {
				holder = c:ATH
				type = humiliation
				target_country = c:AZB
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = very_large_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Intervention in Libya ###

historical_interstate_wars.37 = {
    type = country_event

    title = us_libya_war.t 										# Title of the event; ADD LOCALISATION
    desc = us_libya_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = us_libya_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this
		game_date >= 2011.3.19									# START DATE: Date colony became self governing ****
		game_date < 2021.3.19									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = us_libya_war_hiw }				# CHANGE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		country_rank = rank_value:super_power
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:LBY
		c:LBY = { 												# Change TAG of the transferee ****
			is_a_nationalist_government = yes
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = us_libya_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = us_libya_war
			type = dp_regime_change
			target_country = c:LBY
			
			#war = yes
			
			add_war_goal = {
				holder = c:LBY
				type = humiliation
				target_country = c:USA
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Invasion of Grenada ###

historical_interstate_wars.38 = {
    type = country_event

    title = us_grenada_war.t 									# Title of the event; ADD LOCALISATION
    desc = us_grenada_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = us_grenada_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this
		game_date >= 1983.10.25									# START DATE: Date colony became self governing ****
		game_date < 1993.10.25									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = us_grenada_war_hiw }				# CHANGE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		country_rank = rank_value:super_power
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:GND
		c:GND = { 												# Change TAG of the transferee ****
			OR = { 
				is_a_communist_government = yes
				radical_left_wing_ruling_coalition = yes
			}
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = us_grenada_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = us_grenada_war
			type = dp_make_dominion
			target_country = c:GND
			
			war = yes
			
			add_war_goal = {
				holder = c:USA
				type = regime_change
				target_country = c:GND
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Invasion of Dominican Republic ###

historical_interstate_wars.39 = {
    type = country_event

    title = us_dominican_republic_war.t 						# Title of the event; ADD LOCALISATION
    desc = us_dominican_republic_war.d 							# Description of the event; ADD LOCALISATION
    #flavor = us_dominican_republic_war.f 						# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this
		game_date >= 1965.4.24									# START DATE: Date colony became self governing ****
		game_date < 1975.4.24									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = us_dominican_republic_war_hiw }	# CHANGE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		country_rank = rank_value:super_power
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:DOM
		c:DOM = { 												# Change TAG of the transferee ****
			OR = { 
				is_a_communist_government = yes
				AND = { 
					is_a_republican_democracy = yes
					left_wing_ruling_coalition = yes
				}
			}
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = us_dominican_republic_war_hiw			# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = us_dominican_republic_war
			type = dp_make_dominion
			target_country = c:DOM
			
			war = yes
			
			add_war_goal = {
				holder = c:USA
				type = regime_change
				target_country = c:DOM
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Ogaden War ###

historical_interstate_wars.40 = {
    type = country_event
	placement = scope:somalia_target_state

    title = ogaden_war.t 										# Title of the event; ADD LOCALISATION
    desc = ogaden_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = ogaden_war.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:SOM ?= this
		game_date >= 1977.7.13									# START DATE: Date colony became self governing ****
		game_date < 1987.7.13									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ETH
		c:ETH = { 												# Change TAG of the transferee ****
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_OROMIA
		}
		
		# Event has not been fired before
		NOT = { has_variable = ogaden_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		c:ETH = {
			random_scope_state = {
				limit = { state_region = s:STATE_OROMIA }
				save_scope_as = somalia_target_state
			}
		}
	
		# Fire only once
		set_variable = ogaden_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = ogaden_war
			type = dp_conquer_state_historical
			target_state = scope:somalia_target_state
			
			#war = yes

			add_war_goal = {
				holder = c:ETH
				type = humiliation
				target_country = c:SOM
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Badme War ###

historical_interstate_wars.41 = {
    type = country_event

    title = badme_war.t 										# Title of the event; ADD LOCALISATION
    desc = badme_war.d 											# Description of the event; ADD LOCALISATION
    #flavor = badme_war.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:ETH ?= this
		game_date >= 1998.5.6									# START DATE: Date colony became self governing ****
		game_date < 2008.5.6									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ERI
		c:ERI = { 												# Change TAG of the transferee ****
			is_a_democracy = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			is_adjacent_to_country = c:ETH
		}
		
		# Event has not been fired before
		NOT = { has_variable = badme_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = badme_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = badme_war
			type = dp_humiliation
			target_country = c:ERI
			
			#war = yes

			add_war_goal = {
				holder = c:ERI
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Sino-Vietnamese War ###

historical_interstate_wars.42 = {
    type = country_event

    title = sino_vietnamese_war.t 								# Title of the event; ADD LOCALISATION
    desc = sino_vietnamese_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = sino_vietnamese_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:PRC ?= this c:CHI ?= this }
		game_date >= 1979.2.17									# START DATE: Date colony became self governing ****
		game_date < 1989.2.17									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Cold War fight
		has_global_variable = sino_soviet_split_global_var
		exists = c:SOV
		c:SOV = {
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			country_rank = rank_value:super_power
		}
		
		#Recipent conditions
		exists = c:DAI
		c:DAI = { 												# Change TAG of the transferee ****
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			is_direct_subject_of = c:SOV
		}
		is_adjacent_to_country = c:DAI
		
		#Fight over Cambodia
		exists = c:CAM
		c:CAM = {
			is_a_communist_government = yes
			is_direct_subject_of = c:DAI
			is_at_war = no
		}
		
		# Event has not been fired before
		NOT = { has_variable = sino_vietnamese_war_hiw }		# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = sino_vietnamese_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Soviets stayed out of the war
		if = {
			limit = { c:SOV = { is_player = no } }
			c:DAI = { make_independent = yes }
			c:SOV = {
				create_diplomatic_pact = {
					country = c:DAI
					type = customs_union
				}
			}
		}
		
		#War
		create_diplomatic_play = {
			name = sino_vietnamese_war
			type = dp_humiliation
			target_country = c:DAI
			
			war = yes

			add_war_goal = {
				holder = c:DAI
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Intervention in North Yemen ###

historical_interstate_wars.43 = {
    type = country_event

    title = saudi_north_yemen_war.t 							# Title of the event; ADD LOCALISATION
    desc = saudi_north_yemen_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = saudi_north_yemen_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:NEJ ?= this
		game_date >= 1962.9.26									# START DATE: Date colony became self governing ****
		game_date < 1972.9.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = saudi_north_yemen_war_hiw }		# CHANGE ****
		
		is_a_regime_monarchy = yes								# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:NYE
		c:NYE = { 												# Change TAG of the transferee ****
			OR = { 
				is_a_nationalist_government = yes
				AND = { 
					is_a_republican_regime = yes
					left_wing_ruling_coalition = yes
				}
			}
			is_sufficiently_independent = yes
			NOT = { is_subject_of = ROOT }
		}
		is_adjacent_to_country = c:NYE
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = saudi_north_yemen_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		if = {
			limit = {
				exists = c:EGY
				c:EGY = {
					is_player = no
					
					is_a_nationalist_government = yes
					is_sufficiently_independent = yes
					is_at_war = no
					
					is_not_neutral = yes
				}
			}
			#War
			create_diplomatic_play = {
				name = saudi_north_yemen_war
				type = dp_make_dominion
				target_country = c:NYE
				
				war = yes
				
				add_war_goal = {
					holder = ROOT
					type = regime_change
					target_country = c:NYE
				}
				
				add_target_backers = {
					c:EGY
				}
			}
		}
		else = {
			#War
			create_diplomatic_play = {
				name = saudi_north_yemen_war
				type = dp_make_dominion
				target_country = c:NYE
				
				#war = yes
				
				add_war_goal = {
					holder = ROOT
					type = regime_change
					target_country = c:NYE
				}
				
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Chinese Intervention in Korean War ###

historical_interstate_wars.44 = {
    type = country_event
	placement = c:NKO

    title = PRC_korean_war.t 									# Title of the event; ADD LOCALISATION
    desc = PRC_korean_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = PRC_korean_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:PRC ?= this c:CHI ?= this }
		game_date >= 1950.10.19									# START DATE: Date colony became self governing ****
		game_date < 1960.10.19									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = PRC_korean_war_hiw }				# CHANGE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:NKO
		c:NKO = { 												# Change TAG of the transferee ****
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			has_war_with = c:SKO
			NOT = { has_war_with = ROOT }
		}
		exists = c:SKO
		c:SKO = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
			has_war_with = c:NKO
			NOT = { has_war_with = ROOT }
			NOT = { is_subject_of = ROOT }
		}
		is_adjacent_to_country = c:NKO
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = PRC_korean_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Join Korean War
		random_diplomatic_play = {
			limit = {
				initiator_is = c:NKO
				OR = { 
					target_is = c:SKO
					any_scope_target_ally = { this = c:SKO }
				}
			}
			add_initiator_backers = {
				ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_trade_unions
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_rural_folk
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Saudi Intervention in Yemen Civil War ###

historical_interstate_wars.45 = {
    type = country_event

    title = NEJ_yemen_civil_war.t 								# Title of the event; ADD LOCALISATION
    desc = NEJ_yemen_civil_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = NEJ_yemen_civil_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:NEJ ?= this
		game_date >= 2015.3.26									# START DATE: Date colony became self governing ****
		game_date < 2025.3.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = NEJ_yemen_civil_war_hiw }		# CHANGE ****
		
		is_a_regime_monarchy = yes								# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:NYE
		c:NYE = { 												# Change TAG of the transferee ****
			is_a_theocratic_government = yes
			is_sufficiently_independent = yes
			is_at_war = yes
		}
		exists = c:YEM
		c:YEM = { 												# Change TAG of the transferee ****
			OR = {
				is_a_republican_democracy = yes
				is_a_republican_regime = yes
			}
			is_sufficiently_independent = yes
			has_war_with = c:NYE
			NOT = { has_war_with = ROOT }
			NOT = { is_subject_of = ROOT }
		}
		OR = { 
			is_adjacent_to_country = c:NYE
			is_adjacent_to_country = c:YEM
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = NEJ_yemen_civil_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Join Yemeni Civi War
		random_diplomatic_play = {
			limit = {
				initiator_is = c:NYE
				OR = { 
					target_is = c:YEM
					any_scope_target_ally = { this = c:YEM }
				}
			}
			add_target_backers = {
				ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_landowners
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_rural_folk
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Cenepa War ###

historical_interstate_wars.46 = {
    type = country_event

    title = cenepa_war.t 										# Title of the event; ADD LOCALISATION
    desc = cenepa_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = cenepa_war.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:PEU ?= this
		game_date >= 1995.1.26									# START DATE: Date colony became self governing ****
		game_date < 2005.1.26									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_republican_regime = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ECU
		c:ECU = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
			
			is_adjacent_to_country = c:PEU
		}
		
		has_state_in_state_region = STATE_PASTAZA
		
		# Event has not been fired before
		NOT = { has_variable = cenepa_war_hiw }					# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = cenepa_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = cenepa_war
			type = dp_humiliation
			target_country = c:ECU
			
			war = yes

			add_war_goal = {
				holder = c:ECU
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Yemenite War of 1979 ###

historical_interstate_wars.47 = {
    type = country_event

    title = yemenite_war.t 										# Title of the event; ADD LOCALISATION
    desc = yemenite_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = yemenite_war.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:SYE ?= this
		game_date >= 1979.2.24									# START DATE: Date colony became self governing ****
		game_date < 1989.2.24									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:NYE
		c:NYE = { 												# Change TAG of the transferee ****
			is_a_republican_regime = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			is_adjacent_to_country = c:SYE
		}
		
		# Event has not been fired before
		NOT = { has_variable = yemenite_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = yemenite_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = yemenite_war
			type = dp_humiliation
			target_country = c:NYE
			
			war = yes

			add_war_goal = {
				holder = c:NYE
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Sino-Indian War ###

historical_interstate_wars.48 = {
    type = country_event
	placement = s:STATE_TIANSHAN.region_state:HND

    title = sino_indian_war.t 									# Title of the event; ADD LOCALISATION
    desc = sino_indian_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = sino_indian_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		OR = { c:PRC ?= this c:CHI ?= this }
		game_date >= 1962.10.20									# START DATE: Date colony became self governing ****
		game_date < 1972.10.20									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent
		exists = c:HND
		c:HND = {
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_TIANSHAN
			is_adjacent_to_country = ROOT
		}
		
		# Event has not been fired before
		NOT = { has_variable = sino_indian_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = sino_indian_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		if = {
			limit = { 
				is_player = no
				c:HND = { is_player = no }
				has_global_variable = historical_railroading_active
			}
			s:STATE_TIANSHAN.region_state:HND = { set_state_owner = ROOT }
		}
		else = {
			create_diplomatic_play = {
				name = sino_indian_war
				type = dp_conquer_state_historical
				target_state = s:STATE_TIANSHAN.region_state:HND
			
				war = yes

				add_war_goal = {
					holder = c:HND
					type = humiliation
					target_country = ROOT
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### The Borneo Confrontation ###

historical_interstate_wars.49 = {
    type = country_event
	placement = scope:IDO_target_state

    title = IDO_MSY_war.t 								# Title of the event; ADD LOCALISATION
    desc = IDO_MSY_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = IDO_MSY_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:IDO ?= this
		game_date >= 1963.1.20									# START DATE: Date colony became self governing ****
		game_date < 1973.1.20									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_dictatorship = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Sukarno
		exists = ruler
		ruler = { has_variable = sukarno }
		
		#IDO owns part of Borneo
		owns_entire_state_region = STATE_WEST_BORNEO
		owns_entire_state_region = STATE_EAST_BORNEO
		
		#Recipent conditions
		exists = c:MSY
		c:MSY = { 												# Change TAG of the transferee ****
			
			is_sufficiently_independent = yes
			is_at_war = no
			
			has_state_in_state_region = STATE_NORTH_BORNEO
		}
		
		# Event has not been fired before
		NOT = { has_variable = IDO_MSY_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		c:MSY = {
			random_scope_state = {
				limit = { state_region = s:STATE_NORTH_BORNEO }
				save_scope_as = IDO_target_state
			}
		}
	
		# Fire only once
		set_variable = IDO_MSY_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = IDO_MSY_war
			type = dp_conquer_state_historical
			target_state = scope:IDO_target_state
			
			#war = yes

			add_war_goal = {
				holder = c:MSY
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 }
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 90
		}
		
    }

}

### Operation Savannah ###

historical_interstate_wars.50 = {
    type = country_event

    title = SAF_ANG_war.t 											# Title of the event; ADD LOCALISATION
    desc = SAF_ANG_war.d 											# Description of the event; ADD LOCALISATION
    #flavor = SAF_ANG_war.f 										# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:SAF ?= this
		game_date >= 1975.10.14									# START DATE: Date colony became self governing ****
		game_date < 1985.10.14									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_republican_regime = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ANG
		c:ANG = { 												# Change TAG of the transferee ****
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			is_at_war = no
			
			is_adjacent_to_country = ROOT
		}
		
		# Event has not been fired before
		NOT = { has_variable = SAF_ANG_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = SAF_ANG_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = SAF_ANG_war_hiw
			type = dp_make_dominion
			target_country = c:ANG
			
			war = yes

			add_war_goal = {
				holder = c:ANG
				type = humiliation
				target_country = ROOT
			}
			add_war_goal = {
				holder = ROOT
				type = regime_change
				target_country = c:ANG
			}
		}
		
		#AI Cuba will help Angola
		if = {
			limit = { 
				exists = c:CUB
				c:CUB = {
					is_player = no
					is_a_communist_government = yes
					is_sufficiently_independent = yes
					is_not_neutral = yes
				}
			}
			random_diplomatic_play = {
				limit = {
					initiator_is = ROOT
					target_is = c:ANG
				}
				add_target_backers = {
					c:CUB
				}
			}
		}
		if = {
			limit = { 
				exists = c:SOV
				c:SOV = {
					is_player = no
					is_a_communist_government = yes
					is_sufficiently_independent = yes
					is_not_neutral = yes
				}
			}
			random_diplomatic_play = {
				limit = {
					initiator_is = ROOT
					target_is = c:ANG
				}
				add_target_backers = {
					c:SOV
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Intervention in Korean War ###

historical_interstate_wars.51 = {
    type = country_event
	placement = c:SKO

    title = USA_korean_war.t 									# Title of the event; ADD LOCALISATION
    desc = USA_korean_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = USA_korean_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:USA ?= this
		game_date >= 1950.6.27									# START DATE: Date colony became self governing ****
		game_date < 1960.6.27									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		# Event has not fired before
		NOT = { has_variable = USA_korean_war_hiw }				# CHANGE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:NKO
		c:NKO = { 												# Change TAG of the transferee ****
			is_a_communist_government = yes
			is_sufficiently_independent = yes
			has_war_with = c:SKO
			NOT = { has_war_with = ROOT }
			NOT = { is_subject_of = ROOT }
		}
		exists = c:SKO
		c:SKO = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
			has_war_with = c:NKO
			NOT = { has_war_with = ROOT }
			OR = { 
				is_direct_subject_of = ROOT
				has_diplomatic_pact = {
					who = ROOT
					type = protectorate
				}
			}
		}
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = USA_korean_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Join Korean War
		random_diplomatic_play = {
			limit = {
				initiator_is = c:NKO
				OR = { 
					target_is = c:SKO
					any_scope_target_ally = { this = c:SKO }
				}
			}
			add_target_backers = {
				ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_industrialists
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_armed_forces
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_intelligentsia
		}
		add_radicals = {
			value = large_radicals
			interest_group = ig:ig_rural_folk
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Annexation of Hyderabad ###

historical_interstate_wars.52 = {
    type = country_event

    title = india_hyderabad_war.t 								# Title of the event; ADD LOCALISATION
    desc = india_hyderabad_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = india_hyderabad_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		has_global_variable = 1946_start_date
		
		#Overlord conditions
		c:HND ?= this
		game_date >= 1948.9.13									# START DATE: Date colony became self governing ****
		game_date < 1958.9.13									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:HYD
		c:HYD = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
			has_revolution = no
		}
		
		# Event has not been fired before
		NOT = { has_variable = india_hyderabad_war_hiw }		# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = india_hyderabad_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		create_diplomatic_play = {
			name = india_hyderabad_war
			type = dp_annex_war_historical
			target_country = c:HYD
			
			#war = yes
			
			add_war_goal = {
				holder = c:HYD
				type = humiliation
				target_country = c:HND
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### 1948 Arab Israeli War ###

historical_interstate_wars.53 = {
    type = country_event
	placement = c:ISR

    title = arab_israeli_war.t 									# Title of the event; ADD LOCALISATION
    desc = arab_israeli_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = arab_israeli_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		has_global_variable = 1946_start_date
		
		#Overlord conditions
		c:EGY ?= this
		game_date >= 1948.5.15									# START DATE: Date colony became self governing ****
		game_date < 1958.5.15									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:ISR
		c:ISR = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_at_war = no
		}
		NOT = { exists = c:PAL }
		
		#Gaza
		p:x60D060 ?= { owner = c:ISR }
		
		#West Bank
		p:xC9CBC0 ?= { owner = c:ISR }
		
		# Event has not been fired before
		NOT = { has_variable = arab_israeli_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = arab_israeli_war_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		s:STATE_PALESTINE = {
			set_owner_of_provinces = {
				country = c:EGY
				provinces = { x60D060 }
			}
		}
		s:STATE_PALESTINE.region_state:EGY = {
			set_state_type = incorporated
		}
		if = {
			limit = { 
				OR = { 
					is_player = yes
					c:ISR = { is_player = yes }
				}
			}
			create_diplomatic_play = {
				name = arab_israeli_war
				type = dp_annex_war_historical
				target_country = c:ISR
				
				war = yes

				add_war_goal = {
					holder = c:ISR
					type = conquer_state
					target_state = s:STATE_PALESTINE.region_state:EGY
				}
			}
		}
		
		#Option for JOR to join
		if = {
			limit = { 
				c:JOR = {
					is_sufficiently_independent = yes						# is_vassal = no		
					is_at_war = no											# war = no
			
					is_not_neutral = yes									# No legal or political restrictions on going to war
				}
			}
			c:JOR = { trigger_event = { id = historical_interstate_wars.54 } }
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

historical_interstate_wars.54 = {
    type = country_event
	placement = c:ISR

    title = arab_israeli_war.t 									# Title of the event; ADD LOCALISATION
    desc = arab_israeli_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = arab_israeli_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Triggered by event
		
    }
	
	immediate = {
		
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#War
		s:STATE_PALESTINE = {
			set_owner_of_provinces = {
				country = c:JOR
				provinces = { xC9CBC0 }
			}
		}
		s:STATE_PALESTINE.region_state:JOR = {
			set_state_type = incorporated
		}
		if = {
			limit = { 
				OR = { 
					is_player = yes
					c:ISR = { is_player = yes } 
				}
			}
			create_diplomatic_play = {
				name = arab_israeli_war
				type = dp_annex_war_historical
				target_country = c:ISR
				
				war = yes

				add_war_goal = {
					holder = c:ISR
					type = conquer_state
					target_state = s:STATE_PALESTINE.region_state:JOR
				}
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Major discontent
		add_radicals = {
			value = small_radicals
		}
		
		#National humiliation
		add_modifier = { 
			name = national_humiliation 
			years = 5
			is_decaying = yes 
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### First Indo-Pakistan War ###

historical_interstate_wars.55 = {
    type = country_event

    title = first_indo_pakistan_war.t 								# Title of the event; ADD LOCALISATION
    desc = first_indo_pakistan_war.d 								# Description of the event; ADD LOCALISATION
    #flavor = first_indo_pakistan_war.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		has_global_variable = 1946_start_date
		
		#Overlord conditions
		exists = c:PAK
		this = c:PAK											# Change TAG of the overlord ****
		game_date >= 1947.10.22									# START DATE: Date colony became self governing ****
		game_date < 1957.10.22									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:HND
		c:HND = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			has_state_in_state_region = STATE_KASHMIR
		}
		
		# Event has not been fired before
		NOT = { has_variable = first_indo_pakistan_war_hiw }	# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = first_indo_pakistan_war_hiw				# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = first_indo_pakistan_war
			type = dp_conquer_state_historical
			target_state = s:STATE_KASHMIR.region_state:HND
			
			#war = yes

			add_war_goal = {
				holder = c:HND
				type = humiliation
				target_country = c:PAK
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### The Football War ###

historical_interstate_wars.56 = {
    type = country_event

    title = football_war.t 										# Title of the event; ADD LOCALISATION
    desc = football_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = football_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:ELS
		this = c:ELS											# Change TAG of the overlord ****
		game_date >= 1969.7.14									# START DATE: Date colony became self governing ****
		game_date < 1979.7.14									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		#is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:HON
		c:HON = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_adjacent_to_country = ROOT
		}
		
		# Event has not been fired before
		NOT = { has_variable = football_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = football_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = football_war
			type = dp_humiliation
			target_country = c:HON
			
			war = yes

			add_war_goal = {
				holder = c:HON
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### The Agacher Strip War ###

historical_interstate_wars.57 = {
    type = country_event

    title = agacher_strip_war.t 								# Title of the event; ADD LOCALISATION
    desc = agacher_strip_war.d 									# Description of the event; ADD LOCALISATION
    #flavor = agacher_strip_war.f 								# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:MAL ?= this											# Change TAG of the overlord ****
		game_date >= 1985.12.25									# START DATE: Date colony became self governing ****
		game_date < 1995.12.25									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:BUF
		c:BUF = { 												# Change TAG of the transferee ****
			is_sufficiently_independent = yes
			is_adjacent_to_country = ROOT
		}
		
		# Event has not been fired before
		NOT = { has_variable = agacher_strip_war_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = agacher_strip_war_hiw					# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		# War
		create_diplomatic_play = {
			name = agacher_strip_war
			type = dp_humiliation
			target_country = c:BUF
			
			war = yes

			add_war_goal = {
				holder = c:BUF
				type = humiliation
				target_country = ROOT
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Operation Litani ###

historical_interstate_wars.58 = {
    type = country_event

    title = ISR_LEB_war.t 										# Title of the event; ADD LOCALISATION
    desc = ISR_LEB_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = ISR_LEB_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:ISR ?= this											# Change TAG of the overlord ****
		game_date >= 1978.3.14									# START DATE: Date colony became self governing ****
		game_date < 1988.3.14									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democracy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Cause of conflict
		NOT = { exists = c:PAL }
		
		#Recipent conditions
		exists = c:LEB
		c:LEB = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
			is_at_war = no
			is_adjacent_to_country = ROOT
		}
		p:xA050E0 ?= {
			owner = c:LEB
		}
		
		# Event has not been fired before
		NOT = { has_variable = ISR_LEB_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = ISR_LEB_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Israel-Lebanon War
		c:LEB = {
			s:STATE_LEBANON = {
				set_owner_of_provinces = {
					country = ROOT
					provinces = { xA050E0 }
				}
			}
		}
		create_diplomatic_play = {
			name = ISR_LEB_war
			type = dp_regime_change
			target_country = c:LEB
			
			war = yes
			
			add_war_goal = {
				holder = c:LEB
				type = return_state
				target_state = s:STATE_LEBANON.region_state:ISR
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
			culture = cu:palestinian
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### Syrian invasion of Lebanon ###

historical_interstate_wars.59 = {
    type = country_event

    title = SYR_LEB_war.t 										# Title of the event; ADD LOCALISATION
    desc = SYR_LEB_war.d 										# Description of the event; ADD LOCALISATION
    #flavor = SYR_LEB_war.f 									# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 		# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:SYR ?= this											# Change TAG of the overlord ****
		game_date >= 1976.5.31									# START DATE: Date colony became self governing ****
		game_date < 1986.5.31									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_nationalist_government = yes						# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Cause of conflict
		NOT = { exists = c:PAL }
		
		#Recipent conditions
		exists = c:LEB
		c:LEB = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
			is_at_war = no
			is_adjacent_to_country = ROOT
		}
		p:xECCAC7 ?= {
			owner = c:LEB
		}
		p:x6010E0 ?= {
			owner = c:LEB
		}
		
		# Event has not been fired before
		NOT = { has_variable = SYR_LEB_war_hiw }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = SYR_LEB_war_hiw							# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Syria-Lebanon War
		c:LEB = {
			s:STATE_LEBANON = {
				set_owner_of_provinces = {
					country = ROOT
					provinces = { xECCAC7 x6010E0 }
				}
			}
		}
		create_diplomatic_play = {
			name = SYR_LEB_war
			type = dp_humiliation
			target_country = c:LEB
			
			war = yes
			
			add_war_goal = {
				holder = c:LEB
				type = return_state
				target_state = s:STATE_LEBANON.region_state:SYR
			}
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
			culture = cu:syrian
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

### 1975 North Vietnamese spring offensive ###

historical_interstate_wars.60 = {
    type = country_event

    title = vietnam_war_1975.t 								# Title of the event; ADD LOCALISATION
    desc = vietnam_war_1975.d 								# Description of the event; ADD LOCALISATION
    #flavor = vietnam_war_1975.f 							# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/middleeast_battlefield_trenches.bk2" }

    icon = "gfx/interface/icons/event_icons/bicorne_hat.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		c:NVM ?= this
		game_date >= 1974.12.13									# START DATE: Date colony became self governing ****
		game_date < 1984.12.13									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_communist_government = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		is_not_neutral = yes									# No legal or political restrictions on going to war
		
		#Recipent conditions
		exists = c:SVM
		c:SVM = { 												# Change TAG of the transferee ****
			NOT = { is_a_communist_government = yes }
			is_sufficiently_independent = yes
		}
		
		# Event has not been fired before
		NOT = { has_variable = vietnam_war_1975_hiw }			# CHANGE ****
		
    }
	
	immediate = {
	
		# Fire only once
		set_variable = vietnam_war_1975_hiw						# Change variable ****
		
	}
    
    option = {
        name = historical_interstate_wars.option.1				# Declare war!
        highlighted_option = yes
		
		#Vietnam War
		create_diplomatic_play = {
			name = vietnam_war
			type = dp_annex_war_historical
			target_country = c:SVM
			
			war = yes
			
			add_war_goal = {
				holder = c:SVM
				type = annex_country
				target_country = c:NVM
			}
			
		}
		
		#Give the AI some help
		if = {
			limit = { is_player = no }
			add_modifier = { 
				name = pm_offense_defense_ai_boost
				years = 5
				is_decaying = yes 
			}
			add_treasury = 5000000
		}
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = historical_interstate_wars.option.2				# Peace option
		default_option = yes
		
		#Minor discontent
		add_radicals = {
			value = small_radicals
		}
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}