namespace = australian_decolonisation

# Papua New Guinea
australian_decolonisation.1 = {
    type = country_event
	placement = scope:colonial_state

    title = australian_papua_new_guinea.sgc.t 				# Title of the event; ADD LOCALISATION
    desc = australian_papua_new_guinea.sgc.d 				# Description of the event; ADD LOCALISATION
    #flavor = australian_papua_new_guinea.sgc.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/unspecific_signed_contract.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:AST this = c:AST											# Change TAG of the overlord ****
		game_date >= 1973.12.1									# START DATE: Date colony became self governing ****
		game_date < 1983.12.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democratic_monarchy = yes									# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Colony conditions
		NOT = { 												# Colony to be released must not already exist on the map
			exists = c:PNG										# Change TAG of the colony ****
		}
		any_scope_state = { 									# Overlord owns the states of the colony to be released
			state_region = { is_homeland = cu:east_papuan }		# Change homeland identity to match colony to be released ****
			#is_incorporated = no								# State is a colony
			#owner = ROOT										# Overlord must own the state to be released
		}
		
		# Event has not been fired before
		NOT = { has_variable = australian_papua_new_guinea_sgc }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Generate list of provinces to be released				# DO NOT TOUCH ROOT SECTION
		every_scope_state = {
			limit = {
				state_region = { is_homeland = cu:east_papuan }	# Change homeland identity to match colony to be released ****
				#is_incorporated = no							# State is a colony
				#contains_capital_of = c:PNG						# State is the capital of colony ****
			}
			save_scope_as = colonial_state
		}
		
		# Fire only once
		set_variable = australian_papua_new_guinea_sgc			# Change variable ****
		
	}
    
    option = {
        name = australian_decolonisation.option.1				#Grant them self-government
        default_option = yes highlighted_option = yes
		
		#Release country
		create_country = {
			tag = PNG										# Change TAG of country being released ****
			origin = ROOT									# TAG where the created country takes tech from
			state = scope:colonial_state
			
			on_created = {									# Set government laws & rulers here
				
				# SET laws for colony ****
				effect_starting_politics_constitutional_monarchy = yes
				effect_starting_politics_democratic = yes
				effect_starting_politics_constitutional_unitary_state = yes
				effect_starting_politics_war_policy_anti_military = yes
				effect_starting_politics_economic_policy_interventionism = yes
				effect_starting_politics_trade_policy_protectionism = yes
				effect_starting_politics_anti_nuclear_policy = yes
				
				# CREATE leader for colony ****
				create_character = {
					first_name = "guy_incognito_first_name"		# CHANGE
					last_name = "guy_incognito_last_name"		# CHANGE
					ruler = yes
					#birth_date = 1910.1.1						# CHANGE
					interest_group = ig_rural_folk					# CHANGE
					ideology = ideology_democratic				# CHANGE
					traits = {
						charismatic								# CHANGE
						persistent								# CHANGE
						meticulous								# CHANGE
					}
				}
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		if = {
			limit = { exists = c:PNG }
			every_scope_state = {
				limit = {
					state_region = { is_homeland = cu:east_papuan }	# Change homeland identity to match colony to be released ****
					#is_incorporated = no							# State is a colony
				}
				set_state_owner = c:PNG								# Change TAG to colony ****
			}
			if = {
				limit = { 
					p:x904090.state.owner = {
						THIS = c:PNG
					}
				}
				c:PNG = {
					s:STATE_EASTERN_NEW_GUINEA = {
						set_owner_of_provinces = {
							country = c:AST
							provinces = { x904090 }
						}
					}
				}
			}
		}
		
		# Overlord create self governing colony pact with colony
		if = {
			limit = { exists = c:PNG }
			create_diplomatic_pact = {
				country = c:PNG										# Change TAG ****
				type = mandate
			}
			create_decolonisation_pacts = yes
		}
		
		# Fire only once
		set_variable = australian_papua_new_guinea_sgc						# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = australian_decolonisation.option.2					# REFUSE
		
		# Natives are angry!
		every_scope_state = {
			limit = {
		 		state_region = { is_homeland = cu:east_papuan }	# Change homeland identity to match colony to be released ****
		 	}
			add_radicals_in_state = {
				culture = cu:east_papuan							# Change culture ****
				value = large_radicals
			}
			add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
		}
		
		# Add Infamy because doing this is against international law
		change_infamy = 10
		
		# Fire only once
		set_variable = australian_papua_new_guinea_sgc						# Change variable ****
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}

# Nauru
australian_decolonisation.2 = {
    type = country_event
	placement = scope:colonial_state
	
    title = australian_nauru.sgc.t 				# Title of the event; ADD LOCALISATION
    desc = australian_nauru.sgc.d 				# Description of the event; ADD LOCALISATION
    #flavor = australian_nauru.sgc.f 			# Flavor for event; ADD LOCALISATION, IF REQUIRED

    event_image = { video = "gfx/event_pictures/asia_sepoy_mutiny.bk2" }

    icon = "gfx/interface/icons/event_icons/waving_flag.dds" 	# Icon that shows on the map or the outliner
    on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear" 	# Sound effect if needed

    duration = 1 # Duration to fire if triggers are met
	
	trigger = {													# What triggers the event, if using other events or journal entries leave empty
		
		#Overlord conditions
		exists = c:AST
		this = c:AST											# Change TAG of the overlord ****
		game_date >= 1966.1.1									# START DATE: Date colony became self governing ****
		game_date < 1976.1.1									# END DATE: All historical events must not fire 10 years after the START DATE ****
		
		is_a_democratic_monarchy = yes							# Correct gov types
		is_sufficiently_independent = yes						# is_vassal = no		
		is_at_war = no											# war = no
		
		#Colony conditions
		NOT = { 												# Colony to be released must not already exist on the map
			exists = c:NAU										# Change TAG of the colony ****
		}
		any_scope_state = { 									# Overlord owns the states of the colony to be released
			state_region = { is_homeland = cu:nauruan }			# Change homeland identity to match colony to be released ****
			#is_incorporated = no								# State is a colony
			#owner = ROOT										# Overlord must own the state to be released
		}
		
		# Event has not been fired before
		NOT = { has_variable = australian_nauru_sgc }				# CHANGE ****
		
    }
	
	immediate = {
	
		# Generate list of provinces to be released				# DO NOT TOUCH ROOT SECTION
		every_scope_state = {
			limit = {
				state_region = { is_homeland = cu:nauruan }	# Change homeland identity to match colony to be released ****
				#is_incorporated = no							# State is a colony
				#contains_capital_of = c:NAU						# State is the capital of colony ****
			}
			save_scope_as = colonial_state
		}
		
		# Fire only once
		set_variable = australian_nauru_sgc						# Change variable ****
		
	}
    
    option = {
        name = australian_decolonisation.option.1				#Grant them self-government
        default_option = yes highlighted_option = yes
		
		#Release country
		create_country = {
			tag = NAU										# Change TAG of country being released ****
			origin = ROOT									# TAG where the created country takes tech from
			state = scope:colonial_state
			
			on_created = {									# Set government laws & rulers here
				
				# SET laws for colony ****
				effect_starting_politics_constitutional_monarchy = yes
				effect_starting_politics_democratic = yes
				effect_starting_politics_constitutional_unitary_state = yes
				effect_starting_politics_war_policy_anti_military = yes
				effect_starting_politics_economic_policy_interventionism = yes
				effect_starting_politics_trade_policy_protectionism = yes
				effect_starting_politics_anti_nuclear_policy = yes
				
				# CREATE leader for colony ****
				create_character = {
					first_name = "guy_incognito_first_name"		# CHANGE
					last_name = "guy_incognito_last_name"		# CHANGE
					ruler = yes
					#birth_date = 1910.1.1						# CHANGE
					interest_group = ig_rural_folk					# CHANGE
					ideology = ideology_democratic				# CHANGE
					traits = {
						charismatic								# CHANGE
						persistent								# CHANGE
						meticulous								# CHANGE
					}
				}
				
				# Set diplomatic recognition
				set_country_type = unrecognized
			}
		}
		
		# Overlord create self governing colony pact with colony
		if = {
			limit = { exists = c:NAU }
			create_diplomatic_pact = {
				country = c:NAU										# Change TAG ****
				type = mandate
			}
			create_decolonisation_pacts = yes
		}
		
		# Fire only once
		set_variable = australian_nauru_sgc						# Change variable ****
		
		ai_chance = { 
			base = 90 
		}
		
    }
	
	option = {
        name = australian_decolonisation.option.2					# REFUSE
		
		# Natives are angry!
		every_scope_state = {
			limit = {
		 		state_region = { is_homeland = cu:nauruan }	# Change homeland identity to match colony to be released ****
		 	}
			add_radicals_in_state = {
				culture = cu:nauruan							# Change culture ****
				value = large_radicals
			}
			add_modifier = { name = nationalist_agitation months = 60 is_decaying = yes } 
		}
		
		# Add Infamy because doing this is against international law
		change_infamy = 10
		
		# Fire only once
		set_variable = australian_nauru_sgc						# Change variable ****
		
		ai_chance = { 
			base = 10 modifier = { trigger = { has_global_variable = historical_railroading_active } add = -100 } 
		}
		
    }

}