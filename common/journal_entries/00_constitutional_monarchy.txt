je_constitutional_monarchy = {
	icon = "gfx/interface/icons/law_icons/monarchy.dds"

	group = je_group_political_organs

	scripted_button = je_seek_national_reconciliation_button
	scripted_button = je_force_abdication_button

	is_shown_when_inactive = {
		
		has_law_or_variant = law_type:law_HOS_monarch
		is_a_constitutional_monarchy = yes
		
		ruler_is_governor_general = no
		
	}

	possible = {
		
		#is_revolutionary = no
		#is_secessionist = no
		
	}

	immediate = {
		
		if = {
			limit = { 
				OR = { 
					is_a_colonial_government = yes
					shares_same_monarch = yes
				}
				is_subject = yes
			}
			if = {
				limit = { 
					overlord ?= {
						any_scope_character = {
							has_modifier = monarch_character
						}
					}
				}
				overlord ?= {
					random_scope_character = {
						limit = { 
							has_modifier = monarch_character
						}
						save_scope_as = constitutional_monarch_scope
					}
				}
			}
			else_if = {
				limit = { 
					top_overlord ?= {
						any_scope_character = {
							has_modifier = monarch_character
						}
					}
				}
				top_overlord ?= {
					random_scope_character = {
						limit = { 
							has_modifier = monarch_character
						}
						save_scope_as = constitutional_monarch_scope
					}
				}
			}
			else = {
				#No existing monarch
				if = {
					limit = {
						NOT = {
							any_scope_character = {
								has_modifier = monarch_character
							}
						}
					}
					generate_monarch_for_country = yes
				}
				#Mark Monarch
				random_scope_character = {
					limit = { 
						has_modifier = monarch_character
					}
					save_scope_as = constitutional_monarch_scope
				}
			}
			
			#If there is no Viceroy
			if = {
				limit = { 
					exists = scope:constitutional_monarch_scope
					NOT = {
						any_scope_character = {
							has_modifier = monarch_character
						}
					}
					OR = { 
						NOT = {
							any_scope_character = {
								has_modifier = viceroy_character
							}
						}
						any_scope_character = {
							has_modifier = viceroy_character
							NOT = { has_variable = viceroy_character_term_limit }
						}
					}
				}
				random_scope_character = {
					limit = { 
						has_modifier = viceroy_character
						NOT = { has_variable = viceroy_character_term_limit }
					}
					retire_monarch_character_scripted_effect = yes
				}
				generate_viceroy_for_country = yes
			}
			
		}
		else_if = {
			limit = { 
				any_scope_character = {
					has_modifier = monarch_character
				}
			}
			#Mark Monarch
			random_scope_character = {
				limit = { 
					has_modifier = monarch_character
				}
				save_scope_as = constitutional_monarch_scope
			}
		}
		else = {
			#No existing monarch
			if = {
				limit = {
					NOT = {
						any_scope_character = {
							has_modifier = monarch_character
						}
					}
				}
				generate_monarch_for_country = yes
			}
			
			#Mark Monarch
			random_scope_character = {
				limit = { 
					has_modifier = monarch_character
				}
				save_scope_as = constitutional_monarch_scope
			}
		}
		
		#Clear modifiers
		if = { limit = { has_modifier = monarch_ig_landowners } remove_modifier = monarch_ig_landowners }
		if = { limit = { has_modifier = monarch_ig_devout } remove_modifier = monarch_ig_devout }
		if = { limit = { has_modifier = monarch_ig_rural_folk } remove_modifier = monarch_ig_rural_folk }
		if = { limit = { has_modifier = monarch_ig_industrialists } remove_modifier = monarch_ig_industrialists }
		if = { limit = { has_modifier = monarch_ig_petty_bourgeoisie } remove_modifier = monarch_ig_petty_bourgeoisie }
		if = { limit = { has_modifier = monarch_ig_trade_unions } remove_modifier = monarch_ig_trade_unions }
		
		#Clear variables
		remove_variable = elective_monarchy_system
		remove_variable = elective_monarchy_system_timer
		remove_variable = female_monarch_var
		
		#Historical elective monarchies
		if = {
			limit = { 
				OR = { 
					c:MSY ?= this 
					c:MLY ?= this
					c:UAE ?= this 
				}
			}
			set_variable = elective_monarchy_system
		}
		
		#Elective Monarchy
		if = {
			limit = { 
				has_variable = elective_monarchy_system
			}
			set_variable = { 
				name = elective_monarchy_system_timer
				years = 5
			}
		}
		
	}

	fail = {
		
		OR = { 
		
			NAND = {
				has_law_or_variant = law_type:law_HOS_monarch
				is_a_constitutional_monarchy = yes
			}
			
			ruler_is_governor_general = yes
			
			NOT = { exists = scope:constitutional_monarch_scope }
			
		}
		
	}
	
	on_fail = {
		
		#Mark viceroy
		random_scope_character = {
			limit = { 
				has_modifier = viceroy_character
			}
			save_scope_as = viceroy_character_label
			if = {
				limit = { 
					owner ?= { 
						top_overlord ?= { c:GBR ?= this }
						NAND = { 
							c:HND ?= this 
							is_sufficiently_independent = yes
						}
					}
				}
				custom_tooltip = {
					text = governor_general_character_label.tt
				}
			}
			else = {
				custom_tooltip = {
					text = viceroy_character_label.tt
				}
			}
		}
		
		#Remove all viceroys
		hidden_effect = {
			if = {
				limit = { is_a_foreign_regime_monarchy = no }
				every_scope_character = {
					limit = { 
						has_modifier = viceroy_character
					}
					retire_character_scripted_effect = yes
				}
			}
		}
		
		#Clear modifiers
		if = { limit = { has_modifier = monarch_ig_landowners } remove_modifier = monarch_ig_landowners }
		if = { limit = { has_modifier = monarch_ig_devout } remove_modifier = monarch_ig_devout }
		if = { limit = { has_modifier = monarch_ig_rural_folk } remove_modifier = monarch_ig_rural_folk }
		if = { limit = { has_modifier = monarch_ig_industrialists } remove_modifier = monarch_ig_industrialists }
		if = { limit = { has_modifier = monarch_ig_petty_bourgeoisie } remove_modifier = monarch_ig_petty_bourgeoisie }
		if = { limit = { has_modifier = monarch_ig_trade_unions } remove_modifier = monarch_ig_trade_unions }
		
		#Clear variables
		remove_variable = elective_monarchy_system
		remove_variable = elective_monarchy_system_timer
		remove_variable = female_monarch_var
		
	}
	
	on_monthly_pulse = {
	
		effect = {
			
			#If monarch is ruler OR an IG leader
			if = {
				limit = { 
					exists = scope:constitutional_monarch_scope
					scope:constitutional_monarch_scope ?= { 
						OR = { 
							is_ruler = yes
							has_role = politician
						}
						has_modifier = monarch_character 
					}
				}
				clean_up_any_monarchs = yes
			}
			
			#If there is no Viceroy
			if = {
				limit = { 
					exists = scope:constitutional_monarch_scope
					NOT = {
						any_scope_character = {
							has_modifier = monarch_character
						}
					}
					OR = { 
						NOT = {
							any_scope_character = {
								has_modifier = viceroy_character
							}
						}
						any_scope_character = {
							has_modifier = viceroy_character
							NOT = { has_variable = viceroy_character_term_limit }
						}
					}
				}
				generate_viceroy_for_country = yes
			}
			
			#Restore any exiled monarch
			if = {
				limit = { 
					exists = scope:constitutional_monarch_scope
					scope:constitutional_monarch_scope ?= { is_in_exile_pool = yes }
				}
				scope:constitutional_monarch_scope ?= {
					transfer_character = ROOT
					set_character_as_monarch = yes
				}
			}
			
			#Remove Viceroy
			if = {
				limit = { 
					exists = scope:constitutional_monarch_scope
					any_scope_character = {
						has_modifier = monarch_character
					}
					any_scope_character = {
						has_modifier = viceroy_character
					}
				}
				random_scope_character = {
					limit = { 
						has_modifier = viceroy_character
					}
					retire_character_scripted_effect = yes
				}
			}
			
		}
		
	}
	
	on_yearly_pulse = {
	
		effect = {
			
		}
		
	}
	
	status_desc = {
		first_valid = {
			triggered_desc = {
				desc = monarch_ig_landowners
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_landowners
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_devout
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_devout
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_rural_folk
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_rural_folk
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_industrialists
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_industrialists
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_petty_bourgeoisie
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_petty_bourgeoisie
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_trade_unions
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_trade_unions
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_armed_forces
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_armed_forces
					}
				}
			}
			triggered_desc = {
				desc = monarch_ig_intelligentsia
				trigger = {
					scope:constitutional_monarch_scope ?= {
						has_modifier = monarch_character
						is_interest_group_type = ig_intelligentsia
					}
				}
			}
			triggered_desc = {
				desc = monarch_vacated
				trigger = {
					always = yes
				}
			}
		}
	}
	
	# zero or more static modifiers that will be applied to the Journal Entry when it activates, where they will propagate to the country
	modifiers_while_active = {
		monarchy_system
	}

	weight = 50

	should_be_pinned_by_default = no

	transferable = no

	progressbar = no
}