identity_superstate = {
	power_bloc_modifier = {
		power_bloc_customs_union_bool = yes
		power_bloc_mandate_progress_per_great_power_member_add = 10
		power_bloc_mandate_progress_per_major_power_member_add = 5
		power_bloc_mandate_progress_per_minor_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		power_bloc_mandate_progress_per_unrecognized_major_power_member_add = 2
		power_bloc_mandate_progress_per_unrecognized_regional_power_member_add = 1
		#power_bloc_cohesion_per_member_add = -1
		power_bloc_invite_acceptance_great_power_add = -15
	}

	leader_modifier = {
		state_trade_capacity_mult = 0.1
	}
	
	non_leader_modifier = {
		country_convoy_contribution_to_market_owner_add = 0.2
	}

	can_leave = {
		OR = {
			is_power_bloc_leader = yes
			power_bloc = {
				leverage_advantage = {
					target = root
					value <= 30
				}
			}
		}
		custom_tooltip = {
			text = NOT_superstate_customs_union.tt
			NOR = {
				has_variable = superstate_customs_union
				has_variable = superstate_currency_union
				has_variable = superstate_defence_union
				has_variable = superstate_political_union
			}
		}
	}
	
	possible = {
		
		custom_tooltip = {
			text = superstate_customs_union.tt
			OR = {
				has_variable = XNA_ambitions
				has_variable = XCA_ambitions
				has_variable = XSA_ambitions
				has_variable = XEU_ambitions
				has_variable = XER_ambitions
				has_variable = XAL_ambitions
				has_variable = XAU_ambitions
				has_variable = XEA_ambitions
				has_variable = XSE_ambitions
				has_variable = XPI_ambitions
			}
			OR = {
				has_variable = superstate_customs_union
				has_variable = superstate_currency_union
				has_variable = superstate_defence_union
				has_variable = superstate_political_union
			}
		}
		
	}

	icon = "gfx/interface/icons/invention_icons/nationalism.dds"
	background = "gfx/interface/power_blocs/backgrounds/pb_background_generic.dds"

	mandate_progress = power_bloc_mandate_progress_by_rank
	
	on_created = { relations_hit_with_power_bloc_leaders = yes }
	
	cohesion = {
	
		add = {
			add = 0.50
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_BASE
		}
		
		add = {
			add = legitimacy
			divide = 100 # legitimacy max value
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = 0.5
			desc = POWER_BLOC_COHESION_LEGITIMACY
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_leader.market.market_number_goods_shortages_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_leader.market.market_number_goods_shortages_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_leader.market.market_number_goods_shortages
			}
			multiply = -5
			desc = POWER_BLOC_COHESION_GOODS_SHORTAGES
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_prestige_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_prestige_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_prestige
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_SHARE_PRESTIGE
		}

		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_total_leading_goods_producers_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_total_leading_goods_producers_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_total_leading_goods_producers
			}
			multiply = 3
			desc = POWER_BLOC_COHESION_LEADING_GOODS_PRODUCER
		}

		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_gdp_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_gdp_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_gdp
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			multiply = 0.5
			desc = POWER_BLOC_COHESION_SHARE_GDP
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "power_bloc_share_power_projection_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "power_bloc_share_power_projection_without(scope:without_country)"
			}
			else = {
				add = power_bloc_share_power_projection
			}
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_SHARE_POWER_PROJECTION
		}
		
		add = {
			if = {
				limit = { exists = scope:with_country }
				add = "scope:power_bloc.power_bloc_worst_infamy_with(scope:with_country)"
			}
			else_if = {
				limit = { exists = scope:without_country }
				add = "scope:power_bloc.power_bloc_worst_infamy_without(scope:without_country)"
			}
			else = {
				add = scope:power_bloc.power_bloc_worst_infamy
			}
			divide = define:NDiplomacy|INFAMY_THRESHOLD_PARIAH
			multiply = -1
			multiply = define:NPowerBlocs|COHESION_TARGET_MAX
			desc = POWER_BLOC_COHESION_WORST_INFAMY
		}
		
	}
	
	ai_weight = {
		value = 1000		
	}
	
}