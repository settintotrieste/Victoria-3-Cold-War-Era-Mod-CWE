transit_rights = {
    kind = directed
    cost = 10

    relations_progress_per_day = 0.5
    relations_improvement_max = 20

	icon = "gfx/interface/icons/diplomatic_treaties_articles_icons/transit_rights_treaties.dds"

	flags = {
		is_transit_rights
		can_be_enforced
		can_be_renegotiated
		giftable
		friendly
	}

	maintenance_paid_by = target_country
    usage_limit = once_per_side

    unlocked_by_technologies = {
        
    }

	visible = {
	
		is_junior_in_customs_union = no
		
		#One such treaty per country
		NOT = { any_scope_treaty = { binds = scope:other_country any_scope_article = { has_type = trade_privilege } } }
		
	}

	possible = {
		
		#Both countries are CU leaders
		is_junior_in_customs_union = no
		scope:other_country ?= {
			is_junior_in_customs_union = no
		}
		
	}

    can_ratify = {
        custom_tooltip = {
            text = DUPLICATE_ARTICLE_SAME_INPUTS_TREATY
            NOT = {
                scope:source_country = {
                    any_scope_treaty = {
						binds = scope:target_country
                        hidden_trigger = {
							OR = {
								scope:treaty = {
									is_renegotiation = no
								}
								scope:treaty.amended_treaty != this
							}
						}
                        any_scope_article = {
                            has_type = transit_rights
                            source_country = scope:source_country
                        }
                    }
                }
            }
        }
		scope:target_country = {
			OR = {
				has_strategic_land_adjacency = scope:source_country
				any_scope_treaty = {
					any_scope_article = {
						has_type = transit_rights
						source_country ?= { has_strategic_land_adjacency = scope:source_country }
					}
				}
			}
		}
    }
	
	can_withdraw = {  
		
		custom_tooltip = {
			text = NOT_superstate_free_trade_zone.tt
			NAND = {
			
				#In a superstate free trade zone
				scope:source_country = {
					has_journal_entry = je_superstate_system
					has_variable = superstate_free_trade_zone
					is_junior_in_customs_union = no
				}
				scope:target_country = {
					has_journal_entry = je_superstate_system
					has_variable = superstate_free_trade_zone
					is_junior_in_customs_union = no
				}
				
				#List Superstates
				scope:source_country = {
					OR = { 
						AND = { OR = { c:XNA ?= this has_variable = XNA_ambitions } scope:target_country = { has_variable = XNA_ambitions } }
						AND = { OR = { c:XCA ?= this has_variable = XCA_ambitions } scope:target_country = { has_variable = XCA_ambitions } }
						AND = { OR = { c:XSA ?= this has_variable = XSA_ambitions } scope:target_country = { has_variable = XSA_ambitions } }
						AND = { OR = { c:XEU ?= this has_variable = XEU_ambitions } scope:target_country = { has_variable = XEU_ambitions } }
						AND = { OR = { c:XER ?= this has_variable = XER_ambitions } scope:target_country = { has_variable = XER_ambitions } }
						AND = { OR = { c:XAL ?= this has_variable = XAL_ambitions } scope:target_country = { has_variable = XAL_ambitions } }
						AND = { OR = { c:XAU ?= this has_variable = XAU_ambitions } scope:target_country = { has_variable = XAU_ambitions } }
						AND = { OR = { c:XEA ?= this has_variable = XEA_ambitions } scope:target_country = { has_variable = XEA_ambitions } }
						AND = { OR = { c:XSE ?= this has_variable = XSE_ambitions } scope:target_country = { has_variable = XSE_ambitions } }
						AND = { OR = { c:XPI ?= this has_variable = XPI_ambitions } scope:target_country = { has_variable = XPI_ambitions } }
					}
				}
				
			}
		}
		
		trigger_if = {
			limit = { scope:source_country = { OR = { has_modifier = COMECON_member has_modifier = COMECON_leader } } }
			NAND = { 
				scope:source_country = { OR = { has_modifier = COMECON_member has_modifier = COMECON_leader } } 
				scope:target_country = { OR = { has_modifier = COMECON_member has_modifier = COMECON_leader } }
			}
		}
		
	}

    on_entry_into_force = {}

	on_withdrawal = {}
	on_break = {
		scope:withdrawing_country = {
			change_relations = { country = scope:non_withdrawing_country value = -10 }
		}
	}

	ai = {

        treaty_categories = {
			trade
		}

		evaluation_chance = {
			value = 0

			if = {
				limit = { capital.world_market_access <= 0 }
				add = 1.0
			}
		}

        article_ai_usage = {
            request
        }

        inherent_accept_score = {
			value = 0

			if = {
				limit = {
					scope:source_country ?= this
				}

				# We are doing this to be able to reuse loc across treaties and diplomatic actions
				scope:source_country = {
					save_temporary_scope_as = target
				}
				scope:target_country = {
					save_temporary_scope_as = actor
				}
				
				#Help reduce isolation
				if = {
					limit = { 
						scope:source_country ?= { capital.world_market_access > 0 }
						scope:target_country ?= { capital.world_market_access <= 0 }
					}
					add = {
						desc = "concept_isolated_state_short"
						value = 100
					}
				}

				# Generally permissive
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_BASE"
					value = -10
				}

				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
					if = {
						limit = {
							scope:source_country = { is_a_democracy = no }
							OR = {
								has_attitude = {
									who = scope:target_country
									attitude = antagonistic
								}
								has_attitude = {
									who = scope:target_country
									attitude = domineering
								}
								has_attitude = {
									who = scope:target_country
									attitude = belligerent
								}
							}
						}
						add = -100
					}
					else_if = {
						limit = {
							scope:source_country = { is_a_democracy = yes }
							OR = {
								has_attitude = {
									who = scope:target_country
									attitude = antagonistic
								}
								has_attitude = {
									who = scope:target_country
									attitude = domineering
								}
								has_attitude = {
									who = scope:target_country
									attitude = belligerent
								}
							}
						}
						add = -50
					}
				}
			}
			else_if = {
				limit = {
					scope:target_country ?= this
					"ai_transit_rights_value(scope:source_country)" > 0
				}
				scope:source_country = {
					save_temporary_scope_as = actor
				}
				scope:target_country = {
					save_temporary_scope_as = target
				}

				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_TRANSIT_RIGHTS_VALUE"
					value = "ai_transit_rights_value(scope:source_country)"
					max = 50
				}
			}
            else_if = {
                limit = { NOT = { exists = scope:is_treaty_active } }
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_DOES_NOT_WANT_ARTICLE"
					value = -300
				}
			}
			
			#Democracies want to help each other
			if = {
				limit = { 
					scope:target_country = { 
						is_a_democracy = yes
						any_primary_culture = { shares_non_heritage_trait_with_any_primary_culture = scope:source_country } 
					} 
					scope:source_country = {
						is_a_democracy = yes
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_SIMILAR_CULTURE"
					value = 200
				}
			}
			if = {
				limit = { 
					scope:target_country = { 
						is_neutral = yes
					} 
					scope:source_country = {
						is_a_democracy = yes
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_TRANSIT_RIGHTS_NEUTRALITY"
					value = 100
				}
			}
		}
	}

	wargoal = {
		execution_priority = 21

		contestion_type = control_any_target_country_state

		maneuvers = {
			value = 0

			add = {
				desc = "MANEUVERS_BASE_VALUE"
				value = 1
			}

			scope:target_country = {
				multiply = {
					desc = "MANEUVERS_TARGET_COUNTRY_POPULATION_FACTOR"
					value = total_population
					divide = define:NDiplomacy|SWAY_OFFER_WARGOAL_MANEUVERS_COST_POPULATION_SCALING_FACTOR
					multiply = define:NDiplomacy|SWAY_OFFER_WARGOAL_MANEUVERS_COST_POPULATION_SCALING_MULTIPLIER
                    max = define:NDiplomacy|SWAY_OFFER_WARGOAL_MANEUVERS_COST_POPULATION_SCALING_MULTIPLIER_MAX_TOTAL
				}
			}
		}

		infamy = {
			value = 0

			add = {
				desc = "INFAMY_BASE_VALUE"
				value = 0.1
			}

			scope:target_country = {
				multiply = {
					desc = "INFAMY_TARGET_COUNTRY_POPULATION_FACTOR"
					value = total_population
					divide = define:NDiplomacy|WAR_GOAL_INFAMY_POPULATION_SCALING_FACTOR
					multiply = define:NDiplomacy|WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER
                    max = define:NDiplomacy|WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER_MAX_TOTAL
				}
			}
		}
	}
}
