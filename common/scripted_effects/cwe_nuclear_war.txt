effect_compute_nuclear_capability_points_attacker = {

	#Always first reset to 0
	set_global_variable = { 
		name = nuclear_strike_power_global
		value = 0
	}

	#Create total score from all working buildings (max score: 10/state)
	
	#Nuclear weapons type
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_type_1 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 1 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_type_2 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 2 } }
	}
	
	#Stockpile
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_1 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 1 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_2 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 2 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_3 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 3 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_4 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 4 } }
	}
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_stockpile_5 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 5 } }
	}
	
	#Nuclear bomber
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_bomber_1 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 1 } }
	}
	
	#Nuclear rocket
	every_scope_state = {
		limit = { has_building = building_nuclear_weapons_silo any_scope_building = { has_active_production_method = pm_nuclear_rocket_1 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 1 } }
	}

	#Nuclear submarine
	every_scope_state = {
		limit = { has_building = building_nuclear_naval_base any_scope_building = { has_active_production_method = pm_nuclear_submarine_1 } }
		owner = { change_global_variable = { name = nuclear_strike_power_global add = 1 } }
	}
	
	#Reduce nuclear power due to nuclear disarmament treaty
	if = {
		limit = { 
			OR = { 
				any_scope_treaty = { binds = THIS any_scope_article = { has_type = nuclear_de_escalation_treaty } }
				has_modifier = recently_reduced_nukes
			}
		}
		change_global_variable = { name = nuclear_strike_power_global divide = 2 }
	}

}

effect_compute_nuclear_capability_points_states = {

	#Always first reset to 0
	set_global_variable = { 
		name = nuclear_strike_defence_global
		value = 0
	}

	#Calculate total number of states
	every_scope_state = { 
		owner = { change_global_variable = { name = nuclear_strike_defence_global add = 1 } }
	}

}

effect_compute_nuclear_capability_points_stationed_nukes_actor = {

	#Reduce defence due to nuclear weapons stationed next to THIS
	every_country = {
		limit = { 
			OR = { has_diplomatic_pact = { who = scope:actor type = station_nuclear_weapons } is_subject_of = scope:actor }
			has_strategic_adjacency = scope:target_country
		}
		change_global_variable = { name = nuclear_strike_defence_global multiply = 0.9 }
	}
	
}

effect_compute_nuclear_capability_points_stationed_nukes_target_country = {

	#Reduce defence due to nuclear weapons stationed next to THIS
	every_country = {
		limit = { 
			OR = { has_diplomatic_pact = { who = scope:target_country type = station_nuclear_weapons } is_subject_of = scope:target_country }
			has_strategic_adjacency = scope:actor
		}
		change_global_variable = { name = nuclear_strike_defence_global multiply = 0.9 }
	}
	
}

effect_tiny_nuclear_damage = {

	capital = {
		
		#Give benefits from civil defence (Protects people)
		if = {
			limit = { owner = { has_modifier = law_very_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.16 }
			state_region = { add_devastation = 18 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.12 }
			state_region = { add_devastation = 16 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_moderate_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.08 }
			state_region = { add_devastation = 14 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.04 }
			state_region = { add_devastation = 12 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_very_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.01 }
			state_region = { add_devastation = 10 }
		}
		
		#If there was no civil defence (Max radiation, deaths and devastation)
		else = {
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.20 }
			state_region = { add_devastation = 20 }
		}
		
		#Destroy buildings
		effect_nuclear_war_destroy_infrastructure_buildings = yes
		effect_nuclear_war_destroy_city_buildings = yes
		effect_nuclear_war_destroy_industrial_buildings = yes
		#effect_nuclear_war_destroy_rural_buildings = yes
		effect_nuclear_war_destroy_monument_buildings = yes
		
	}
	
	trigger_event = { id = nuclear_warfare_system.4 }
	
}

effect_very_low_nuclear_damage = {

	every_scope_state = {
		
		#Give benefits from civil defence (Protects people)
		if = {
			limit = { owner = { has_modifier = law_very_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.16 }
			state_region = { add_devastation = 18 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.12 }
			state_region = { add_devastation = 16 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_moderate_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.08 }
			state_region = { add_devastation = 14 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.04 }
			state_region = { add_devastation = 12 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_very_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.01 }
			state_region = { add_devastation = 10 }
		}
		
		#If there was no civil defence (Max radiation, deaths and devastation)
		else = {
			add_modifier = {
				name = nuclear_damage_1
				years = 25
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.20 }
			state_region = { add_devastation = 20 }
		}
		
		#Destroy buildings
		effect_nuclear_war_destroy_infrastructure_buildings = yes
		effect_nuclear_war_destroy_city_buildings = yes
		#effect_nuclear_war_destroy_industrial_buildings = yes
		#effect_nuclear_war_destroy_rural_buildings = yes
		effect_nuclear_war_destroy_monument_buildings = yes
		
	}
	
	trigger_event = { id = nuclear_warfare_system.4 }
	
}

effect_low_nuclear_damage = {

	every_scope_state = {
		
		#Give benefits from civil defence (Protects people)
		if = {
			limit = { owner = { has_modifier = law_very_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_2
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.25 }
			state_region = { add_devastation = 40 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_2
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.20 }
			state_region = { add_devastation = 35 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_moderate_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_2
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.15 }
			state_region = { add_devastation = 30 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_2
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.10 }
			state_region = { add_devastation = 25 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_very_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_2
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.05 }
			state_region = { add_devastation = 20 }
		}
		
		#If there was no civil defence (Max radiation, deaths and devastation)
		else = {
			add_modifier = {
				name = nuclear_damage_2
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.30 }
			state_region = { add_devastation = 40 }
		}
		
		#Destroy buildings
		effect_nuclear_war_destroy_infrastructure_buildings = yes
		effect_nuclear_war_destroy_city_buildings = yes
		#effect_nuclear_war_destroy_industrial_buildings = yes
		#effect_nuclear_war_destroy_rural_buildings = yes
		effect_nuclear_war_destroy_monument_buildings = yes
		
	}
	
	trigger_event = { id = nuclear_warfare_system.4 }

}

effect_medium_nuclear_damage = {

	every_scope_state = {
		
		#Give benefits from civil defence (Protects people)
		if = {
			limit = { owner = { has_modifier = law_very_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_3
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.35 }
			state_region = { add_devastation = 50 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_3
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.30 }
			state_region = { add_devastation = 45 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_moderate_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_3
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.25 }
			state_region = { add_devastation = 40 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_3
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.20 }
			state_region = { add_devastation = 35 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_very_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_3
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.10 }
			state_region = { add_devastation = 30 }
		}
		
		#If there was no civil defence (Max radiation, deaths and devastation)
		else = {
			add_modifier = {
				name = nuclear_damage_3
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.40 }
			state_region = { add_devastation = 60 }
		}
		
		#Destroy buildings
		effect_nuclear_war_destroy_infrastructure_buildings = yes
		effect_nuclear_war_destroy_city_buildings = yes
		effect_nuclear_war_destroy_industrial_buildings = yes
		#effect_nuclear_war_destroy_rural_buildings = yes
		effect_nuclear_war_destroy_monument_buildings = yes
		
	}
	
	trigger_event = { id = nuclear_warfare_system.4 }

}

effect_high_nuclear_damage = {

	every_scope_state = {
		
		#Give benefits from civil defence (Protects people)
		if = {
			limit = { owner = { has_modifier = law_very_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_4
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.45 }
			state_region = { add_devastation = 60 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_4
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.40 }
			state_region = { add_devastation = 55 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_moderate_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_4
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.35 }
			state_region = { add_devastation = 50 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_4
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.30 }
			state_region = { add_devastation = 45 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_very_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_4
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.20 }
			state_region = { add_devastation = 40 }
		}
		
		#If there was no civil defence (Max radiation, deaths and devastation)
		else = {
			add_modifier = {
				name = nuclear_damage_4
				years = 75
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.50 }
			state_region = { add_devastation = 80 }
		}
		
		#Destroy buildings
		effect_nuclear_war_destroy_infrastructure_buildings = yes
		effect_nuclear_war_destroy_city_buildings = yes
		effect_nuclear_war_destroy_industrial_buildings = yes
		#effect_nuclear_war_destroy_rural_buildings = yes
		effect_nuclear_war_destroy_monument_buildings = yes
		
	}
	
	trigger_event = { id = nuclear_warfare_system.4 }

}

effect_very_high_nuclear_damage = {

	every_scope_state = {
		
		#Give benefits from civil defence (Protects people)
		if = {
			limit = { owner = { has_modifier = law_very_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_5
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.55 }
			state_region = { add_devastation = 70 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_weak_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_5
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.50 }
			state_region = { add_devastation = 65 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_moderate_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_5
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.45 }
			state_region = { add_devastation = 60 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_5
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.40 }
			state_region = { add_devastation = 55 }
		}
		else_if = {
			limit = { owner = { has_modifier = law_very_strong_civil_defence_law } }
			add_modifier = {
				name = nuclear_damage_5
				years = 50
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.30 }
			state_region = { add_devastation = 50 }
		}
		
		#If there was no civil defence (Max radiation, deaths and devastation)
		else = {
			add_modifier = {
				name = nuclear_damage_5
				years = 75
				is_decaying = yes
			}
			kill_population_percent_in_state = { percent = 0.60 }
			state_region = { add_devastation = 100 }
		}
		
		#Destroy buildings
		effect_nuclear_war_destroy_infrastructure_buildings = yes
		effect_nuclear_war_destroy_city_buildings = yes
		effect_nuclear_war_destroy_industrial_buildings = yes
		effect_nuclear_war_destroy_rural_buildings = yes
		
	}
	
	trigger_event = { id = nuclear_warfare_system.4 }

}

effect_nuclear_war_destroy_rural_buildings = {

	# Delete rural buildings
	#every_scope_state = { 
		remove_building = building_wheat_farm
		remove_building = building_rice_farm
		remove_building = building_rye_farm
		remove_building = building_maize_farm
		remove_building = building_millet_farm
		remove_building = building_fishing_wharf
		remove_building = building_livestock_ranch
		remove_building = building_tobacco_plantation
		remove_building = building_vineyard_plantation
		remove_building = building_cotton_plantation
		remove_building = building_banana_plantation
		remove_building = building_coffee_plantation
		remove_building = building_tea_plantation
		remove_building = building_rubber_plantation
		
		remove_building = building_logging_camp
		
		remove_building = building_gold_mine
		remove_building = building_gold_fields
		remove_building = building_iron_mine
		remove_building = building_lead_mine
		remove_building = building_coal_mine
		remove_building = building_oil_rig
		remove_building = building_sulfur_mine
	#}
	
}

effect_nuclear_war_destroy_infrastructure_buildings = {

	# Delete infrastructure buildings
	#every_scope_state = { 
		remove_building = building_power_plant
		remove_building = building_hydroelectric_power_plant
		
		remove_building = building_railway
		remove_building = building_port
		remove_building = building_communications_network
		
		remove_building = building_trade_center
		
		remove_building = building_suez_canal
		remove_building = building_panama_canal
		
		remove_building = building_government_administration
		
		#remove_building = building_nuclear_naval_base
		#remove_building = building_nuclear_weapons_silo
		
		remove_building = building_skyscraper
	#}

}

effect_nuclear_war_destroy_industrial_buildings = {

	# Delete industrial buildings
	#every_scope_state = { 
		remove_building = building_munition_plants
		remove_building = building_arms_industry
		remove_building = building_artillery_foundries
		remove_building = building_war_machine_industry
		remove_building = building_warplanes_industry
		remove_building = building_military_shipyards
		remove_building = building_explosives_factory
		remove_building = building_aeroplane_industry
		remove_building = building_shipyards
		remove_building = building_locomotives_industry
		remove_building = building_motor_industry
		remove_building = building_food_industry
		remove_building = building_furniture_manufacturies
		remove_building = building_arts_academy
		remove_building = building_electrics_industry
		remove_building = building_synthetics_plants
		remove_building = building_tooling_workshops
		remove_building = building_steel_mills
		remove_building = building_chemical_plants
		remove_building = building_circuit_boards_factory
		remove_building = building_engines_factory
		remove_building = building_textile_mills
		remove_building = building_plastics_factory
		remove_building = building_liquor_industry
		remove_building = building_consumer_robots_factory
		remove_building = building_synthetic_rubber_factory
	#}

}

effect_nuclear_war_destroy_city_buildings = {

	# Delete City buildings
	#every_scope_state = { 
		remove_building = building_retail_services_industry
		remove_building = building_corporate_services_industry
		remove_building = building_professional_services_industry
		remove_building = building_software_industry
		remove_building = building_recreational_services_industry
		remove_building = building_university
		remove_building = building_construction_sector
	#}

}

effect_nuclear_war_destroy_monument_buildings = {

	# Delete City buildings
	destroy_monuments_nuke_effect = yes

}

effect_launch_nuclear_weapons_to_target = {

	#Enable fallout system
	set_global_variable = nuclear_weapons_used_somewhere
	
	### Calculate strike capability ###
	#Attacker's gross attack ability
	effect_compute_nuclear_capability_points_attacker = yes
	
	#Defender's inherent defence
	scope:target_country = {
		effect_compute_nuclear_capability_points_states = yes
		effect_compute_nuclear_capability_points_stationed_nukes_actor = yes
	}
	#Aggregate score (Total attack points / Total states of defender)
	change_global_variable = { 
		name = nuclear_strike_power_global
		divide = global_var:nuclear_strike_defence_global
	}
	
	### Apply damage based on ratio calculated above ###
	scope:target_country = {
		if = {
			limit = { 
				global_var:nuclear_strike_power_global > 0
				global_var:nuclear_strike_power_global <= 1 
			}
			custom_tooltip = {
				text = tiny_nuclear_damage_custom_tooltip
				effect_tiny_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 1
				global_var:nuclear_strike_power_global <= 2 
			}
			custom_tooltip = {
				text = very_low_nuclear_damage_custom_tooltip
				effect_very_low_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 2
				global_var:nuclear_strike_power_global <= 4 
			}
			custom_tooltip = {
				text = low_nuclear_damage_custom_tooltip
				effect_low_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 4
				global_var:nuclear_strike_power_global <= 6 
			}
			custom_tooltip = {
				text = medium_nuclear_damage_custom_tooltip
				effect_medium_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 6
				global_var:nuclear_strike_power_global <= 8 
			}
			custom_tooltip = {
				text = high_nuclear_damage_custom_tooltip
				effect_high_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 8
				#global_var:nuclear_strike_power_global <= 10 
			}
			custom_tooltip = {
				text = very_high_nuclear_damage_custom_tooltip
				effect_very_high_nuclear_damage = yes
			}
		}
	}
	
	### Attacker Cooldown ###
	hidden_effect = { remove_modifier = nuclear_attack_cooldown }
	add_modifier = {
		name = nuclear_attack_cooldown
		years = 1
	}
	
	### Possible Second Strike ###
	if = {
		limit = { 
			scope:target_country = { has_modifier = nuclear_capability } 
		}
		
		#Notice
		scope:actor = { save_scope_as = nuclear_war_actor }
		scope:target_country = {
			custom_tooltip = {
				text = launch_nuclear_weapons.2.tt
			}
		}
		
		### Calculate strike capability ###
		#Attacker's gross attack ability
		scope:target_country = {
			effect_compute_nuclear_capability_points_attacker = yes
		}
		
		#Defender's inherent defence
		effect_compute_nuclear_capability_points_states = yes
		effect_compute_nuclear_capability_points_stationed_nukes_target_country = yes
		
		#Aggregate score (Total attack points / Total states of defender)
		change_global_variable = { 
			name = nuclear_strike_power_global
			divide = global_var:nuclear_strike_defence_global
		}
		
		### Apply damage based on ratio calculated above ###
		if = {
			limit = { 
				global_var:nuclear_strike_power_global > 0
				global_var:nuclear_strike_power_global <= 1 
			}
			custom_tooltip = {
				text = tiny_nuclear_damage_custom_tooltip
				effect_tiny_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 1
				global_var:nuclear_strike_power_global <= 2 
			}
			custom_tooltip = {
				text = very_low_nuclear_damage_custom_tooltip
				effect_very_low_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 2
				global_var:nuclear_strike_power_global <= 4 
			}
			custom_tooltip = {
				text = low_nuclear_damage_custom_tooltip
				effect_low_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 4
				global_var:nuclear_strike_power_global <= 6 
			}
			custom_tooltip = {
				text = medium_nuclear_damage_custom_tooltip
				effect_medium_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 6
				global_var:nuclear_strike_power_global <= 8 
			}
			custom_tooltip = {
				text = high_nuclear_damage_custom_tooltip
				effect_high_nuclear_damage = yes
			}
		}
		else_if = {
			limit = { 
				global_var:nuclear_strike_power_global > 8
				#global_var:nuclear_strike_power_global <= 10 
			}
			custom_tooltip = {
				text = very_high_nuclear_damage_custom_tooltip
				effect_very_high_nuclear_damage = yes
			}
		}
		
		### Defender Cooldown ###
		scope:target_country = {
			hidden_effect = { 
				remove_modifier = nuclear_attack_cooldown
				add_modifier = {
					name = nuclear_attack_cooldown
					years = 1
				}
			}
		}
	}

}

effect_launch_nuclear_weapons_to_all_enemy_countries = {
	
	every_country = {
		limit = { 
			has_war_with = scope:actor
			NOT = { this = scope:target_country }
			any_scope_war = {
				is_warleader = scope:actor
				is_warleader = scope:target_country
				#is_war_participant = this
			}
		}
		
		### Calculate strike capability ###
		ROOT = {
		
			#Attacker's gross attack ability
			effect_compute_nuclear_capability_points_attacker = yes
		
		}
		
		#Notice
		this = { save_scope_as = nuclear_war_target }
		scope:actor = { save_scope_as = nuclear_war_actor }
		custom_tooltip = {
			text = launch_nuclear_weapons.3.tt
		}
		
		#Defender's inherent defence
		this = {
			effect_compute_nuclear_capability_points_states = yes
			effect_compute_nuclear_capability_points_stationed_nukes_actor = yes
		}
		#Aggregate score (Total attack points / Total states of defender)
		change_global_variable = { 
			name = nuclear_strike_power_global
			divide = global_var:nuclear_strike_defence_global
		}
		
		### Apply damage based on ratio calculated above ###
		this = {
			if = {
				limit = { 
					global_var:nuclear_strike_power_global > 0
					global_var:nuclear_strike_power_global <= 1 
				}
				effect_tiny_nuclear_damage = yes
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 1
					global_var:nuclear_strike_power_global <= 2 
				}
				effect_very_low_nuclear_damage = yes
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 2
					global_var:nuclear_strike_power_global <= 4 
				}
				effect_low_nuclear_damage = yes
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 4
					global_var:nuclear_strike_power_global <= 6 
				}
				effect_medium_nuclear_damage = yes
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 6
					global_var:nuclear_strike_power_global <= 8 
				}
				effect_high_nuclear_damage = yes
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 8
					#global_var:nuclear_strike_power_global <= 10 
				}
				effect_very_high_nuclear_damage = yes
			}
		}
		
		### Possible Second Strike ###
		if = {
			limit = { 
				this = { has_modifier = nuclear_capability } 
			}
			
			#Notice
			scope:actor = { save_scope_as = nuclear_war_actor }
			this = {
				save_scope_as = nuclear_war_target
				custom_tooltip = {
					text = launch_nuclear_weapons.4.tt
				}
			}
			
			### Calculate strike capability ###
			#Attacker's gross attack ability
			this = {
				effect_compute_nuclear_capability_points_attacker = yes
			}
			
			#Defender's inherent defence
			effect_compute_nuclear_capability_points_states = yes
			effect_compute_nuclear_capability_points_stationed_nukes_target_country = yes
			
			#Aggregate score (Total attack points / Total states of defender)
			change_global_variable = { 
				name = nuclear_strike_power_global
				divide = global_var:nuclear_strike_defence_global
			}
			
			### Apply damage based on ratio calculated above ###
			if = {
				limit = { 
					global_var:nuclear_strike_power_global > 0
					global_var:nuclear_strike_power_global <= 1 
				}
				custom_tooltip = {
					text = tiny_nuclear_damage_custom_tooltip
					effect_tiny_nuclear_damage = yes
				}
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 1
					global_var:nuclear_strike_power_global <= 2 
				}
				custom_tooltip = {
					text = very_low_nuclear_damage_custom_tooltip
					effect_very_low_nuclear_damage = yes
				}
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 2
					global_var:nuclear_strike_power_global <= 4 
				}
				custom_tooltip = {
					text = low_nuclear_damage_custom_tooltip
					effect_low_nuclear_damage = yes
				}
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 4
					global_var:nuclear_strike_power_global <= 6 
				}
				custom_tooltip = {
					text = medium_nuclear_damage_custom_tooltip
					effect_medium_nuclear_damage = yes
				}
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 6
					global_var:nuclear_strike_power_global <= 8 
				}
				custom_tooltip = {
					text = high_nuclear_damage_custom_tooltip
					effect_high_nuclear_damage = yes
				}
			}
			else_if = {
				limit = { 
					global_var:nuclear_strike_power_global > 8
					#global_var:nuclear_strike_power_global <= 10 
				}
				custom_tooltip = {
					text = very_high_nuclear_damage_custom_tooltip
					effect_very_high_nuclear_damage = yes
				}
			}
			
			### Defender Cooldown ###
			this = {
				hidden_effect = { 
					remove_modifier = nuclear_attack_cooldown
					add_modifier = {
						name = nuclear_attack_cooldown
						years = 1
					}
				}
			}
		}
		
	}

}

effect_launch_nuclear_weapons_to_all_allied_countries = {
	
	if = { 
		limit = { 
			scope:target_country = { has_modifier = nuclear_capability } 
		}
		
		every_country = {
			limit = { 
				has_war_with = scope:target_country
				NOT = { this = scope:actor }
				any_scope_war = {
					is_warleader = scope:actor
					is_warleader = scope:target_country
					#is_war_participant = this
				}
			}
			
			### Calculate strike capability ###
			scope:target_country = {
			
				#Attacker's gross attack ability
				effect_compute_nuclear_capability_points_attacker = yes
			
			}
			
			#Notice
			this = { save_scope_as = nuclear_war_target }
			scope:target_country = { save_scope_as = nuclear_war_actor }
			custom_tooltip = {
				text = launch_nuclear_weapons.3.tt
			}
			
			#Defender's inherent defence
			this = {
				effect_compute_nuclear_capability_points_states = yes
				effect_compute_nuclear_capability_points_stationed_nukes_actor = yes
			}
			#Aggregate score (Total attack points / Total states of defender)
			change_global_variable = { 
				name = nuclear_strike_power_global
				divide = global_var:nuclear_strike_defence_global
			}
			
			### Apply damage based on ratio calculated above ###
			this = {
				if = {
					limit = { 
						global_var:nuclear_strike_power_global > 0
						global_var:nuclear_strike_power_global <= 1 
					}
					effect_tiny_nuclear_damage = yes
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 1
						global_var:nuclear_strike_power_global <= 2 
					}
					effect_very_low_nuclear_damage = yes
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 2
						global_var:nuclear_strike_power_global <= 4 
					}
					effect_low_nuclear_damage = yes
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 4
						global_var:nuclear_strike_power_global <= 6 
					}
					effect_medium_nuclear_damage = yes
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 6
						global_var:nuclear_strike_power_global <= 8 
					}
					effect_high_nuclear_damage = yes
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 8
						#global_var:nuclear_strike_power_global <= 10 
					}
					effect_very_high_nuclear_damage = yes
				}
			}
			
			### Possible Second Strike ###
			if = {
				limit = { 
					this = { has_modifier = nuclear_capability } 
				}
				
				#Notice
				scope:target_country = { save_scope_as = nuclear_war_actor }
				this = {
					save_scope_as = nuclear_war_target
					custom_tooltip = {
						text = launch_nuclear_weapons.4.tt
					}
				}
				
				### Calculate strike capability ###
				#Attacker's gross attack ability
				this = {
					effect_compute_nuclear_capability_points_attacker = yes
				}
				
				#Defender's inherent defence
				effect_compute_nuclear_capability_points_states = yes
				effect_compute_nuclear_capability_points_stationed_nukes_target_country = yes
				
				#Aggregate score (Total attack points / Total states of defender)
				change_global_variable = { 
					name = nuclear_strike_power_global
					divide = global_var:nuclear_strike_defence_global
				}
				
				### Apply damage based on ratio calculated above ###
				if = {
					limit = { 
						global_var:nuclear_strike_power_global > 0
						global_var:nuclear_strike_power_global <= 1 
					}
					custom_tooltip = {
						text = tiny_nuclear_damage_custom_tooltip
						effect_tiny_nuclear_damage = yes
					}
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 1
						global_var:nuclear_strike_power_global <= 2 
					}
					custom_tooltip = {
						text = very_low_nuclear_damage_custom_tooltip
						effect_very_low_nuclear_damage = yes
					}
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 2
						global_var:nuclear_strike_power_global <= 4 
					}
					custom_tooltip = {
						text = low_nuclear_damage_custom_tooltip
						effect_low_nuclear_damage = yes
					}
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 4
						global_var:nuclear_strike_power_global <= 6 
					}
					custom_tooltip = {
						text = medium_nuclear_damage_custom_tooltip
						effect_medium_nuclear_damage = yes
					}
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 6
						global_var:nuclear_strike_power_global <= 8 
					}
					custom_tooltip = {
						text = high_nuclear_damage_custom_tooltip
						effect_high_nuclear_damage = yes
					}
				}
				else_if = {
					limit = { 
						global_var:nuclear_strike_power_global > 8
						#global_var:nuclear_strike_power_global <= 10 
					}
					custom_tooltip = {
						text = very_high_nuclear_damage_custom_tooltip
						effect_very_high_nuclear_damage = yes
					}
				}
				
				### Defender Cooldown ###
				this = {
					hidden_effect = { 
						remove_modifier = nuclear_attack_cooldown
						add_modifier = {
							name = nuclear_attack_cooldown
							years = 1
						}
					}
				}
			}
			
		}

	}
	
}

effect_cleanup_nuclear_damage = {
	every_country = {
		every_scope_state = {
			limit = {
				OR = {
					has_modifier = nuclear_damage_5
					has_modifier = nuclear_damage_4
					has_modifier = nuclear_damage_3
					has_modifier = nuclear_damage_2
					has_modifier = nuclear_damage_1
				}
			}
			if = { 
				limit = { 
					has_modifier = nuclear_damage_5
					OR = {
						has_modifier = nuclear_damage_4
						has_modifier = nuclear_damage_3
						has_modifier = nuclear_damage_2
						has_modifier = nuclear_damage_1
					}
				}
				remove_modifier = nuclear_damage_4
				remove_modifier = nuclear_damage_3
				remove_modifier = nuclear_damage_2
				remove_modifier = nuclear_damage_1
			}
			if = { 
				limit = { 
					has_modifier = nuclear_damage_4
					OR = {
						has_modifier = nuclear_damage_3
						has_modifier = nuclear_damage_2
						has_modifier = nuclear_damage_1
					}
				}
				remove_modifier = nuclear_damage_3
				remove_modifier = nuclear_damage_2
				remove_modifier = nuclear_damage_1
			}
			if = { 
				limit = { 
					has_modifier = nuclear_damage_3
					OR = {
						has_modifier = nuclear_damage_2
						has_modifier = nuclear_damage_1
					}
				}
				remove_modifier = nuclear_damage_2
				remove_modifier = nuclear_damage_1
			}
			if = { 
				limit = { 
					has_modifier = nuclear_damage_2
					has_modifier = nuclear_damage_1
				}
				remove_modifier = nuclear_damage_1
			}
		}
	}
}