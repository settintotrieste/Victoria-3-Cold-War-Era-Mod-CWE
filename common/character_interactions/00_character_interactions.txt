#icon					Path to icon for both right click menu and character panel buttons
#clicksound				Clicksound for both right click menu and character panel buttons

#						All scopes are character scopes with the interacting country stored as the actor
#potential				Trigger to check if the interaction should be shown
#possible 				Trigger to check if the interaction is available
#effect					The effects of the interaction
#cooldown				Scriptable duration that this interaction will be unavailable for the interacting country

#show_requirements		Whether to always show requirements, similar to highlighted options in events
#show_confirmation_box	Whether to require confirmation

#ai_chance				Scriptable value for the chance (0-100) that the AI will use this interaction when available, default 0

grant_command_to_ruler = {
	icon = "gfx/interface/character_panel/grant_command.dds"
	clicksound = "event:/SFX/UI/Military/command_grant"

	potential = {
		is_ruler = yes
		NOR = {
			has_role = general
			has_role = admiral
		}
		owner ?= scope:actor
	}

	possible = {
		age >= define:NCharacters|ADULT_AGE
		is_female = no
		owner ?= {
			ruler_can_have_command = yes
			is_a_nationalist_government = yes
		}
		exists = owner.capital.land_hq
	}

	effect = {
		add_character_role = general
	}

	ai_chance = {
		value = 0
		if = {
			limit = {
				NOT = { is_interest_group_type = ig_armed_forces }
			}
			add = -50
		}
		if = {
			limit = {
				AND = {
					age <= 50
					OR = {
						has_trait = reckless
						has_trait = direct
						has_trait = imposing
					}
					NOR = {
						has_trait = psychological_affliction
						has_trait = wounded
						has_trait = shellshocked
					}
				}
			}
			add = 100
		}
	}
}

remove_command_from_ruler = {
	icon = "gfx/interface/character_panel/grant_command_not.dds"
	clicksound = "event:/SFX/UI/Military/command_remove"

	potential = {
		is_ruler = yes
		has_role = general
		owner ?= scope:actor
	}

	possible = {
		commander_military_formation = {
			is_mobilized = no
		}
	}

	effect = {
		remove_character_role = general
	}

	ai_chance = {
		value = 0
		if = {
			limit = {
				owner ?= {	
					any_scope_general = {
						exists = yes
						NOT = {
							this = owner.ruler
						}
					}
				}
			} 
			add = 25
		}	
		if = {
			limit = {
				NOT = {
					owner ?= {
						is_at_war = yes
					}
				}
			}
			add = 25
		}
		if = {
			limit = {
				is_interest_group_type = ig_armed_forces
			}
			add = -50
		}			
	}
}

grant_leadership_to_agitator = {
	icon = "gfx/interface/character_panel/grant_command_not.dds"
	clicksound = "event:/SFX/DLC/1.3_ip1/UI/agitator_promote"

	potential = {
		NOT = { has_modifier = unsg_character }
		NOT = { has_modifier = monarch_character }
		has_role = agitator
		exists = owner
		owner ?= scope:actor
	}

	possible = {
		interest_group = {
			is_in_government = yes
		}
		trigger_if = {
			limit = { owner ?= { has_law = law_type:law_state_atheism } }
			OR = {
				religion = rel:atheist
				root.owner ?= {
					country_average_cultural_acceptance = {
						target = root.culture
						value >= acceptance_status_4
					}
				}
			}
		}
		trigger_else = {
			character_acceptance = { target = scope:actor value >= acceptance_status_4 }
		}
		OR = {
			is_female = no
			scope:actor ?= { has_law = law_type:law_full_womens_rights }
		}
		custom_tooltip = {
			text = grant_leadership_must_be_pressured_ig
			political_movement ?= {
				any_influenced_interest_group = {
					this = root.interest_group
				}
			}		
		}
		
	}

	effect = {
		
		convert_agitator_ideology_to_IG_ideology = yes
		
		remove_character_role = agitator
		add_character_role = politician
		custom_tooltip = {
			text = make_agitator_ig_leader_tt
			set_as_interest_group_leader = yes
		}
	}

	cooldown = { days = normal_modifier_time }

	ai_chance = {
		value = -50
		if = {
			limit = {
				popularity > interest_group.leader.popularity
			}
			add = 25
		}
		if = {
			limit = {
				interest_group.leader.popularity <= -50
			}
			add = 50
		}
		if = {
			limit = {
				interest_group.leader.popularity >= 50
			}
			add = -50
		}
		if = {
			limit = {
				interest_group = {
					ig_approval <= 0
				}
			}
			add = 25
		}
		if = {
			limit = {
				this.ideology = owner.ruler.ideology
			}
			add = 50
		}
		if = {
			limit = {
				interest_group.leader ?= {
					is_historical = yes
				}
			}
			add = -1000
		}
	}
}

grant_command_to_agitator = {
	icon = "gfx/interface/character_panel/grant_command.dds"
	clicksound = "event:/SFX/UI/Military/command_grant"

	potential = {
		NOT = { has_modifier = unsg_character }
		NOT = { has_modifier = monarch_character }
		has_role = agitator
		NOT = { has_role = general }
		NOT = { has_role = admiral }
		owner ?= scope:actor
	}

	possible = {
		age >= define:NCharacters|ADULT_AGE
		is_female = no
		exists = owner.capital.land_hq
		
		#Foreigners cannot be military leaders unless the country is multicultural
		scope:actor ?= {
			has_law = law_type:law_multicultural
		}
		
		# Cannot give leadership if character is a culturally discriminated exile
		NOT = {
			culture = {
				culture_is_discriminated_in = scope:actor
			}
		}
		
	}

	effect = {
		add_character_role = general
	}

	cooldown = { days = normal_modifier_time }

	ai_chance = {
		value = 0
		if = {
			limit = {
				has_commander_traits = yes
			}
			add = 50
		}	
		if = {
			limit = {
				is_interest_group_type = ig_armed_forces
			}
			add = 25
		}	
		if = {
			limit = {
				NOT = {
					owner ?= {	
						any_scope_general = {
							exists = this
						}
					}
				}	
			}
			add = 25
		}
		if = {
			limit = {
				owner ?= {
					any_scope_war = {
						any_scope_front = {
							is_vulnerable_front = root
						}
					}
				}	
			}
			add = 100
		}
	}
}

marry_ruler_or_heir = {
	icon = "gfx/interface/icons/ideology_icons/ideology_leader/ideology_leader_royalist.dds"
	clicksound = "event:/SFX/UI/Military/command_grant"

	potential = {
		owner ?= scope:actor
		OR = {
			is_ruler = yes
			is_heir = yes
		}
		scope:actor ?= {
			is_a_regime_monarchy = yes
			religion = {
				has_discrimination_trait = christian
			}
		}
		age >= 18
		NOT = { has_variable = spouse_seeker }
		NOT = { has_variable = is_married }
	}

	possible = {
		any_country = {
			NOT = { THIS = scope:actor }
			NOT = { is_subject_type = subject_type_personal_union }
			is_a_regime_monarchy = yes
			religion = scope:actor.religion
			ruler = {
				age > 36
				hidden_trigger = {
					NOT = {
						has_variable = marriage_target
					}
				}
			}
		}
	}
	effect = {
		set_variable = spouse_seeker
		owner ?= { 
			trigger_event = { id = wedding.2 popup = yes } 
		}
	}
	cooldown = { days = normal_modifier_time }

	ai_chance = {
		value = 25
	}
}

abdicate_monarch = {
	icon = "gfx/interface/icons/ideology_icons/ideology_leader/ideology_leader_republican.dds"
	clicksound = "event:/SFX/UI/Military/command_grant"

	potential = {
		owner ?= scope:actor
		is_ruler = yes
		owner ?= {
			is_a_regime_monarchy = yes
		}
		exists = owner.heir
	}

	possible = {
		OR = {
			interest_group = {
				ig_approval <= angry
			}
			interest_group = {
				is_marginal = yes
			}
			popularity <= -50
			has_trait = psychological_affliction
			age >= 75
			owner ?= { # Our thanks to UHM for reporting this
				trigger_if = {
					limit = {
						any_political_movement = {
							is_insurrectionary = yes
							exists = most_desired_law
						}
					}
					any_political_movement = {
						is_insurrectionary = yes
						exists = most_desired_law
						most_desired_law ?= { save_temporary_scope_as = revolutionary_law }
						custom_tooltip = {
							text = ruler_disapproves_of_revolutionary_law
							root = {
								OR = {
									law_enactment_stance = {
										law = scope:revolutionary_law
										value < neutral
									}
									interest_group ?= {
										law_enactment_stance = {
											law = scope:revolutionary_law
											value < neutral
										}
									}
								}
							}
						}
					}
				}
				trigger_else = {
					AND = {
						any_political_movement = {
							is_insurrectionary = yes
						}
						custom_tooltip = {
							text = ruler_disapproves_of_revolutionary_law_contextless
							always = no
						}
					}
				}
			}
		}
		trigger_if = {
			limit = {
				NOT = {
					owner ?= {
						any_interest_group = {
							is_insurrectionary = yes
						}
					}
				}
			}
			owner.heir = {
				age >= 18
			}
		}
	}

	effect = {
		custom_tooltip = leader_abdicates_the_throne_display_tt
		if = {
			limit = {
				owner ?= {
					any_political_movement = {
						exists = most_desired_law
						is_insurrectionary = yes
					}
				}
			}
			owner ?= {
				trigger_event = { id = resignation.3 popup = yes }
			}
		}
		else = {
			owner ?= {
				trigger_event = { id = wedding.3 popup = yes }
			}
		}
	}

	cooldown = { months = 360 }
	show_confirmation_box = yes

	ai_chance = {
		value = -50
		if = {
			limit = {	
				interest_group = {
					ig_approval <= angry
				}
			}
			add = 25
		}	
		if = {
			limit = {
				interest_group = {
					is_marginal = yes
				}				
			}
			add = 25
		}
		if = {
			limit = {
				popularity <= -50			
			}
			add = 25
		}
		if = {
			limit = {
				popularity <= -75			
			}
			add = 25
		}
		if = {
			limit = {
				age >= 75			
			}
			add = 50
		}
		if = {
			limit = {
				has_trait = psychological_affliction			
			}
			add = 25
		}
		if = {
			limit = {
				is_historical = yes		
			}
			add = -1000
		}
	}
}

exile_character = {
	clicksound = "event:/SFX/DLC/1.3_ip1/UI/exile_character"

	potential = {
	
		NOT = { has_modifier = unsg_character }
		NOT = { has_modifier = pope_character }
		NOT = { has_modifier = chief_religious_officer }
		NOT = { has_modifier = monarch_character }
	
		is_in_exile_pool = no
		is_in_void = no
		is_ruler = no
		is_heir = no
		
		# Cannot exile pure commanders, we have the retire interaction for that
		OR = {
			has_role = politician
			has_role = agitator
		}
		
		interest_group = { is_in_government = no }
		
	}

	show_requirements = yes

	possible = {
	
		custom_tooltip = {
			text = not_on_trial.tt
			NOR = {
				has_modifier = indicted_character
				has_modifier = convicted_character
				has_modifier = unjustly_convicted_character
				has_modifier = acquitted_character
			}
		}
	
		owner ?= {
			NOT = { has_law = law_type:law_closed_borders }
			OR = { 
				has_law = law_type:law_outlawed_dissent
				AND = { 
					is_a_dictatorship = yes
					NOT = { has_law = law_type:law_full_free_speech }
				}
			}
		}
		
		trigger_if = {
			limit = {
				has_role = agitator
			}
			political_movement ?= { is_insurrectionary = no }
		}
		trigger_else = {
			interest_group = {
				is_insurrectionary = no
				is_marginal = no
			}
		}
		
		#Cannot exile cabinet ministers, must fire them first
		custom_tooltip = {
			text = not_a_cabinet_minister.tt
			NOT = { has_modifier = cabinet_minister }
		}
		
		owner ?= {
			exists = ruler
			ruler = {
				OR = {
					has_ideology = ideology:ideology_autocratic
					has_ideology = ideology:ideology_power_hungry
				}
			}
		}
		
		custom_tooltip = {
			text = ideology_not_too_close_tt
			NOT = {
				OR = {
					AND = {
						owner ?= {
							OR = { 
								has_modifier = communist_ruling_party_ideology
								has_modifier = market_socialist_ruling_party_ideology
								has_modifier = socialist_ruling_party_ideology
								
								is_a_communist_government = yes
							}
						}
						has_ideology = ideology:ideology_agitator_communist
					}
					AND = {
						owner ?= {
							OR = { 
								has_modifier = fascist_ruling_party_ideology
								
								is_a_nationalist_government = yes
							}
						}
						has_ideology = ideology:ideology_agitator_nationalist
					}
					AND = {
						owner ?= {
							OR = { 
								has_modifier = traditionalist_ruling_party_ideology
								has_modifier = conservative_ruling_party_ideology
								
								is_a_monarchy = yes
							}
						}
						has_ideology = ideology:ideology_agitator_monarchist
					}
					AND = {
						owner ?= {
							OR = { 
								has_modifier = traditionalist_ruling_party_ideology
								has_modifier = conservative_ruling_party_ideology
							}
							is_a_theocratic_government = yes
						}
						has_ideology = ideology:ideology_agitator_theocrat
					}
					AND = {
						owner ?= {
							has_law = law_type:law_HOS_president
						}
						has_ideology = ideology:ideology_agitator_republican
					}
					AND = {
						OR = {
							owner ?= {
								OR = { 
									has_modifier = social_democratic_ruling_party_ideology
									has_modifier = liberal_ruling_party_ideology
									has_modifier = libertarian_ruling_party_ideology
								}
							}
							owner.ruler = {
								OR = {
									has_ideology = ideology:ideology_democratic
									has_ideology = ideology:ideology_liberal
								}
							}
						}
						has_ideology = ideology:ideology_agitator_pro_human_rights
					}
					AND = {
						owner.ruler = {
							OR = {
								has_ideology = ideology:ideology_autocratic
								has_ideology = ideology:ideology_power_hungry
							}
						}
						has_ideology = ideology:ideology_agitator_anti_human_rights
					}
					AND = {
						owner ?= {
							is_at_war = yes
						}
						has_ideology = ideology:ideology_agitator_pro_war_rights
					}
				}
			}
		}
		
	}

	effect = {
		this.interest_group = {
			save_scope_as = relevant_ig
		}
		this = {
			save_scope_as = exile_scope
		}
		owner ?= {
			save_scope_as = exiling_country_scope
			change_infamy = 5
		}
		if = {
			limit = {
				has_role = politician
			}
			owner ?= {
				scope:relevant_ig = {
					add_modifier = {
						name = modifier_exiled_leader
						days = normal_modifier_time
						is_decaying = yes
					}
				}
			}
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = { has_role = agitator }
				}
				add_character_role = agitator
			}
			if = {
				limit = {
					has_role = general
				}
				remove_character_role = general
			}
			if = {
				limit = {
					has_role = admiral
				}
				remove_character_role = admiral
			}
			if = {
				limit = {
					has_role = politician
				}
				set_as_interest_group_leader = no
				remove_character_role = politician
			}
		}
		owner ?= {
			custom_tooltip = exiling_dissident_radicals_factors
		}
		# Extra radical from exiling a popular character
		if = {
			limit = {
				popularity >= 50
			}
			owner ?= {
				add_radicals = {
					value = small_radicals
					interest_group = scope:relevant_ig
				}
			}
		}
		# Standard radicals from having Right of Assembly
		if = {
			limit = {
				owner ?= { has_law = law_type:law_limited_free_speech }
			}
			owner ?= {
				add_radicals = {
					value = medium_radicals
					interest_group = scope:relevant_ig
				}
			}
		}
		# Fewer radicals from Censorship
		else_if = {
			limit = {
				owner ?= { has_law = law_type:law_censorship }
			}
			owner ?= {
				add_radicals = {
					value = small_radicals
					interest_group = scope:relevant_ig
				}
			}
		}
		# Boring characters should be made interesting when being exiled
		#if = {
		#	limit = {
		#		has_ideology = ideology:ideology_elitist
		#	}
		#	random_list = { 
		#		1 = {
		#			set_ideology = ideology:ideology_power_hungry
		#		}
		#		1 = {
		#			set_ideology = ideology:ideology_autocratic
		#		}
		#	}
		#}
		hidden_effect = {
			if = {
				limit = {
					popularity > 15
				}
				add_modifier = {
					name = in_exile_modifier
				}
				every_country = {
					limit = {
						has_diplomatic_relevance = scope:exiling_country_scope
					}
					post_notification = exile_notification
				}
			}
			else = {
				add_modifier = {
					name = in_exile_modifier
					multiplier = 3
				}
			}
		}
		hidden_effect = {
			convert_IG_ideology_to_agitator_ideology = yes
		}
		custom_tooltip = {
			text = exile_dissident_tt
			exile_character_with_martyrdom = yes
		}
	}

	cooldown = { days = normal_modifier_time }
	show_confirmation_box = yes

	ai_chance = {
		value = -50
		if = {
			limit = {
				is_historical = yes
			}
			add = -1000
		}
		if = {
			limit = {
				interest_group = {
					ig_approval <= -5
				}		
			}
			add = 25
		}
		if = {
			limit = {
				interest_group = {
					ig_approval <= -10
				}		
			}
			add = 30
		}
		if = {
			limit = {
				scope:actor ?= {
					NOR = {
						has_law = law_type:law_appointed_legislature
						has_law = law_type:law_technocratic_legislature
						has_law = law_type:law_parties_not_allowed
						has_law = law_type:law_single_party_state
					}
				}			
			}
			add = -25
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_secret_police
				}			
			}
			add = 30
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_national_militia
				}			
			}
			add = 15
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_full_free_speech
				}			
			}
			add = -100
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_outlawed_dissent
				}			
			}
			add = 30
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_censorship
				}			
			}
			add = 10
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_limited_free_speech
				}			
			}
			add = -10
		}
		if = {
			limit = {
				scope:actor ?= {
					has_law = law_type:law_full_free_speech
				}			
			}
			add = -20
		}
	}
}

invite_exile = {
	# icon = ""
	clicksound = "event:/SFX/DLC/1.3_ip1/UI/character_invite"

	# Checks against actor country scope and skips the interaction completely if false, before even looking at any characters
	should_ai_evaluate = {
		empty_agitator_slots >= 1
	}

	potential = {
		is_in_exile_pool = yes
	}

	show_requirements = yes
	
	# required for AI to evaluate if interaction is possible on characters in exile pool
	ai_considers_exiles = yes

	possible = {
		scope:actor ?= { empty_agitator_slots >= 1 }
		# Devout exiles must have country religion
		trigger_if = {
			limit = {
				is_interest_group_type = ig_devout
			}
		    custom_tooltip = {
		        text = invite_exile_devout_tt
		        religion = scope:actor.religion
		    }
		}
		# If you have state religion, exiles must have your religion
		trigger_if = {
			limit = {
				NOT = { is_interest_group_type = ig_devout }
				scope:actor ?= {
					has_law = law_type:law_state_religion
				}
			}
			custom_tooltip = {
				text = invite_exile_state_religion_tt
				religion = scope:actor.religion
			}
		}
		# cannot invite culturally discriminated exiles
		character_acceptance = { target = scope:actor value >= acceptance_status_3 }
		# Cannot invite exiles if you have Closed Borders
		scope:actor ?= {
			NOT = { has_law = law_type:law_closed_borders }
		}
		# Agitator must be able to start or join a movement
		can_agitate = scope:actor
	}

	effect = {
		transfer_character = scope:actor
		set_variable = exile_to_ruler_var
		custom_tooltip = invite_exile_start_join_movement_effect
		hidden_effect = {
			remove_modifier = in_exile_modifier
		}
		hidden_effect = {
			if = {
				limit = {
					exists = root.home_country
					NOT = { root.home_country = scope:actor }
				}
				if = {
					limit = {
						root.home_country = {
							any_interest_group = {
								is_in_government = yes
								OR = {
									this.type = root.interest_group_type
									this.leader.ideology = root.ideology
								}
							}
						}
					}
					root.home_country = {
						create_diplomatic_catalyst = {
							type = catalyst_invited_exile_positive
							target = scope:actor
						}		
					}
				}
				else = {
					root.home_country = {
						create_diplomatic_catalyst = {
							type = catalyst_invited_exile_negative
							target = scope:actor
						}		
					}
				}
			}
		}
	}

	cooldown = { days = normal_modifier_time }

	ai_chance = {
		value = -85
		if = {
			limit = {
				popularity >= 75
			}
			add = 25
		}	
		if = {
			limit = {
				popularity >= 50
			}
			add = 25
		}
		if = {
			limit = {
				culture = {
					is_primary_culture_of = root
				}			
			}
			add = 50
		}
		if = {
			limit = {
				scope:actor ?= {
					any_interest_group = {
						is_in_government = yes
						save_temporary_scope_as = ex_ig
					}
				}		
				ig_type_matches_former = yes	
			}
			add = 50
		}
		if = {
			limit = {
				scope:actor ?= { has_law = law_type:law_closed_borders }
			}
			add = -200
		}
		if = {
			limit = {
				scope:actor ?= { has_law = law_type:law_no_migration_controls }
			}
			add = 15
		}
		if = {
			limit = {
				scope:actor ?= { has_law = law_type:law_multicultural }
			}
			add = 15
		}
		if = { 
			limit = {
				scope:actor ?= {
					country_rank < rank_value:major_power
				}
			}
			multiply = 0
		}
	}
}

retire_commander = {
	# icon = ""
	clicksound = "event:/SFX/UI/Military/commander_retire"

	potential = {
		owner ?= scope:actor
		is_commander = yes
		is_ruler = no
	}

	possible = {
		is_ruler = no
		interest_group = {
			is_insurrectionary = no
		}
		commander_is_available = yes
		years_of_service >= 1
	}

	effect = {
		hidden_effect = {
			if = {
				limit = {
					has_role = general
				}
				remove_character_role = general
			}
			if = {
				limit = {
					has_role = admiral
				}
				remove_character_role = admiral
			}
		}

		interest_group = {
			add_modifier = {
				name = retired_commander_interest_group_impact
				multiplier = {
					value = root.popularity
					divide = 100
					add = 1
					min = 1
					multiply = root.commander_rank
					round = 1
				}
				years = 5
				is_decaying = yes
			}
		}

	}

	show_confirmation_box = yes

	ai_chance = {
		value = -50
		if = {
			limit = {
				popularity <= -50
			}
			add = 25
		}
		if = {
			limit = {
				popularity <= -75			
			}
			add = 25
		}
		if = {
			limit = {
				age >= 75
			}
			add = 50
		}
		if = {
			limit = {
				OR = {	
					has_trait = psychological_affliction
					has_trait = syphilis
					has_trait = wounded
					has_trait = kidney_stones
				}
			}
			add = 25
		}
		if = {
			limit = {
				OR = {	
					has_trait = alcoholic
					has_trait = cocaine_addiction
					has_trait = opium_addiction
				}
			}
			add = 25
		}
		if = {
			limit = {
				has_trait = shellshocked
			}
			add = 25
		}
		if = {
			limit = {
				OR = {	
					has_trait = trench_rat
					has_trait = stalwart_defender
					has_trait = defense_in_depth_specialist
				}
			}
			add = -100
		}
		if = {
			limit = {
				OR = {	
					has_trait = expert_convoy_raider
					has_trait = expert_artillery_commander
					has_trait = expert_offensive_planner
					has_trait = expert_defensive_strategist
					has_trait = expert_naval_commander
				}
			}
			add = -75
		}
		if = {
			limit = {
				OR = {	
					has_trait = experienced_convoy_raider
					has_trait = experienced_artillery_commander
					has_trait = experienced_offensive_planner
					has_trait = experienced_defensive_strategist
					has_trait = experienced_naval_commander
				}			
			}
			add = -50
		}
		if = {
			limit = {		
				owner ?= {
					OR = {
						is_diplomatic_play_committed_participant = yes
						is_at_war = yes
					}
				}	
			}
			add = -50
		}
		if = {
			limit = {
				owner ?= {
					any_scope_war = {
						any_scope_front = {
							is_vulnerable_front = root
						}
					}
				}
			}
			add = -150
		}
	}
}

return_to_home_country = {
	
	potential = {
	
		NOT = { has_modifier = unsg_character }
	
		is_in_exile_pool = no
		has_role = agitator
		NOT = { has_role = general }
		NOT = { has_role = admiral }
		NOT = { has_role = politician }
		is_ruler = no
		is_heir = no
		exists = root.home_country
		NOT = { root.home_country = this.owner }
	}

	show_requirements = yes

	possible = {
		home_country = {
			empty_agitator_slots >= 1
		}
		can_agitate = root.home_country
		owner ?= {
			has_diplomatic_pact = {
				type = rivalry
				who = root.home_country
			}
		}
	}

	effect = {
		this = {
			save_scope_as = repatriated_scope
		}
		owner ?= {
			save_scope_as = repatriator_country_scope
		}
		home_country = {
			save_scope_as = home_country_scope
		}
		transfer_character = home_country
		home_country = {
			trigger_event = { id = exiles_events.100 }
		}
	}

	cooldown = { months = short_modifier_time }
	show_confirmation_box = yes

	ai_chance = {
		value = -50
	}
}

foster_national_agitation = {
	potential = {
	
		NOT = { has_modifier = unsg_character }
	
		is_in_exile_pool = no
		has_role = agitator
		owner ?= scope:actor
		owner ?= {
			any_primary_culture = {
				this = root.culture
			}
			#has_technology_researched = nationalism
		}
	}

	show_requirements = yes

	possible = {
		root.culture = {
			save_temporary_scope_as = agitator_culture
		}
		this.interest_group = {
			is_in_government = yes
		}
		any_state = {
			this.state_region ?= {
				is_homeland = root.culture
			}
			custom_tooltip = {
				text = is_rival_of_owner_tt
				OR = {
					owner ?= {
						has_diplomatic_pact = {
							who = root.owner
							type = rivalry
						}
					}
					root.owner ?= {
						has_diplomatic_pact = {
							who = prev.owner
							type = rivalry
						}
					}
				}
			}
			custom_tooltip = {
				text = not_homeland_of_states_tt
				owner ?= {
					NOR = {
						this = root.owner
						any_primary_culture = {
							this = root.culture
						}
					}
				}
			}
		}
	}

	effect = {
		root.culture = {
			save_scope_as = agitation_culture
		}
		root.owner ?= {
			save_scope_as = agitation_sponsor
		}
		random_state = {
			limit = {
				state_region = {
					is_homeland = root.culture
				}
				OR = {
					owner ?= {
						has_diplomatic_pact = {
							who = root.owner
							type = rivalry
						}
					}
					root.owner ?= {
						has_diplomatic_pact = {
							who = prev.owner
							type = rivalry
						}
					}
				}
				owner ?= {
					NOR = {
						this = root.owner
						any_primary_culture = {
							this = root.culture
						}
					}
				}
			}
			save_scope_as = agitation_state
			add_radicals_in_state = {
				culture = root.culture
				value = large_radicals
			}
			owner ?= {
				post_notification = nationalism_national_agitation_occurred
				change_relations = {
					country = root.owner value = -10
				}
			}
		}
	}

	cooldown = { months = short_modifier_time }

	ai_chance = {
		value = 100
	}
}